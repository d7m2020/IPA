{"version":3,"file":"netways-lib.umd.js.map","sources":["ng://netways-lib/lib/services/bridge.service.ts",null,"ng://netways-lib/lib/services/datepicker-calendar.service.ts","ng://netways-lib/lib/services/export.service.ts","ng://netways-lib/lib/services/http-requests.service.ts","ng://netways-lib/lib/services/local-storage.service.ts","ng://netways-lib/lib/services/language.service.ts","ng://netways-lib/lib/services/utilities.service.ts","ng://netways-lib/lib/models/all-fields.ts","ng://netways-lib/lib/models/configuration.ts","ng://netways-lib/lib/models/default-location.ts","ng://netways-lib/lib/models/endpoints.ts","ng://netways-lib/lib/models/enums.ts","ng://netways-lib/lib/models/field.ts","ng://netways-lib/lib/models/field-data.ts","ng://netways-lib/lib/models/field-validation.ts","ng://netways-lib/lib/models/input-error.ts","ng://netways-lib/lib/models/map-marker.ts","ng://netways-lib/lib/models/marker-settings.ts","ng://netways-lib/lib/models/market-settings-default.ts","ng://netways-lib/lib/models/master-detail-details.ts","ng://netways-lib/lib/models/notifications.ts","ng://netways-lib/lib/models/section.ts","ng://netways-lib/lib/models/settings.ts","ng://netways-lib/lib/models/response-event-args.ts","ng://netways-lib/lib/components/controls/time-control/w-clock/w-clock.component.ts","ng://netways-lib/lib/components/controls/time-control/w-time-dialog/w-time-dialog.component.ts","ng://netways-lib/lib/components/controls/time-control/w-mat-timepicker/w-mat-timepicker.component.ts","ng://netways-lib/lib/components/controls/time-control/w-time/w-time.component.ts","ng://netways-lib/lib/components/field-templates/field/field.component.ts","ng://netways-lib/lib/components/field-templates/boundable-field/boundable-field.component.ts","ng://netways-lib/lib/components/field-templates/checkbox-field/checkbox-field.component.ts","ng://netways-lib/lib/components/field-templates/chips-field/chips-field.component.ts","ng://netways-lib/lib/components/field-templates/datetime-field/datetime-field.component.ts","ng://netways-lib/lib/components/field-templates/datetime-hijri-field/datetime-hijri-field.component.ts","ng://netways-lib/lib/components/field-templates/editor-field/editor-field.component.ts","ng://netways-lib/lib/components/field-templates/file-upload-field/file-upload-field.component.ts","ng://netways-lib/lib/components/field-templates/image-cropper-field/image-cropper-field.component.ts","ng://netways-lib/lib/components/field-templates/info-field/info-field.component.ts","ng://netways-lib/lib/components/field-templates/input-field/input-field.component.ts","ng://netways-lib/lib/components/field-templates/location-field/location-field.component.ts","ng://netways-lib/lib/components/field-templates/mask-field/mask-field.component.ts","ng://netways-lib/lib/components/form-part-templates/default-master-detail-form/default-master-detail-form.component.ts","ng://netways-lib/lib/components/field-templates/master-detail-field/master-detail-field.component.ts","ng://netways-lib/lib/components/field-templates/multi-select-field/multi-select-field.component.ts","ng://netways-lib/lib/components/field-templates/radiobutton-field/radiobutton-field.component.ts","ng://netways-lib/lib/components/field-templates/rating-field/rating-field.component.ts","ng://netways-lib/lib/components/field-templates/select-field/select-field.component.ts","ng://netways-lib/lib/components/field-templates/time-field/time-field.component.ts","ng://netways-lib/lib/components/field-templates/recaptcha-field/recaptcha-field.component.ts","ng://netways-lib/lib/components/form-part-templates/next-previous-section/next-previous-section.component.ts","ng://netways-lib/lib/components/form-part-templates/tabs-section/tabs-section.component.ts","ng://netways-lib/lib/components/form-part-templates/validation-summary/validation-summary.component.ts","ng://netways-lib/lib/components/form-part-templates/progress-indicator/progress-indicator.component.ts","ng://netways-lib/lib/components/dynamic-form/dynamic-form.component.ts","ng://netways-lib/lib/netways-lib.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Configuration } from '../models';\r\nimport { NetwaysLibModule } from '../netways-lib.module';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class BridgeService {\r\n  /** @property The configuration.*/\r\n  public configuration: Configuration;\r\n\r\n  /** @property The parent component hosting the dynamic form.*/\r\n  public parentComponent: any;\r\n\r\n  /** @property The additional parameters.*/\r\n  public additionalParameters: any;\r\n\r\n  constructor() { }\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { NgbDateStruct, NgbDatepickerI18n } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nconst I18N_VALUES = {\r\n  weekdays: ['Ø¥Ø«', 'Ø«Ù', 'Ø£Ø±', 'Ø®Ù', 'Ø¬Ù', 'Ø³Ø¨', 'Ø£Ø­'],\r\n  months: ['ÙØ­Ø±Ù', 'ØµÙØ±', 'Ø±Ø¨ÙØ¹ Ø§ÙØ£ÙÙ', 'Ø±Ø¨ÙØ¹ Ø§ÙØ¢Ø®Ø±', 'Ø¬ÙØ§Ø¯Ù Ø§ÙØ£ÙÙÙ', 'Ø¬ÙØ§Ø¯Ù Ø§ÙØ¢Ø®Ø±Ø©', 'Ø±Ø¬Ø¨', 'Ø´Ø¹Ø¨Ø§Ù', 'Ø±ÙØ¶Ø§Ù', 'Ø´ÙØ§Ù',\r\n    'Ø°Ù Ø§ÙÙØ¹Ø¯Ø©', 'Ø°Ù Ø§ÙØ­Ø¬Ø©']\r\n};\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class IslamicI18n extends NgbDatepickerI18n {\r\n  /** @description Gets the weekday short name.\r\n   * @param number weekday The weekday.\r\n   * @return string The weekday short name.\r\n  */\r\n  public getWeekdayShortName(weekday: number): string {\r\n    return I18N_VALUES.weekdays[weekday - 1];\r\n  }\r\n\r\n  /** @description Gets the weekday short name.\r\n   * @param number month The month.\r\n   * @return string The month short name.\r\n  */\r\n  public getMonthShortName(month: number): string {\r\n    return I18N_VALUES.months[month - 1];\r\n  }\r\n\r\n  /** @description Gets the month full name.\r\n   * @param number month The month.\r\n   * @return string The month full name.\r\n  */\r\n  public getMonthFullName(month: number): string {\r\n    return this.getMonthShortName(month);\r\n  }\r\n\r\n  /** @description Gets the day aria label.\r\n   * @param NgbDateStruct date The date.\r\n   * @return string The day aria label.\r\n  */\r\n  public getDayAriaLabel(date: NgbDateStruct): string {\r\n    return `${date.day}-${date.month}-${date.year}`;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport * as FileSaver from 'file-saver';\r\nimport * as XLSX from 'xlsx';\r\n\r\nconst excelExtension = '.xlsx';\r\nconst pdfType = 'application/pdf';\r\nconst pdfExtension = '.pdf';\r\n\r\ndeclare let html2canvas, pdfMake;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ExportService {\r\n  constructor() { }\r\n\r\n  /** @description Exports a json object as an excel file.\r\n   * @param any json The json object.\r\n   * @param string fileName The excel file name.\r\n   * @param boolean rtl Whether right to left or left to right.\r\n   * @param boolean skipHeader Whether to skip the header.\r\n  */\r\n  public exportAsExcel(json: any[], fileName: string, rtl: boolean = true, skipHeader: boolean = false) {\r\n    // generate worksheet\r\n    const worksheet: XLSX.WorkSheet = XLSX.utils.json_to_sheet(json, { skipHeader: skipHeader });\r\n\r\n    const workbook: XLSX.WorkBook = XLSX.utils.book_new();\r\n\r\n    if (!workbook.Workbook) {\r\n      workbook.Workbook = {};\r\n    }\r\n\r\n    if (!workbook.Workbook.Views) {\r\n      workbook.Workbook.Views = [];\r\n    }\r\n\r\n    if (!workbook.Workbook.Views[0]) {\r\n      workbook.Workbook.Views[0] = {};\r\n    }\r\n\r\n    workbook.Workbook.Views[0].RTL = rtl;\r\n\r\n    // generate workbook and add the worksheet\r\n    XLSX.utils.book_append_sheet(workbook, worksheet, 'data');\r\n\r\n    // save to file *\r\n    XLSX.writeFile(workbook, fileName + '_' + new Date().getTime() + excelExtension);\r\n  }\r\n\r\n  /** @description Exports an html string as pdf.\r\n    * @param string html The html to print.\r\n    * @param Array<number> margins The pdf page margins.\r\n    * @param string fileName The pdf file name.\r\n    * @param any size The pdf size.\r\n  */\r\n  public exportAsPdf(html: string, fileName: string, size: any = 'A4', margins: Array<number> = [0, 0]) {\r\n    if (html) {\r\n      html2canvas(html).then(canvas => {\r\n        const dataUri = canvas.toDataURL();\r\n\r\n        const docDefinition = {\r\n          pageSize: size,\r\n          pageMargins: margins,\r\n          content: [\r\n            {\r\n              image: dataUri\r\n            }\r\n          ]\r\n        };\r\n\r\n        pdfMake.createPdf(docDefinition).getBlob((file) => {\r\n          this.promptFileSave(file, pdfType, fileName, pdfExtension);\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  /** @description Exports a file as pdf.\r\n   * @param any buffer The file buffer.\r\n   * @param string fileType The file mime type.\r\n   * @param string fileName The file name.\r\n   * @param string fileExtension The file extension.\r\n  */\r\n  public promptFileSave(buffer: any, fileType: string, fileName: string, fileExtension: string) {\r\n    const data: Blob = new Blob([buffer], {\r\n      type: fileType\r\n    });\r\n\r\n    FileSaver.saveAs(data, fileName + '_' + new Date().getTime() + fileExtension);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class HttpRequestsService {\r\n  constructor(protected httpClient: HttpClient) { }\r\n\r\n  /** @description Executes a get request and returns the response.\r\n   * @param string endpointUrl The endpoint Url.\r\n   * @return Observable<any> The response.\r\n  */\r\n  public get(endpointUrl: string): Observable<any> {\r\n    const httpHeaders = new HttpHeaders();\r\n\r\n    return this.httpClient.get<any>(endpointUrl, { headers: httpHeaders });\r\n  }\r\n\r\n  /** @description Executes a post request and returns the response.\r\n   * @param string endpointUrl The endpoint Url.\r\n   * @param any request The request payload.\r\n   * @return Observable<any> The response.\r\n  */\r\n  public post(endpointUrl: string, request: any): Observable<any> {\r\n    const httpHeaders = new HttpHeaders();\r\n\r\n    return this.httpClient.post<any>(endpointUrl, request, { headers: httpHeaders });\r\n  }\r\n\r\n  /** @description Executes a put request and returns the response.\r\n   * @param string endpointUrl The endpoint Url.\r\n   * @param any request The request payload.\r\n   * @return Observable<any> The response.\r\n  */\r\n  public put(endpointUrl: string, request: any): Observable<any> {\r\n    const httpHeaders = new HttpHeaders();\r\n\r\n    return this.httpClient.put<any>(endpointUrl, request, { headers: httpHeaders });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class LocalStorageService {\r\n  constructor() { }\r\n\r\n  /** @description Checks a record exists in the local storage.\r\n   * @param string key The key.\r\n   * @return boolean Whether the record exists.\r\n  */\r\n  public doesKeyExist(key: string): boolean {\r\n    return localStorage.getItem(key) != null;\r\n  }\r\n\r\n  /** @description Saves a record in the local storage.\r\n   * @param string key The key.\r\n   * @param any data The record data.\r\n  */\r\n  public save(key: string, data: any) {\r\n    data = JSON.stringify(data);\r\n\r\n    localStorage.setItem(key, data);\r\n  }\r\n\r\n  /** @description Loads a record from the local storage.\r\n   * @param string key The key.\r\n   * @return any data The record data.\r\n  */\r\n  public load(key: string): any {\r\n    const data = localStorage.getItem(key);\r\n\r\n    return JSON.parse(data);\r\n  }\r\n\r\n  /** @description Loads a record from the local storage if it exists.\r\n   * Alternatively returns a default value if not found.\r\n   * @param string key The key.\r\n   * @param any defaultValue The default value.\r\n   * @return any data The record data.\r\n  */\r\n  public loadOrDefault(key: string, defaultValue: any): any {\r\n    let value = this.load(key);\r\n\r\n    if (!value) {\r\n      value = defaultValue;\r\n    }\r\n\r\n    return value;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { TranslateService, LangChangeEvent } from '@ngx-translate/core';\r\nimport { LocalStorageService } from './local-storage.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class LanguageService {\r\n  /** @property The saved language.*/\r\n  public savedLanguage = this.localStorage.loadOrDefault('Language', 'en');\r\n\r\n  /** @property The translations.*/\r\n  public translations: any;\r\n\r\n  constructor(\r\n    public translate: TranslateService,\r\n    public localStorage: LocalStorageService\r\n  ) {\r\n    this.translate.onLangChange.subscribe((event: LangChangeEvent) => {\r\n      this.setLanguage(event.lang);\r\n\r\n      this.translations = event.translations;\r\n    });\r\n  }\r\n\r\n  /** @description Sets the language.\r\n   * @param string language The language.\r\n  */\r\n  public setLanguage(language: string) {\r\n    this.translate.use(language);\r\n\r\n    this.savedLanguage = language;\r\n\r\n    this.localStorage.save('Language', language);\r\n  }\r\n\r\n  /** @description Gets the language.*/\r\n  public getLanguage() {\r\n    return this.localStorage.loadOrDefault('Language', 'en');\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpRequestsService } from './http-requests.service';\r\nimport { LocalStorageService } from './local-storage.service';\r\nimport { LanguageService } from './language.service';\r\nimport { BridgeService } from './bridge.service';\r\n\r\ndeclare let fieldEvalFunctions;\r\n\r\nconst functionToken: string = 'Function:';\r\n\r\n// regex for replacing addition symbol with a space\r\nconst spaceRegex = /\\+/g;\r\n\r\n// regex to match query strings\r\nconst queryStringRegex = /([^&=]+)=?([^&]*)/g;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class UtilitiesService {\r\n  constructor(\r\n    private bridgeService: BridgeService,\r\n    private httpRequestsService: HttpRequestsService,\r\n    private localStorageService: LocalStorageService,\r\n    private languageService: LanguageService\r\n  ) { }\r\n\r\n  /** @description Evaluates a funtion from its string representation.\r\n   * Alternatively returns a default value if not found.\r\n   * @param string functionString The function string.\r\n   * @param any defaultValue The default value.\r\n   * @return any The funtion evaluation result.\r\n  */\r\n  public evaluateFunctionOrDefault(functionString: string, defaultValue: any): any {\r\n    if (functionString.indexOf(functionToken) >= 0) {\r\n      functionString = functionString.replace(functionToken, '');\r\n\r\n      let jsFunctionName, jsFunctionParameters = null;\r\n\r\n      if (functionString.indexOf(',') >= 0) {\r\n        const functionTokens = functionString.split(',');\r\n\r\n        jsFunctionName = functionTokens[0];\r\n\r\n        functionTokens.shift();\r\n\r\n        jsFunctionParameters = functionTokens;\r\n      } else {\r\n        jsFunctionName = functionString;\r\n      }\r\n\r\n      const jsFunction = fieldEvalFunctions[jsFunctionName];\r\n\r\n      if (jsFunction) {\r\n        return jsFunction(jsFunctionParameters, jsFunctionParameters);\r\n      } else {\r\n        return defaultValue;\r\n      }\r\n    } else {\r\n      return defaultValue;\r\n    }\r\n  }\r\n\r\n  /** @description Attempts to load a file from local storage.\r\n   * If not found it gets it as a web request.\r\n   * @param string key The key. It is both the storage key or the web url.\r\n   * @return any The loaded file.\r\n  */\r\n  public async loadFile(key) {\r\n    let file = null;\r\n\r\n    if (this.localStorageService.doesKeyExist(key)) {\r\n      file = this.localStorageService.load(key);\r\n\r\n      file.isLocal = true;\r\n    } else {\r\n      file = this.httpRequestsService.get(key).toPromise();\r\n    }\r\n\r\n    return file;\r\n  }\r\n\r\n  /** @description Recursively merge properties of two objects from right to left.\r\n   * @param any object1 The left object.\r\n   * @param any object2 The right object.\r\n   * @return any The merged object.\r\n  */\r\n  public mergeRecursive(object1: any, object2: any): any {\r\n    for (const item in object2) {\r\n      if (object2.hasOwnProperty(item)) {\r\n        try {\r\n          // property in destination object set; update its value.\r\n          if (object2[item].constructor === Object) {\r\n            object1[item] = this.mergeRecursive(object1[item], object2[item]);\r\n          } else {\r\n            object1[item] = object2[item];\r\n          }\r\n        } catch (e) {\r\n          // property in destination object not set; create it and set its value.\r\n          object1[item] = object2[item];\r\n        }\r\n      }\r\n    }\r\n\r\n    return object1;\r\n  }\r\n\r\n  /** @description Returns the string with its tokens replaced.\r\n   * @param string input The string input.\r\n   * @param any route The route.\r\n   * @param any additionalParameters The additional parameters.\r\n   * @return string The string with its tokens replaced.\r\n  */\r\n  public replaceTokens(input: string, route: any, additionalParameters: any): string {\r\n    input = input.replace('{languageToken}', this.languageService.savedLanguage);\r\n\r\n    if (route && route.params) {\r\n      input = this.replaceTokensFromParameters(input, route.params.value);\r\n    }\r\n\r\n    input = this.replaceTokensFromParameters(input, this.getQueryStringParameters());\r\n\r\n    input = this.replaceTokensFromParameters(input, this.bridgeService.configuration.settings.baseEndPointUrls);\r\n\r\n    if (additionalParameters) {\r\n      input = this.replaceTokensFromParameters(input, additionalParameters);\r\n    }\r\n\r\n    return input;\r\n  }\r\n\r\n  /** @description Gets the string with its tokens replaced.\r\n    * @param string input The string input.\r\n    * @param any parameters The parameters.\r\n    * @return string The string with its tokens replaced.\r\n  */\r\n  private replaceTokensFromParameters(input: string, parameters: any): string {\r\n    for (const key in parameters) {\r\n      if (parameters.hasOwnProperty(key)) {\r\n\r\n        const paramValue = parameters[key];\r\n\r\n        input = input.replace('{' + key + '}', paramValue);\r\n      }\r\n    }\r\n\r\n    return input;\r\n  }\r\n\r\n  /** @description Gets the query string parameters.\r\n    * @return object The query string parameters.\r\n  */\r\n  private getQueryStringParameters(): object {\r\n    const urlParameters = {};\r\n\r\n    const query = window.location.search.substring(1);\r\n\r\n    let match;\r\n\r\n    while (match = queryStringRegex.exec(query)) {\r\n      urlParameters[this.decodeURIComponent(match[1])] = this.decodeURIComponent(match[2]);\r\n    }\r\n\r\n    return urlParameters;\r\n  }\r\n\r\n  /** @description Decodes a URI Component.\r\n    * @param string input The string input.\r\n    * @return string The decoded URI Component.\r\n  */\r\n  private decodeURIComponent(input: string): string {\r\n    return decodeURIComponent(input.replace(spaceRegex, ' '));\r\n  }\r\n}\r\n","import { Field } from '.';\r\n\r\nexport class AllFields {\r\n  isLocal: boolean;\r\n\r\n  fields: Array<Field>;\r\n}\r\n","import { Settings, Endpoints, Notifications, Section, Field, InputError } from '.';\r\n\r\nexport class Configuration {\r\n  settings: Settings;\r\n\r\n  endpoints: Endpoints;\r\n\r\n  notifications: Notifications;\r\n\r\n  sections: Array<Section>;\r\n\r\n  currentSection: Section;\r\n\r\n  fields: any;\r\n\r\n  mergedFields: Array<Field>;\r\n\r\n  validationErrors: Array<InputError>;\r\n\r\n  isLocal: boolean = false;\r\n\r\n  buttons: any;\r\n}\r\n","export class DefaultLocation {\r\n  latitude: number;\r\n\r\n  longitude: number;\r\n}\r\n","export class Endpoints {\r\n  get: string;\r\n\r\n  save: string;\r\n\r\n  submit: string;\r\n\r\n  lookups: object;\r\n}\r\n","import { SweetAlertType } from 'sweetalert2';\r\n\r\nexport class FormModes {\r\n  public static New = 'New';\r\n  public static Display = 'Display';\r\n  public static Edit = 'Edit';\r\n}\r\n\r\nexport class ValidationSummaryModes {\r\n  public static None = 'None';\r\n  public static Alert = 'Alert';\r\n  public static List = 'List';\r\n}\r\n\r\nexport class SectionModes {\r\n  public static None = 'None';\r\n  public static Tabs = 'Tabs';\r\n  public static NextPrevious = 'NextPrevious';\r\n}\r\n\r\nexport class PostModes {\r\n  public static FormData = 'FormData';\r\n  public static FormBody = 'FormBody';\r\n}\r\n\r\nexport class SwalTypes {\r\n  public static Warning: SweetAlertType = 'warning';\r\n  public static Error: SweetAlertType = 'error';\r\n  public static Success: SweetAlertType = 'success';\r\n  public static Info: SweetAlertType = 'info';\r\n  public static Question: SweetAlertType = 'question';\r\n}\r\n\r\nexport class FieldTypes {\r\n  public static Info = 'info';\r\n  public static Text = 'text';\r\n  public static DateTime = 'datetime';\r\n  public static DateTimeHijri = 'datetimehijri';\r\n  public static RadioButton = 'radiobutton';\r\n  public static Select = 'select';\r\n  public static Password = 'password';\r\n  public static Number = 'number';\r\n  public static MultiSelect = 'multiselect';\r\n  public static Checkbox = 'checkbox';\r\n  public static FileUpload = 'fileupload';\r\n  public static Chips = 'chips';\r\n  public static Editor = 'editor';\r\n  public static Recaptcha = 'recaptcha';\r\n  public static Time = 'time';\r\n  public static Location = 'location';\r\n  public static ImageCropper = 'imagecropper';\r\n  public static Rating = 'rating';\r\n  public static MasterDetail = 'masterdetail';\r\n}\r\n","import { FieldData, FieldValidation, InputError, DefaultLocation, MarkerSettings, MasterDetailDetails } from '.';\r\nimport { CropperSettings } from 'ng2-img-cropper';\r\n\r\nexport class Field {\r\n  fieldType: string;\r\n\r\n  name: string;\r\n\r\n  sectionId: number;\r\n\r\n  hidden: boolean;\r\n\r\n  data: FieldData;\r\n\r\n  validation: FieldValidation;\r\n\r\n  validationErrors: Array<InputError>;\r\n\r\n  label: string;\r\n\r\n  tooltip: string;\r\n\r\n  eventTriggers: any;\r\n\r\n  cssClasses: any;\r\n\r\n  readonly: boolean;\r\n\r\n  disabled: boolean;\r\n\r\n  placeholder: string;\r\n\r\n  autoComplete: string;\r\n\r\n  // datetime - hijri - time\r\n  minDate: string;\r\n\r\n  maxDate: string;\r\n\r\n  defaultDate: string;\r\n\r\n  minDateValue: Date;\r\n\r\n  maxDateValue: Date;\r\n\r\n  defaultDateValue: Date;\r\n\r\n  yearRange: string;\r\n\r\n  setTime: string;\r\n\r\n  showIcon: boolean;\r\n\r\n  dateFormat: string;\r\n\r\n  monthNavigator: boolean;\r\n\r\n  yearNavigator: boolean;\r\n\r\n  hourFormat: string;\r\n\r\n  showTime: boolean;\r\n\r\n  displayDateFormat: string;\r\n\r\n  formDataDateFormat: string;\r\n\r\n  displayMonths: number;\r\n\r\n  outsideDays: string;\r\n\r\n  showWeekdays: boolean;\r\n\r\n  showWeekNumbers: boolean;\r\n\r\n  // location\r\n  defaultLocation: DefaultLocation;\r\n\r\n  markerSettings: MarkerSettings;\r\n\r\n  zoom: number;\r\n\r\n  zoomControl: boolean;\r\n\r\n  // recaptcha\r\n  siteKey: string;\r\n\r\n  size: string;\r\n\r\n  theme: string;\r\n\r\n  // info\r\n  htmlSnippet: string;\r\n\r\n  // imagecropper\r\n  cropperSettings: CropperSettings;\r\n\r\n  // rating\r\n  iconCancelClass: string;\r\n\r\n  iconOnClass: string;\r\n\r\n  iconOffClass: string;\r\n\r\n  cancelIcon: boolean;\r\n\r\n  starNumber: number;\r\n\r\n  // printing\r\n  html2CanvasIgnore: boolean;\r\n\r\n  // masterdetail\r\n  details: MasterDetailDetails;\r\n\r\n  // select\r\n  enablefilter: boolean;\r\n\r\n  // chips\r\n  addOnTab: boolean;\r\n\r\n  addOnBlur: boolean;\r\n\r\n  // editor\r\n  height: string;\r\n\r\n  showToolbar: boolean;\r\n\r\n  // mask\r\n  slotChar: string;\r\n\r\n  autoClear: boolean;\r\n\r\n  unmask: boolean;\r\n\r\n  characterPattern: string;\r\n\r\n  // fileupload\r\n  auto: boolean;\r\n\r\n  mode: string;\r\n\r\n  multiple: boolean;\r\n\r\n  buttons: any;\r\n}\r\n","export class FieldData {\r\n  value: any;\r\n\r\n  options: Array<any>;\r\n\r\n  allOptions: Array<any>;\r\n\r\n  optionsEndpoint: string;\r\n\r\n  dateValue: string;\r\n\r\n  url: string;\r\n}\r\n","export class FieldValidation {\r\n  required: boolean;\r\n\r\n  min: number;\r\n\r\n  max: number;\r\n\r\n  length: number;\r\n\r\n  pattern: string;\r\n\r\n  requiredText: string;\r\n\r\n  patternText: string;\r\n\r\n  rangeText: string;\r\n\r\n  maxFileSizeInBytes: number;\r\n\r\n  invalidFileSizeText: string;\r\n\r\n  invalidFileTypeText: string;\r\n\r\n  characterPattern: string;\r\n\r\n  mask: string;\r\n\r\n  allowDuplicate: boolean;\r\n\r\n  accept: string;\r\n}\r\n","export class InputError {\r\n  type: string;\r\n\r\n  message: string;\r\n\r\n  constructor(type: string, message: string) {\r\n    this.type = type;\r\n\r\n    this.message = message;\r\n  }\r\n}\r\n","export class Marker {\r\n  latitude: number;\r\n\r\n  longitude: number;\r\n\r\n  draggable: boolean;\r\n\r\n  infoHtml: string;\r\n\r\n  eventTriggers: any;\r\n\r\n  constructor(latitude: number, longitude: number, draggable: boolean, infoHtml?: string) {\r\n    this.latitude = latitude;\r\n\r\n    this.longitude = longitude;\r\n\r\n    this.draggable = draggable;\r\n\r\n    this.infoHtml = infoHtml;\r\n  }\r\n}\r\n","import { MarkerSettingsDefault } from '.';\r\n\r\nexport class MarkerSettings {\r\n  defaultNewMarker: MarkerSettingsDefault;\r\n}\r\n","export class MarkerSettingsDefault {\r\n  draggable: boolean;\r\n\r\n  infoHtml: string;\r\n\r\n  eventTriggers: any;\r\n}\r\n","export class MasterDetailDetails {\r\n  configurationSourceUrl: string;\r\n\r\n  displayFields: Array<string>;\r\n}\r\n","export class Notifications {\r\n  showResultMessage: boolean;\r\n\r\n  getErrorMessageTitle: string;\r\n\r\n  getErrorMessageDetails: string;\r\n\r\n  saveErrorMessageTitle: string;\r\n\r\n  saveErrorMessageDetails: string;\r\n\r\n  saveSuccessMessageTitle: string;\r\n\r\n  saveSuccessMessageDetails: string;\r\n\r\n  submitErrorMessageTitle: string;\r\n\r\n  submitErrorMessageDetails: string;\r\n\r\n  submitSuccessMessageTitle: string;\r\n\r\n  submitSuccessMessageDetails: string;\r\n}\r\n","export class Section {\r\n  id: number;\r\n\r\n  name: string;\r\n\r\n  legend: string;\r\n\r\n  isActive: boolean;\r\n\r\n  hideButtons: Array<string>;\r\n\r\n  constructor(id: number, name: string, legend: string, isActive: boolean) {\r\n    this.id = id;\r\n\r\n    this.name = name;\r\n\r\n    this.legend = legend;\r\n\r\n    this.isActive = isActive;\r\n  }\r\n}\r\n","export class Settings {\r\n  version: string;\r\n\r\n  validationSummaryMode: string;\r\n\r\n  sectionMode: string;\r\n\r\n  sectionLocation: string;\r\n\r\n  formMode: string;\r\n\r\n  postMode: string;\r\n\r\n  spinnerSourceUrl: string;\r\n\r\n  allFieldsSource: string;\r\n\r\n  baseEndPointUrls: any;\r\n\r\n  sourceFormSchemas: Array<string>;\r\n}\r\n","export class ResponseEventArgs {\r\n  isSuccess: boolean;\r\n\r\n  response: any;\r\n\r\n  payload: any;\r\n\r\n  constructor(isSuccess: boolean, response: any, payload: any) {\r\n    this.isSuccess = isSuccess;\r\n\r\n    this.response = response;\r\n\r\n    this.payload = payload;\r\n  }\r\n}\r\n","import { Component, Input, Output, EventEmitter, OnChanges } from '@angular/core';\r\n\r\n// Current type to show\r\nexport enum CLOCK_TYPE {\r\n  HOURS = 1,\r\n  MINUTES = 2\r\n}\r\n\r\nexport type TimeFormat = 12 | 24;\r\n\r\nexport interface ITime {\r\n  hour: number;\r\n  minute: number;\r\n  meriden: 'PM' | 'AM';\r\n  format: TimeFormat;\r\n}\r\n\r\n@Component({\r\n  selector: 'ntw-clock',\r\n  styles: [`.w-clock-wrapper{height:100%;padding:0 24px}.w-clock-wrapper .w-clock{width:200px;height:200px;border-radius:50%;cursor:pointer;padding:24px;background:#ededed}.w-clock-wrapper .w-clock .w-clock-container{width:100%;height:100%;position:relative;display:block}.w-clock-wrapper .w-clock .w-clock-center{height:6px;width:6px;position:absolute;left:0;right:0;top:0;bottom:0;margin:auto;border-radius:50%}.w-clock-wrapper .w-clock .w-pointer{box-shadow:none;width:1px;height:50%;position:absolute;left:0;right:0;bottom:0;margin:0 auto;padding:0;-webkit-transform-origin:top center;transform-origin:top center;transition:transform .2s;transition:transform .2s,-webkit-transform .2s;z-index:0;pointer-events:none}.w-clock-wrapper .w-clock .w-clock-step{display:block;position:absolute;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%);transition:transform .2s;transition:transform .2s,-webkit-transform .2s}.w-clock-wrapper .w-clock .w-clock-step .mat-mini-fab{box-shadow:none;background-color:transparent}.w-clock-wrapper .w-clock .w-clock-selected{position:absolute;bottom:-19px;left:-19px;min-width:0;min-height:0;pointer-events:none;box-shadow:none;cursor:none}.w-clock-deg0{top:0;left:50%}.w-clock-deg15{top:1.70370869%;left:62.94095226%}.w-clock-deg30{top:6.69872981%;left:75%}.w-clock-deg45{top:14.64466094%;left:85.35533905%}.w-clock-deg60{top:25%;left:93.30127019%}.w-clock-deg75{top:37.05904774%;left:98.29629131%}.w-clock-deg90{top:50%;left:100%}.w-clock-deg105{top:62.94095226%;left:98.29629131%}.w-clock-deg120{top:75%;left:93.30127019%}.w-clock-deg135{top:85.35533906%;left:85.35533906%}.w-clock-deg150{top:93.30127019%;left:75%}.w-clock-deg165{top:98.29629131%;left:62.94095226%}.w-clock-deg180{top:100%;left:50%}.w-clock-deg195{top:98.29629131%;left:37.05904774%}.w-clock-deg210{top:93.30127019%;left:25%}.w-clock-deg225{top:85.35533906%;left:14.64466094%}.w-clock-deg240{top:75%;left:6.69872981%}.w-clock-deg255{top:62.94095226%;left:1.703708686%}.w-clock-deg270{top:50%;left:0}.w-clock-deg285{top:37.05904774%;left:1.703708686%}.w-clock-deg300{top:25%;left:6.69872981%}.w-clock-deg315{top:14.64466094%;left:14.64466094%}.w-clock-deg330{top:6.69872981%;left:25%}.w-clock-deg345{top:1.703708686%;left:37.05904774%}.w-clock-deg360{top:0;left:50%}`],\r\n  template: `<div fxLayout=\"row\"\r\n     fxLayoutAlign=\"center center\"\r\n     class=\"w-clock-wrapper\">\r\n  <div class=\"w-clock\">\r\n    <div class=\"w-clock-container\">\r\n\r\n      <!-- Clock center -->\r\n      <button mat-mini-fab\r\n              [color]=\"color\"\r\n              class=\"w-clock-center\"></button>\r\n\r\n      <!-- Clock hand -->\r\n      <mat-toolbar [ngStyle]=\"getPointerStyle()\"\r\n                   [color]=\"color\"\r\n                   class=\"w-pointer\">\r\n        <button mat-mini-fab\r\n                [color]=\"color\"\r\n                class=\"w-clock-selected\"></button>\r\n      </mat-toolbar>\r\n\r\n      <!-- Hour / Minute number faces -->\r\n      <div *ngFor=\"let step of steps; let i = index\"\r\n           [class]=\"getTimeValueClass(step, i)\">\r\n        <button mat-mini-fab\r\n                [color]=\"selectedTimePart === step ? color : ''\"\r\n                (click)=\"changeTimeValue(step)\">\r\n          {{ step }}\r\n        </button>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n</div>\r\n`\r\n})\r\nexport class WClockComponent implements OnChanges {\r\n  @Input() public userTime: ITime;\r\n  @Output() public userTimeChange: EventEmitter<ITime> = new EventEmitter();\r\n\r\n  @Input() public currentView: CLOCK_TYPE;\r\n  @Output() public viewChange = new EventEmitter<CLOCK_TYPE>();\r\n\r\n  @Input() public color: string;\r\n\r\n  public steps = new Array<number>();\r\n  public selectedTimePart;\r\n  public STEP_DEG: number;\r\n\r\n  ngOnChanges() {\r\n    this.setupUI();\r\n  }\r\n\r\n  public setupUI() {\r\n    this.steps = new Array<number>();\r\n\r\n    switch (this.currentView) {\r\n      case CLOCK_TYPE.HOURS:\r\n        for (let i = 1; i <= this.userTime.format; i++) {\r\n          this.steps.push(i);\r\n          this.selectedTimePart = this.userTime.hour || 0;\r\n\r\n          if (this.selectedTimePart > this.userTime.format) {\r\n\r\n            this.selectedTimePart -= this.userTime.format;\r\n          }\r\n        }\r\n        break;\r\n      case CLOCK_TYPE.MINUTES:\r\n        for (let i = 5; i <= 55; i += 5) {\r\n\r\n          this.steps.push(i);\r\n        }\r\n        this.steps.push(0);\r\n        this.selectedTimePart = this.userTime.minute || 0;\r\n        break;\r\n    }\r\n  }\r\n\r\n  getPointerStyle() {\r\n    let divider = 1;\r\n    switch (this.currentView) {\r\n      case CLOCK_TYPE.HOURS:\r\n        divider = this.userTime.format;\r\n        break;\r\n      case CLOCK_TYPE.MINUTES:\r\n        divider = 60;\r\n        break;\r\n    }\r\n\r\n    let degrees = 0;\r\n    if (this.currentView === CLOCK_TYPE.HOURS) {\r\n      degrees = Math.round(this.userTime.hour * (360 / divider)) - 180;\r\n    } else {\r\n      degrees = Math.round(this.userTime.minute * (360 / divider)) - 180;\r\n    }\r\n\r\n    const style = {\r\n      '-webkit-transform': 'rotate(' + degrees + 'deg)',\r\n      '-ms-transform': 'rotate(' + degrees + 'deg)',\r\n      'transform': 'rotate(' + degrees + 'deg)'\r\n    };\r\n\r\n    return style;\r\n  }\r\n\r\n  public getTimeValueClass(step: number, index: number) {\r\n    if (this.currentView === CLOCK_TYPE.HOURS) {\r\n      this.STEP_DEG = 360 / this.userTime.format;\r\n    } else {\r\n      this.STEP_DEG = 360 / 12;\r\n    }\r\n\r\n    let classes = 'w-clock-step w-clock-deg' + (this.STEP_DEG * (index + 1));\r\n\r\n    if (this.selectedTimePart === step) {\r\n\r\n      classes += ' mat-primary';\r\n    }\r\n\r\n    return classes;\r\n  }\r\n\r\n  public changeTimeValue(step: number) {\r\n    if (this.currentView === CLOCK_TYPE.HOURS) {\r\n      this.userTime.hour = step;\r\n\r\n      // auto switch to minutes\r\n      this.viewChange.emit(CLOCK_TYPE.MINUTES);\r\n    } else {\r\n      this.userTime.minute = step;\r\n\r\n      // auto switch to hours\r\n      this.viewChange.emit(CLOCK_TYPE.HOURS);\r\n    }\r\n\r\n    this.userTimeChange.emit(this.userTime);\r\n  }\r\n}\r\n","import { Component, Inject } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material';\r\nimport { MAT_DIALOG_DATA } from '@angular/material';\r\nimport { CLOCK_TYPE, ITime } from '../w-clock/w-clock.component';\r\n\r\n@Component({\r\n  styles: [`.w-timepicker-dialog{padding:0;margin:-24px;width:calc(100% + 48px)}`],\r\n  template: `<div mat-dialog-content class=\"w-timepicker-dialog\">\r\n  <ntw-time [color]=\"color\" [userTime]=\"userTime\" (reverted)=\"revert()\" (submitted)=\"submit()\"></ntw-time>\r\n</div>\r\n`\r\n})\r\nexport class WTimeDialogComponent {\r\n  public userTime: ITime;\r\n  private VIEW_HOURS = CLOCK_TYPE.HOURS;\r\n  private VIEW_MINUTES = CLOCK_TYPE.MINUTES;\r\n  private currentView: CLOCK_TYPE = this.VIEW_HOURS;\r\n  public color: string;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) private data: UserTimeData,\r\n    private dialogRef: MatDialogRef<WTimeDialogComponent>) {\r\n    this.userTime = data.time;\r\n    this.color = data.color;\r\n  }\r\n\r\n  revert() {\r\n    this.dialogRef.close(-1);\r\n  }\r\n\r\n  submit() {\r\n    this.dialogRef.close(this.userTime);\r\n  }\r\n}\r\n\r\nexport class UserTimeData {\r\n  time: ITime;\r\n  color: string;\r\n}\r\n","import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material';\r\nimport { ITime } from '../w-clock/w-clock.component';\r\nimport { WTimeDialogComponent } from '../w-time-dialog/w-time-dialog.component';\r\nimport { TranslatePipe } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'ntw-mat-timepicker',\r\n  styles: [`.time-picker-button{padding:0;margin:0;min-width:44px}:host ::ng-deep .ui-dropdown,:host ::ng-deep input.ui-inputtext.ui-widget.ui-state-default,:host ::ng-deep p-dropdown,input.form-input{width:100%!important;height:35px}`],\r\n  template: `<div fxFlex\r\n     fxLayout=\"row\"\r\n     class=\"w-mat-timepicker\">\r\n\r\n  <button mat-button type=\"button\"\r\n          (click)=\"showPicker($event)\"\r\n          class=\"time-picker-button\">\r\n    <i class=\"fa fa-clock-o\"></i>\r\n  </button>\r\n\r\n  <input matInput\r\n         [id]=\"inputId\"\r\n         [name]=\"inputName\"\r\n         [disabled]=\"disabled\"\r\n         [readonly]=\"readonly\"\r\n         [class]=\"inputClass\"\r\n         [title]=\"tooltip\"\r\n         [placeholder]=\"placeholderValue\"\r\n         [value]=\"time\">\r\n</div>\r\n`,\r\n  providers: [TranslatePipe]\r\n})\r\n\r\nexport class WMatTimePickerComponent implements OnInit {\r\n  @Input() userTime: ITime;\r\n\r\n  @Output() userTimeChange: EventEmitter<ITime> = new EventEmitter();\r\n\r\n  @Input() color: string;\r\n\r\n  @Input() disabled: string;\r\n\r\n  @Input() readonly: string;\r\n\r\n  @Input() inputClass: string;\r\n\r\n  @Input() tooltip: string;\r\n\r\n  @Input() placeholderValue: string;\r\n\r\n  @Input() inputId: string;\r\n\r\n  @Input() inputName: string;\r\n\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private translatePipe: TranslatePipe\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    if (!this.userTime) {\r\n      const currentDate = new Date();\r\n      const time: any = {};\r\n      time.hour = 0;\r\n      time.minute = 0;\r\n      time.format = 24;\r\n      time.meriden = 'AM';\r\n\r\n      this.userTime = time;\r\n    }\r\n  }\r\n\r\n  get time(): string {\r\n    if (!this.userTime) {\r\n      return '';\r\n    }\r\n\r\n    let meriden = `${this.userTime.meriden}`;\r\n\r\n    meriden = this.translatePipe.transform(meriden);\r\n\r\n    if (this.userTime.format === 24) {\r\n      meriden = '';\r\n    }\r\n\r\n    let hour = `${this.userTime.hour}`;\r\n    if (this.userTime.hour === 24) {\r\n      hour = '00';\r\n    }\r\n\r\n    if (this.userTime.minute === 0) {\r\n      return `${hour}:00 ${meriden}`;\r\n\r\n    } else if (this.userTime.minute < 10) {\r\n\r\n      const tt = '0' + String(this.userTime.minute);\r\n      return `${hour}:${tt} ${meriden}`;\r\n\r\n    } else {\r\n      return `${hour}:${this.userTime.minute} ${meriden}`;\r\n    }\r\n  }\r\n\r\n  showPicker($event) {\r\n    const dialogRef = this.dialog.open(WTimeDialogComponent, {\r\n      data: {\r\n        time: {\r\n          hour: this.userTime.hour,\r\n          minute: this.userTime.minute,\r\n          meriden: this.userTime.meriden,\r\n          format: this.userTime.format\r\n        },\r\n        color: this.color\r\n      }\r\n    });\r\n\r\n    dialogRef.afterClosed()\r\n      .subscribe((result: ITime | -1) => {\r\n        // result will be update userTime object or -1 or undefined (closed dialog w/o clicking cancel)\r\n        if (result === undefined) {\r\n          return;\r\n        } else if (result !== -1) {\r\n          this.userTime = result;\r\n\r\n          this.emituserTimeChange();\r\n        }\r\n      });\r\n    return false;\r\n  }\r\n\r\n  private emituserTimeChange() {\r\n\r\n    this.userTimeChange.emit(this.userTime);\r\n  }\r\n}\r\n","import { Component, Input, Output, OnInit, EventEmitter } from '@angular/core';\r\nimport { ITime, CLOCK_TYPE } from '../w-clock/w-clock.component';\r\nimport { TranslatePipe } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'ntw-time',\r\n  template: `<div fxLayout=\"row\"\r\n     fxLayout.lt-md=\"column\"\r\n     fxLayoutAlign=\"center center\"\r\n     class=\"w-time\"\r\n     [ngClass.xs]=\"'vertical-time'\"\r\n     [ngClass.sm]=\"'vertical-time'\">\r\n  <mat-toolbar fxLayout=\"column\"\r\n               fxLayout.lt-md=\"row\"\r\n               fxLayoutAlign=\"center center\"\r\n               [color]=\"color\"\r\n               class=\"w-timepicker-time-container\">\r\n\r\n    <div class=\"w-timepicker-selected-time\">\r\n      <span [class]=\"currentView === VIEW_HOURS ? 'active': ''\"\r\n            (click)=\"setCurrentView(VIEW_HOURS)\">{{ formatHour() }}:</span>\r\n      <span [class]=\"currentView === VIEW_MINUTES ? 'active': ''\"\r\n            (click)=\"setCurrentView(VIEW_MINUTES)\">{{ formatMinute() }}</span>\r\n    </div>\r\n    <div fxLayout=\"column\"\r\n         fxLayoutAlign=\"center center\"\r\n         class=\"w-timepicker-selected-ampm\"\r\n         *ngIf=\"userTime.format === 12\">\r\n      <span (click)=\"setMeridien('AM')\"\r\n            [class]=\"userTime.meriden === 'AM' ? 'active' : ''\">{{'AM' | translate}}</span>\r\n      <span (click)=\"setMeridien('PM')\"\r\n            [class]=\"userTime.meriden === 'PM' ? 'active' : ''\">{{'PM' | translate}}</span>\r\n    </div>\r\n\r\n  </mat-toolbar>\r\n\r\n  <div fxLayout=\"column\"\r\n       fxLayoutAlign=\"space-between center\"\r\n       class=\"w-time-content\">\r\n    <ntw-clock [color]=\"color\"\r\n             class=\"w-animation-zoom\"\r\n             [userTime]=\"userTime\"\r\n             (userTimeChange)=\"emituserTimeChange($event)\"\r\n             [(currentView)]=\"currentView\"\r\n             (viewChange)=\"setCurrentView($event)\">\r\n    </ntw-clock>\r\n\r\n    <div fxFlexAlign=\"end\">\r\n      <button mat-button\r\n              (click)=\"revert()\">\r\n        {{revertLabel}}\r\n      </button>\r\n      <button mat-button\r\n              [color]=\"color\"\r\n              (click)=\"submit()\">\r\n        {{submitLabel}}\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n`,\r\n  styles: [`:host{display:block}.w-time{max-height:100%;min-height:350px;height:350px}.w-time .w-timepicker-time-container{padding:15px;min-width:160px;width:160px}.w-time .w-timepicker-time-container.mat-toolbar-single-row{height:100%}.w-time .w-timepicker-selected-time{font-size:3.5rem;font-weight:400;display:flex}.w-time .w-timepicker-selected-ampm{font-size:1rem;line-height:1.3rem;padding-top:2rem}.w-time .w-time-content{width:100%;height:100%;padding:6px}.w-time .w-time-content w-clock{padding:12px 0;height:calc(100% - 58px)}.w-time.vertical-time{height:auto}.w-time.vertical-time .w-timepicker-time-container{min-width:auto;width:100%;height:100px}.w-time.vertical-time .w-timepicker-time-container .w-timepicker-selected-ampm{padding:0 12px}.w-timepicker-selected-ampm>span,.w-timepicker-selected-time>span{outline:0;opacity:.5}.w-timepicker-selected-ampm>span:not(.active),.w-timepicker-selected-time>span:not(.active){cursor:pointer}.w-timepicker-selected-ampm>span.active,.w-timepicker-selected-time>span.active{opacity:1}.w-animate-next{opacity:0;-webkit-transform:translate3d(50%,0,1px);transform:translate3d(50%,0,1px)}.w-animate-next-remove{transition:.5s cubic-bezier(.35,0,.25,1);opacity:0;-webkit-transform:translate3d(50%,0,1px);transform:translate3d(50%,0,1px)}.w-animate-next-remove-active{opacity:1;-webkit-transform:translate3d(0,0,1px);transform:translate3d(0,0,1px)}.w-animate-prev{opacity:0;-webkit-transform:translate3d(-50%,0,1px);transform:translate3d(-50%,0,1px)}.w-animate-prev-remove{transition:.3s cubic-bezier(.35,0,.25,1);opacity:0;-webkit-transform:translate3d(-50%,0,1px);transform:translate3d(-50%,0,1px)}.w-animate-prev-remove-active{opacity:1;-webkit-transform:translate3d(0,0,1px);transform:translate3d(0,0,1px)}@-webkit-keyframes w-animation-bounce{from{opacity:0;-webkit-transform:scale(.95);transform:scale(.95)}70%{opacity:1;-webkit-transform:scale(1.05);transform:scale(1.05)}to{-webkit-transform:scale(1);transform:scale(1)}}@keyframes w-animation-bounce{from{opacity:0;-webkit-transform:scale(.95);transform:scale(.95)}70%{opacity:1;-webkit-transform:scale(1.05);transform:scale(1.05)}to{-webkit-transform:scale(1);transform:scale(1)}}.w-animation-zoom.ng-enter{transition:.3s cubic-bezier(.35,0,.25,1);-webkit-animation-duration:.3s;animation-duration:.3s;-webkit-animation-name:w-animation-bounce;animation-name:w-animation-bounce}`],\r\n  providers: [TranslatePipe]\r\n})\r\nexport class WTimeComponent implements OnInit {\r\n  @Input() userTime: ITime;\r\n  @Output() userTimeChange: EventEmitter<ITime> = new EventEmitter();\r\n\r\n  @Input() revertLabel: string;\r\n  @Input() submitLabel: string;\r\n\r\n  @Output() reverted: EventEmitter<null> = new EventEmitter();\r\n  @Output() submitted: EventEmitter<ITime> = new EventEmitter();\r\n\r\n  @Input() color: string;\r\n\r\n  public VIEW_HOURS = CLOCK_TYPE.HOURS;\r\n  public VIEW_MINUTES = CLOCK_TYPE.MINUTES;\r\n  public currentView: CLOCK_TYPE = this.VIEW_HOURS;\r\n\r\n  constructor(private translatePipe: TranslatePipe) { }\r\n\r\n  ngOnInit() {\r\n    if (!this.userTime) {\r\n      this.userTime = {\r\n        hour: 6,\r\n        minute: 0,\r\n        meriden: 'PM',\r\n        format: 12\r\n      };\r\n    }\r\n\r\n    if (!this.revertLabel) {\r\n      this.revertLabel = this.translatePipe.transform('buttons.Cancel');\r\n    }\r\n\r\n    if (!this.submitLabel) {\r\n      this.submitLabel = this.translatePipe.transform('buttons.Ok');\r\n    }\r\n  }\r\n\r\n  formatHour(): string {\r\n    if (this.userTime.format === 24) {\r\n      if (this.userTime.hour === 24) {\r\n        return '00';\r\n      } else if (this.userTime.hour < 10) {\r\n        return '0' + String(this.userTime.hour);\r\n      }\r\n    }\r\n\r\n    return String(this.userTime.hour);\r\n  }\r\n\r\n  formatMinute(): string {\r\n    if (this.userTime.minute === 0) {\r\n      return '00';\r\n    } else if (this.userTime.minute < 10) {\r\n      return '0' + String(this.userTime.minute);\r\n    } else {\r\n      return String(this.userTime.minute);\r\n    }\r\n  }\r\n\r\n  setCurrentView(type: CLOCK_TYPE) {\r\n    this.currentView = type;\r\n  }\r\n\r\n  setMeridien(m: 'PM' | 'AM') {\r\n    this.userTime.meriden = m;\r\n  }\r\n\r\n  revert() {\r\n    this.reverted.emit();\r\n  }\r\n\r\n  submit() {\r\n    this.submitted.emit(this.userTime);\r\n  }\r\n\r\n  emituserTimeChange(event) {\r\n    this.userTimeChange.emit(this.userTime);\r\n  }\r\n}\r\n","import { Component, Input, ViewChild } from '@angular/core';\r\nimport { NgModel } from '@angular/forms';\r\nimport { BridgeService } from '../../../services/bridge.service';\r\nimport { Field } from '../../../models/field';\r\nimport { SectionModes, FormModes } from '../../../models/enums';\r\nimport { InputError } from '../../../models/input-error';\r\n\r\n@Component({\r\n  selector: 'ntw-field',\r\n  template: ''\r\n})\r\nexport class FieldComponent {\r\n  /** @property The validation error class.*/\r\n  protected static ValidationErrorClass: string = 'cssClasses.ValidationError';\r\n\r\n  /** @property The related field.*/\r\n  @Input('field') field: Field;\r\n\r\n  /** @property The control.*/\r\n  @ViewChild(NgModel) control: NgModel;\r\n\r\n  /** @property Whether to validate for required.*/\r\n  public validateForRequired: boolean = false;\r\n\r\n  /** @property Whether to validate for pattern.*/\r\n  public validateForPattern: boolean = false;\r\n\r\n  /** @property Whether to validate for range.*/\r\n  public validateForRange: boolean = false;\r\n\r\n  // still unused. always false.\r\n  private isPristine: boolean;\r\n\r\n  constructor(\r\n    public bridgeService: BridgeService\r\n  ) { }\r\n\r\n  /** @description Handles the field's default settings.*/\r\n  public handleDefaultSettings() {\r\n\r\n  }\r\n\r\n  /** @description Updates the field's value.\r\n   * @param any newValue The new field value.\r\n  */\r\n  public updateValue(newValue: any) {\r\n    this.field.data.value = newValue.value;\r\n\r\n    this.validate();\r\n  }\r\n\r\n  /** @description Clears the field's value.*/\r\n  public clearValue() {\r\n    if (this.field.data) {\r\n      this.field.data.value = null;\r\n\r\n      if (this.control) {\r\n        this.control.reset();\r\n      }\r\n\r\n      this.clearValidationErrors();\r\n    }\r\n  }\r\n\r\n  /** @description Gets the field's value.*/\r\n  public getValue() {\r\n    return this.field.data.value;\r\n  }\r\n\r\n  /** @description Appends the form data.\r\n   * @param FormData data The data.\r\n   * @return FormData The updated form data.\r\n  */\r\n  public appendFormData(data: FormData): FormData {\r\n    if (this.field.data && this.field.data.value) {\r\n      data.append(this.field.name, this.field.data.value);\r\n    }\r\n\r\n    return data;\r\n  }\r\n\r\n  /** @description Triggers a dynamic event in case it is defined.\r\n   * @param string eventType The type of the event.\r\n   * @param any eventArguments The event arguments of the action causing the trigger.\r\n   * @param any source The source of the action causing the trigger.\r\n  */\r\n  public triggerDynamicEvent(eventType: string, eventArguments: any, source: any) {\r\n    if (source.eventTriggers) {\r\n      const event = source.eventTriggers[eventType];\r\n\r\n      const parentEventHandlerFunction = this.bridgeService.parentComponent[event.handler];\r\n\r\n      if (parentEventHandlerFunction) {\r\n        let parameters = [eventArguments];\r\n\r\n        if (event.parameters && event.parameters.length > 0) {\r\n          parameters = parameters.concat(event.parameters);\r\n        }\r\n\r\n        parentEventHandlerFunction(this.bridgeService.parentComponent, source, parameters);\r\n      }\r\n    }\r\n  }\r\n\r\n  /** @description Checks whether the field should be hidden.\r\n   * @return boolean Whether the field should be hidden.\r\n  */\r\n  public isFieldHidden(): boolean {\r\n    return this.field.hidden ||\r\n      (this.bridgeService.configuration.settings.sectionMode !== SectionModes.None &&\r\n        this.bridgeService.configuration.sections.length > 0 &&\r\n        this.field.sectionId !== this.bridgeService.configuration.currentSection.id);\r\n  }\r\n\r\n  /** @description Checks whether the validation should be shown.\r\n   * @return boolean Whether the validation should be shown.\r\n  */\r\n  public isValidationShown(): boolean {\r\n    return !this.isPristine && this.field.validationErrors && this.field.validationErrors.length > 0;\r\n  }\r\n\r\n  /** @description Checks whether the validation asterisk should be shown.\r\n   * @return boolean Whether the validation asterisk should be shown.\r\n  */\r\n  public isValidationAsteriskShown(): boolean {\r\n    return !this.isFormInDisplayMode() && this.field.validation && (this.field.validation.required || this.field.validation.min > 0);\r\n  }\r\n\r\n  /** @description Validates the form control and updates its validation errors list.\r\n   * @param any eventArguments The event arguments.\r\n   * @param boolean isSubmit Determines whether the validation is reached from form submission.\r\n   * @return Array<InputError> The list of validation errors.\r\n  */\r\n  public validate(eventArguments?: any, isSubmit?: boolean): Array<InputError> {\r\n    this.preValidate(isSubmit);\r\n\r\n    if (this.shouldValidate()) {\r\n      if (this.field.hidden) {\r\n        this.clearValidationErrors();\r\n      } else {\r\n        if (!this.isFormInDisplayMode()) {\r\n          if (this.validateForRequired) {\r\n            this.validateRequiredCondition();\r\n          }\r\n\r\n          if (this.validateForPattern) {\r\n            this.validatePatternCondition();\r\n          }\r\n\r\n          if (this.validateForRange) {\r\n            this.validateRangeCondition();\r\n          }\r\n        }\r\n      }\r\n\r\n      this.updateValidationSummary();\r\n    }\r\n\r\n    return this.field.validationErrors;\r\n  }\r\n\r\n  /** @description Adds an error to the validation errors list.\r\n   * @param string message The validation message.\r\n   * @param string type The validation error type.\r\n  */\r\n  public addValidationError(message: string, type: string = FieldComponent.ValidationErrorClass) {\r\n    if (!this.field.validationErrors) {\r\n      this.field.validationErrors = new Array<InputError>();\r\n    }\r\n\r\n    this.field.validationErrors.push(new InputError(type, message));\r\n  }\r\n\r\n  /** @description Clears the field's validation errors.*/\r\n  public clearValidationErrors() {\r\n    this.field.validationErrors = new Array<InputError>();\r\n  }\r\n\r\n  /** @description Checks whether the field should be valiated.\r\n   * @return boolean Whether the field should be valiated.\r\n  */\r\n  protected shouldValidate(): boolean {\r\n    return this.field.validation && (!this.field.validationErrors || this.field.validationErrors.length === 0);\r\n  }\r\n\r\n  /** @description Prepares the field for validation and makes sure it isn't validated repeatedly.\r\n   * @param boolean isSubmit Determines whether the validation is reached from form submission.\r\n   * @return Array<InputError> The list of validation errors.\r\n  */\r\n  protected preValidate(isSubmit: boolean): Array<InputError> {\r\n    this.isPristine = false;\r\n\r\n    if (isSubmit) {\r\n      if (this.field.validationErrors && this.field.validationErrors.length > 0) {\r\n        return this.field.validationErrors;\r\n      } else {\r\n        this.field.validationErrors = new Array<InputError>();\r\n\r\n        return this.field.validationErrors;\r\n      }\r\n    } else {\r\n      this.field.validationErrors = new Array<InputError>();\r\n\r\n      return this.field.validationErrors;\r\n    }\r\n  }\r\n\r\n  /** @description Updates the validation summary.*/\r\n  protected updateValidationSummary() {\r\n    this.bridgeService.configuration.validationErrors = new Array<InputError>();\r\n\r\n    for (const field of this.bridgeService.configuration.mergedFields) {\r\n      if (field.validationErrors) {\r\n        this.bridgeService.configuration.validationErrors = this.bridgeService\r\n          .configuration.validationErrors.concat(field.validationErrors);\r\n      }\r\n    }\r\n  }\r\n\r\n  /** @description Validates a control for the required condition and updates its validation errors list.\r\n   * @return Array<InputError> The list of validation errors.\r\n  */\r\n  protected validateRequiredCondition(): Array<InputError> {\r\n    if (this.field.validation.required) {\r\n      if (!this.field.data || !this.field.data.value || this.field.data.value.length === 0) {\r\n        this.field.validationErrors.push(new InputError(FieldComponent.ValidationErrorClass, this.field.validation.requiredText));\r\n      }\r\n    }\r\n\r\n    return this.field.validationErrors;\r\n  }\r\n\r\n  /** @description Validates a control for the pattern condition and updates its validation errors list.\r\n    * @return Array<InputError> The list of validation errors.\r\n  */\r\n  protected validatePatternCondition(): Array<InputError> {\r\n    if (this.field.validation.pattern && this.field.data && this.field.data.value && this.field.data.value.length > 0) {\r\n      const regEx = new RegExp(this.field.validation.pattern);\r\n      if (!regEx.test(this.field.data.value)) {\r\n        this.field.validationErrors.push(new InputError(FieldComponent.ValidationErrorClass, this.field.validation.patternText));\r\n      }\r\n    }\r\n\r\n    return this.field.validationErrors;\r\n  }\r\n\r\n  /** @description Validates a control for the range condition and updates its validation errors list.\r\n   * @return Array<InputError> The list of validation errors.\r\n  */\r\n  protected validateRangeCondition(): Array<InputError> {\r\n    const valueLength = this.field.data && this.field.data.value ? this.field.data.value.length : 0;\r\n\r\n    if ((this.field.validation.min && valueLength < this.field.validation.min) ||\r\n      (this.field.validation.max && valueLength > this.field.validation.max)) {\r\n      this.field.validationErrors.push(new InputError(FieldComponent.ValidationErrorClass, this.field.validation.rangeText));\r\n    }\r\n\r\n    return this.field.validationErrors;\r\n  }\r\n\r\n  /** @description Gets whether the form is in display mode.\r\n   * @return boolean Whether the form is in display mode.\r\n  */\r\n  protected isFormInDisplayMode(): boolean {\r\n    return this.bridgeService.configuration.settings.formMode === FormModes.Display;\r\n  }\r\n}\r\n","import { Component, Optional } from '@angular/core';\r\nimport { FieldComponent } from '../field/field.component';\r\nimport { TranslateService, LangChangeEvent } from '@ngx-translate/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { BridgeService } from '../../../services/bridge.service';\r\nimport { UtilitiesService } from '../../../services/utilities.service';\r\nimport { HttpRequestsService } from '../../../services/http-requests.service';\r\n\r\n@Component({\r\n  selector: 'ntw-boundable-field',\r\n  template: ''\r\n})\r\nexport class BoundableFieldComponent extends FieldComponent {\r\n  constructor(\r\n    public bridgeService: BridgeService,\r\n    private httpRequestsService: HttpRequestsService,\r\n    private translateService: TranslateService,\r\n    private utilitiesService: UtilitiesService,\r\n    @Optional() private route: ActivatedRoute\r\n  ) {\r\n    super(bridgeService);\r\n  }\r\n\r\n  /** @description Handles the field's default settings.*/\r\n  public handleDefaultSettings() {\r\n    if (!this.isFormInDisplayMode()) {\r\n      this.dataBindOptions();\r\n\r\n      this.translateService.onLangChange.subscribe((event: LangChangeEvent) => {\r\n        this.dataBindOptions();\r\n      });\r\n    }\r\n  }\r\n\r\n  /** @description Binds the field's options.*/\r\n  protected dataBindOptions() {\r\n    if (this.field.data && this.field.data.optionsEndpoint) {\r\n      const endpoint = this.utilitiesService.replaceTokens(\r\n        this.bridgeService.configuration.endpoints.lookups[this.field.data.optionsEndpoint],\r\n        this.route,\r\n        this.bridgeService.additionalParameters\r\n      );\r\n\r\n      this.bindOptions(endpoint);\r\n    }\r\n  }\r\n\r\n  /** @description Binds the field's options.\r\n   * @param string endpoint The endpoint.\r\n  */\r\n  protected bindOptions(endpoint: string) {\r\n    this.httpRequestsService.get(endpoint).subscribe(response => {\r\n      this.field.data.options = response;\r\n    }, exception => {\r\n      console.error('bindOptions: ', exception);\r\n    });\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { BoundableFieldComponent } from '../boundable-field/boundable-field.component';\r\n\r\n@Component({\r\n  selector: 'ntw-checkbox-field',\r\n  template: `<div [class]=\"field.cssClasses.container\"\r\n     [hidden]=\"isFieldHidden()\"\r\n     [attr.data-html2canvas-ignore]=\"field.html2CanvasIgnore\">\r\n\r\n  <!-- label -->\r\n  <label [class]=\"field.cssClasses.label\"\r\n         [for]=\"field.name\">\r\n    {{field.label | translate}}\r\n    <span class=\"required-asterisk\"\r\n          *ngIf=\"isValidationAsteriskShown()\">*</span>\r\n  </label>\r\n\r\n  <!-- input-->\r\n  <div class=\"checkBoxHolder\"\r\n       *ngIf=\"bridgeService?.configuration?.settings?.formMode != 'Display'\">\r\n    <p-checkbox *ngFor=\"let checkbox of field.data.options; let i = index\"\r\n                [id]=\"field.name+'_'+i\"\r\n                [name]=\"field.name\"\r\n                [(ngModel)]=\"field.data.value\"\r\n                [class]=\"field.cssClasses.input\"\r\n                [ngClass]=\"{'invalid': isValidationShown()}\"\r\n                [title]=\"field.tooltip | translate\"\r\n                #input=\"ngModel\"\r\n                [required]=\"field.validation.required\"\r\n                [label]=\"checkbox.name | translate\"\r\n                [value]=\"checkbox.id\"\r\n                [disabled]=\"field.disabled\"\r\n                (onChange)=\"triggerDynamicEvent('onChange', $event, field);\"\r\n                (ngModelChange)=\"validate();\">\r\n    </p-checkbox>\r\n  </div>\r\n\r\n  <!-- display -->\r\n  <div [class]=\"field.cssClasses.display\"\r\n       *ngIf=\"bridgeService?.configuration?.settings?.formMode == 'Display'\">\r\n    <ul *ngIf=\"field?.data?.value?.length > 1\">\r\n      <li *ngFor=\"let title of field?.data?.value\">{{title}}</li>\r\n    </ul>\r\n    <span *ngIf=\"field?.data?.value?.length == 1\">\r\n      <span *ngFor=\"let title of field?.data?.value\">{{title}}</span>\r\n    </span>\r\n  </div>\r\n\r\n  <!-- validations -->\r\n  <div *ngIf=\"isValidationShown()\">\r\n    <div *ngFor=\"let error of field?.validationErrors\">\r\n      <p [ngClass]=\"error.type | translate\">\r\n        {{error.message | translate}}\r\n      </p>\r\n    </div>\r\n  </div>\r\n</div>\r\n`,\r\n  styles: [`p-checkbox{display:block}body.ar :host ::ng-deep .ui-chkbox.ui-widget{float:right;margin-left:10px}`]\r\n})\r\nexport class CheckboxFieldComponent extends BoundableFieldComponent {\r\n  /** @property Whether to validate for range.*/\r\n  public validateForRange: boolean = true;\r\n\r\n  /** @description Clears the field's value.*/\r\n  public clearValue() {\r\n    if (this.field.data) {\r\n      this.field.data.value = [];\r\n\r\n      this.control.reset();\r\n\r\n      this.clearValidationErrors();\r\n    }\r\n  }\r\n\r\n  /** @description Appends the form data.\r\n   * @param FormData data The data.\r\n   * @return FormData The updated form data.\r\n  */\r\n  public appendFormData(data: FormData): FormData {\r\n    if (this.field.data && this.field.data.value) {\r\n      for (let i = 0; i < this.field.data.value.length; i++) {\r\n        const value = this.field.data.value[i];\r\n\r\n        data.append(this.field.name + '[' + i + ']', value);\r\n      }\r\n    }\r\n\r\n    return data;\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { FieldComponent } from '../field/field.component';\r\n\r\n@Component({\r\n  selector: 'ntw-chips-field',\r\n  template: `<div [class]=\"field.cssClasses.container\"\r\n     [hidden]=\"isFieldHidden()\"\r\n     [attr.data-html2canvas-ignore]=\"field.html2CanvasIgnore\">\r\n\r\n  <!-- label -->\r\n  <label [class]=\"field.cssClasses.label\"\r\n         [for]=\"field.name\">\r\n    {{field.label | translate}}\r\n    <span class=\"required-asterisk\"\r\n          *ngIf=\"isValidationAsteriskShown()\">*</span>\r\n  </label>\r\n\r\n  <!-- input-->\r\n  <p-chips [id]=\"field.name\"\r\n           [name]=\"field.name\"\r\n           [placeholder]=\"(field.placeholder) ? (field.placeholder | translate) : ''\"\r\n           [class]=\"field.cssClasses.input\"\r\n           [ngClass]=\"{'invalid': isValidationShown()}\"\r\n           [title]=\"field.tooltip | translate\"\r\n           #input=\"ngModel\"\r\n           [disabled]=\"field.disabled\"\r\n           [(ngModel)]=\"field.data.value\"\r\n           [allowDuplicate]=\"field.validation.allowDuplicate\"\r\n           [addOnBlur]=\"field.addOnBlur\"\r\n           [addOnTab]=\"field.addOnTab\"\r\n           [required]=\"field.validation.required\"\r\n           *ngIf=\"bridgeService?.configuration?.settings?.formMode != 'Display'\"\r\n           (onAdd)=\"triggerDynamicEvent('onAdd', $event, field);\"\r\n           (onRemove)=\"triggerDynamicEvent('onRemove', $event, field);\"\r\n           (ngModelChange)=\"validate();\">\r\n  </p-chips>\r\n\r\n  <!-- display -->\r\n  <div [class]=\"field.cssClasses.display\"\r\n       *ngIf=\"bridgeService?.configuration?.settings?.formMode == 'Display'\">\r\n    <ul>\r\n      <li *ngFor=\"let title of field.data.value\">{{title}}</li>\r\n    </ul>\r\n  </div>\r\n\r\n  <!-- validations -->\r\n  <div *ngIf=\"isValidationShown()\">\r\n    <div *ngFor=\"let error of field?.validationErrors\">\r\n      <p [ngClass]=\"error.type | translate\">\r\n        {{error.message | translate}}\r\n      </p>\r\n    </div>\r\n  </div>\r\n</div>\r\n`,\r\n  styles: [`:host ::ng-deep .ui-chips-input-token,:host ::ng-deep .ui-chips-input-token input{width:100%}:host ::ng-deep .ui-chips>ul.ui-inputtext{padding:5px .25em}`]\r\n})\r\nexport class ChipsFieldComponent extends FieldComponent {\r\n  /** @property Whether to validate for range.*/\r\n  public validateForRange: boolean = true;\r\n\r\n  /** @description Appends the form data.\r\n   * @param FormData data The data.\r\n   * @return FormData The updated form data.\r\n  */\r\n  public appendFormData(data: FormData): FormData {\r\n    if (this.field.data && this.field.data.value) {\r\n      for (let i = 0; i < this.field.data.value.length; i++) {\r\n        const value = this.field.data.value[i];\r\n\r\n        data.append(this.field.name + '[' + i + ']', value);\r\n      }\r\n    }\r\n\r\n    return data;\r\n  }\r\n}\r\n","import { Component, AfterViewInit, ViewChild } from '@angular/core';\r\nimport { FieldComponent } from '../field/field.component';\r\nimport { BridgeService } from '../../../services/bridge.service';\r\nimport { LanguageService } from '../../../services/language.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'ntw-datetime-field',\r\n  template: `<div [class]=\"field.cssClasses.container\"\r\n     [hidden]=\"isFieldHidden()\"\r\n     [attr.data-html2canvas-ignore]=\"field.html2CanvasIgnore\">\r\n\r\n  <!-- label -->\r\n  <label [class]=\"field.cssClasses.label\"\r\n         [for]=\"field.name\">\r\n    {{field.label | translate}}\r\n    <span class=\"required-asterisk\"\r\n          *ngIf=\"isValidationAsteriskShown()\">*</span>\r\n  </label>\r\n\r\n  <!-- input-->\r\n  <p-calendar #calendar\r\n              [id]=\"field.name\"\r\n              [name]=\"field.name\"\r\n              [class]=\"field.cssClasses.input\"\r\n              [ngClass]=\"{'invalid': isValidationShown()}\"\r\n              [placeholder]=\"(field.placeholder) ? (field.placeholder | translate) : ''\"\r\n              [title]=\"field.tooltip | translate\"\r\n              #input=\"ngModel\"\r\n              [(ngModel)]=\"field.data.value\"\r\n              [required]=\"field.validation.required\"\r\n              [readonlyInput]=\"field.readonly\"\r\n              [disabled]=\"field.disabled\"\r\n              [showIcon]=\"field.showIcon\"\r\n              [showTime]=\"field.showTime\"\r\n              [hourFormat]=\"field.hourFormat\"\r\n              [monthNavigator]=\"field.monthNavigator\"\r\n              [yearNavigator]=\"field.yearNavigator\"\r\n              [yearRange]=\"field.yearRange\"\r\n              [dateFormat]=\"field.dateFormat\"\r\n              [minDate]=\"field.minDateValue\"\r\n              [maxDate]=\"field.maxDateValue\"\r\n              [defaultDate]=\"field.defaultDateValue\"\r\n              *ngIf=\"bridgeService?.configuration?.settings?.formMode != 'Display'\"\r\n              (onClose)=\"validate();triggerDynamicEvent('onSelect', $event, field);\"\r\n              (onSelect)=\"validate();triggerDynamicEvent('onSelect', $event, field);\">\r\n  </p-calendar>\r\n\r\n  <!-- display -->\r\n  <span [class]=\"field.cssClasses.display\"\r\n        *ngIf=\"bridgeService?.configuration?.settings?.formMode == 'Display'\">\r\n    {{field.data.value | date:field.displayDateFormat}}\r\n  </span>\r\n\r\n  <!-- validations -->\r\n  <div *ngIf=\"isValidationShown()\">\r\n    <div *ngFor=\"let error of field?.validationErrors\">\r\n      <p [ngClass]=\"error.type | translate\">\r\n        {{error.message | translate}}\r\n      </p>\r\n    </div>\r\n  </div>\r\n</div>\r\n`,\r\n  styles: [`body.en :host ::ng-deep button.ui-datepicker-trigger{right:0}body.ar :host ::ng-deep button.ui-datepicker-trigger{left:0}:host ::ng-deep span.ui-calendar{display:block}:host ::ng-deep p-calendar input{border-radius:.25rem}body.ar :host ::ng-deep .ui-calendar-button{border-radius:.25rem 0 0 .25rem}body.ar :host ::ng-deep .ui-calendar.ui-calendar-w-btn input{border-top-right-radius:.25rem;border-bottom-right-radius:.25rem}:host ::ng-deep button.ui-datepicker-trigger{position:absolute}:host ::ng-deep .ui-calendar .ui-datepicker{width:17em;min-width:auto}:host ::ng-deep .ui-calendar .ui-calendar-button .ui-button-icon-left{font-size:1.25em}`]\r\n})\r\nexport class DatetimeFieldComponent extends FieldComponent implements AfterViewInit {\r\n  /** @property The search element.*/\r\n  @ViewChild('calendar') calendarElement: any;\r\n\r\n  /** @property Whether to validate for required.*/\r\n  public validateForRequired: boolean = true;\r\n\r\n  constructor(\r\n    public bridgeService: BridgeService,\r\n    private translateService: TranslateService,\r\n    private languageService: LanguageService,\r\n    private datePipe: DatePipe\r\n  ) {\r\n    super(bridgeService);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.setCalendarOptions();\r\n\r\n    this.translateService.onLangChange.subscribe((response) => {\r\n      this.setCalendarOptions();\r\n    });\r\n  }\r\n\r\n  /** @description Appends the form data.\r\n   * @param FormData data The data.\r\n   * @return FormData The updated form data.\r\n  */\r\n  public appendFormData(data: FormData): FormData {\r\n    if (this.field.data && this.field.data.value) {\r\n      data.append(this.field.name, this.datePipe.transform(this.field.data.value, this.field.formDataDateFormat));\r\n    }\r\n\r\n    return data;\r\n  }\r\n\r\n  /** @description Handles the field's default settings.*/\r\n  public handleDefaultSettings() {\r\n    // buggy if done from here after component is loaded. Moved back to before component loaded.\r\n  }\r\n\r\n  /** @description Sets the calendar options.*/\r\n  private setCalendarOptions() {\r\n    if (this.calendarElement && this.languageService.translations) {\r\n      const calendarOptions = this.languageService.translations.calendarOptions;\r\n\r\n      if (calendarOptions) {\r\n        this.calendarElement.locale = calendarOptions;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n","import { Component, ViewChild } from '@angular/core';\r\nimport { NgbInputDatepicker } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgbCalendar, NgbDatepickerI18n, NgbCalendarIslamicUmalqura } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FieldComponent } from '../field/field.component';\r\nimport { IslamicI18n } from '../../../services/datepicker-calendar.service';\r\nimport { BridgeService } from '../../../services/bridge.service';\r\nimport { UtilitiesService } from '../../../services/utilities.service';\r\n\r\n@Component({\r\n  selector: 'ntw-datetime-hijri-field',\r\n  template: `<div [class]=\"field.cssClasses.container\"\r\n     [hidden]=\"isFieldHidden()\"\r\n     [attr.data-html2canvas-ignore]=\"field.html2CanvasIgnore\">\r\n\r\n  <!-- label -->\r\n  <label [class]=\"field.cssClasses.label\"\r\n         [for]=\"field.name\">\r\n    {{field.label | translate}}\r\n    <span class=\"required-asterisk\"\r\n          *ngIf=\"isValidationAsteriskShown()\">*</span>\r\n  </label>\r\n\r\n  <!-- input-->\r\n  <div class=\"hijri-date-control\">\r\n    <input [name]=\"field.name\"\r\n           [placeholder]=\"(field.placeholder) ? (field.placeholder | translate) : ''\"\r\n           [class]=\"field.cssClasses.input\"\r\n           [ngClass]=\"{'invalid': isValidationShown()}\"\r\n           ngbDatepicker\r\n           #input=\"ngbDatepicker\"\r\n           #defaultInput=\"ngModel\"\r\n           [readonly]=\"field.readonly\"\r\n           [disabled]=\"field.disabled\"\r\n           [(ngModel)]=\"field.data.value\"\r\n           [minDate]=\"field.minDateValue\"\r\n           [maxDate]=\"field.maxDateValue\"\r\n           [showWeekNumbers]=\"field.showWeekNumbers\"\r\n           [displayMonths]=\"field.displayMonths\"\r\n           [outsideDays]=\"field.outsideDays\"\r\n           [showWeekdays]=\"field.showWeekdays\"\r\n           *ngIf=\"bridgeService?.configuration?.settings?.formMode != 'Display'\"\r\n           (click)=\"toggleCalendar();validate();\"\r\n           (ngModelChange)=\"validate();triggerDynamicEvent('onSelect', $event, field);\" />\r\n\r\n    <!-- icon -->\r\n    <button class=\"hijri-date-icon-container\"\r\n            [disabled]=\"field.disabled\"\r\n            type=\"button\"\r\n            (click)=\"toggleCalendar();\">\r\n      <span class=\"hijri-date-icon\"\r\n            *ngIf=\"field.showIcon\">\r\n      </span>\r\n    </button>\r\n  </div>\r\n\r\n  <!-- display -->\r\n  <span [class]=\"field.cssClasses.display\"\r\n        *ngIf=\"bridgeService?.configuration?.settings?.formMode == 'Display'\">\r\n    {{field?.data?.value?.day}}/{{field?.data?.value?.month}}/{{field?.data?.value?.year}}\r\n  </span>\r\n\r\n  <!-- validations -->\r\n  <div *ngIf=\"isValidationShown()\">\r\n    <div *ngFor=\"let error of field?.validationErrors\">\r\n      <p [ngClass]=\"error.type | translate\">\r\n        {{error.message | translate}}\r\n      </p>\r\n    </div>\r\n  </div>\r\n</div>\r\n`,\r\n  styles: [`.hijri-date{height:35px}.hijri-date-control{position:relative}.hijri-date-icon-container{position:absolute;top:0;padding:0 6px;background-color:#2399e5;color:#fff;cursor:pointer;height:100%;line-height:1.8;border:0}button.hijri-date-icon-container:disabled{opacity:.35}.hijri-date-icon:focus,.hijri-date-icon:hover{background:#1f89ce}.hijri-date-icon:after{content:'\\\\e927';font-family:primeicons;font-size:1.25em}body.ar :host ::ng-deep ngb-datepicker ngb-datepicker-navigation .ngb-dp-navigation-chevron{-webkit-transform:rotate(45deg);transform:rotate(45deg)}body.ar :host ::ng-deep ngb-datepicker ngb-datepicker-navigation .right .ngb-dp-navigation-chevron{-webkit-transform:rotate(-135deg);transform:rotate(-135deg)}body.ar :host ::ng-deep .custom-select{background-position:left.75rem center}body.ar :host ::ng-deep .hijri-date-icon-container{left:0}body.en :host ::ng-deep .hijri-date-icon-container{right:0}:host ::ng-deep .custom-select{background-position:left .25rem center!important;direction:rtl!important;min-width:100px}:host ::ng-deep ngb-datepicker-month-view .ngb-dp-day,:host ::ng-deep ngb-datepicker-month-view .ngb-dp-week-number,:host ::ng-deep ngb-datepicker-month-view .ngb-dp-weekday{width:2.5rem;height:2.5rem}:host ::ng-deep ngb-datepicker-month-view .ngb-dp-day div{width:100%;height:100%;line-height:2.5rem}`],\r\n  providers: [\r\n    { provide: NgbCalendar, useClass: NgbCalendarIslamicUmalqura },\r\n    { provide: NgbDatepickerI18n, useClass: IslamicI18n }\r\n  ]\r\n})\r\nexport class DatetimeHijriFieldComponent extends FieldComponent {\r\n  @ViewChild('input') calendar: NgbInputDatepicker;\r\n\r\n  /** @property Whether to validate for required.*/\r\n  public validateForRequired: boolean = true;\r\n\r\n  constructor(\r\n    public bridgeService: BridgeService,\r\n    private utilitiesService: UtilitiesService\r\n  ) {\r\n    super(bridgeService);\r\n  }\r\n\r\n  /** @description Handles the field's default settings.*/\r\n  public handleDefaultSettings() {\r\n    if (this.field.minDate) {\r\n      this.field.minDateValue = this.utilitiesService.evaluateFunctionOrDefault(this.field.minDate, new Date(this.field.minDate));\r\n    }\r\n\r\n    if (this.field.maxDate) {\r\n      this.field.maxDateValue = this.utilitiesService.evaluateFunctionOrDefault(this.field.maxDate, new Date(this.field.maxDate));\r\n    }\r\n\r\n    if (this.field.data.dateValue) {\r\n      this.field.data.value = this.utilitiesService.evaluateFunctionOrDefault(\r\n        this.field.data.dateValue,\r\n        new Date(this.field.data.dateValue)\r\n      );\r\n    }\r\n  }\r\n\r\n  /** @description Appends the form data.\r\n   * @param FormData data The data.\r\n   * @return FormData The updated form data.\r\n  */\r\n  public appendFormData(data: FormData): FormData {\r\n    if (this.field.data && this.field.data.value) {\r\n      data.append(this.field.name + '.year', this.field.data.value.year);\r\n\r\n      data.append(this.field.name + '.month', this.field.data.value.month);\r\n\r\n      data.append(this.field.name + '.day', this.field.data.value.day);\r\n    }\r\n\r\n    return data;\r\n  }\r\n\r\n  /** @description Toggles the calendar.*/\r\n  public toggleCalendar() {\r\n    this.calendar.toggle();\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { FieldComponent } from '../field/field.component';\r\n\r\n@Component({\r\n  selector: 'ntw-editor-field',\r\n  template: `<div [class]=\"field.cssClasses.container\"\r\n     [hidden]=\"isFieldHidden()\"\r\n     [attr.data-html2canvas-ignore]=\"field.html2CanvasIgnore\">\r\n\r\n  <!-- label -->\r\n  <label [class]=\"field.cssClasses.label\"\r\n         [for]=\"field.name\">\r\n    {{field.label | translate}}\r\n    <span class=\"required-asterisk\"\r\n          *ngIf=\"isValidationAsteriskShown()\">*</span>\r\n  </label>\r\n\r\n  <!-- input-->\r\n  <div [ngClass]=\"{'hide-toolbar':!field.showToolbar}\">\r\n    <p-editor [id]=\"field.name\"\r\n              [name]=\"field.name\"\r\n              #input=\"ngModel\"\r\n              [placeholder]=\"(field.placeholder) ? (field.placeholder | translate) : ''\"\r\n              [class]=\"field.cssClasses.input\"\r\n              [ngClass]=\"{'invalid': isValidationShown()}\"\r\n              [title]=\"field.tooltip | translate\"\r\n              [readonly]=\"field.readonly\"\r\n              [(ngModel)]=\"field.data.value\"\r\n              [style]=\"{'height':field.height}\"\r\n              *ngIf=\"bridgeService?.configuration?.settings?.formMode != 'Display'\"\r\n              (onSelectionChange)=\"triggerDynamicEvent('onSelectionChange', $event, field);\"\r\n              (onTextChange)=\"triggerDynamicEvent('onChange', $event, field);\"\r\n              (ngModelChange)=\"validate();\">\r\n    </p-editor>\r\n  </div>\r\n\r\n  <!-- display -->\r\n  <span [innerHTML]=\"field.data.value\"\r\n        *ngIf=\"bridgeService?.configuration?.settings?.formMode == 'Display'\"></span>\r\n\r\n  <!-- validations -->\r\n  <div *ngIf=\"isValidationShown()\">\r\n    <div *ngFor=\"let error of field?.validationErrors\">\r\n      <p [ngClass]=\"error.type | translate\">\r\n        {{error.message | translate}}\r\n      </p>\r\n    </div>\r\n  </div>\r\n</div>\r\n`,\r\n  styles: [`body.ar :host ::ng-deep .ql-editor p{direction:rtl;text-align:right}body.ar :host ::ng-deep span.ql-picker-label{text-align:left}body.ar :host ::ng-deep .ql-editor.ql-blank::before{left:unset}:host ::ng-deep .hide-toolbar .ui-editor-toolbar{display:none}:host ::ng-deep .hide-toolbar .ui-editor-content{border-top:1px solid #ccc!important}`]\r\n})\r\nexport class EditorFieldComponent extends FieldComponent {\r\n  /** @property Whether to validate for required.*/\r\n  public validateForRequired: boolean = true;\r\n\r\n  /** @description Gets the field's value.*/\r\n  public getValue() {\r\n    if (this.field.showToolbar) {\r\n      return this.field.data.value;\r\n    } else {\r\n      return this.field.data.value.replace(/<[^>]*>/g, '');\r\n    }\r\n  }\r\n}\r\n","import { Component, ViewChild } from '@angular/core';\r\nimport { FieldComponent } from '../field/field.component';\r\nimport { InputError } from '../../../models/input-error';\r\nimport { FileUpload } from 'primeng/fileupload';\r\n\r\n@Component({\r\n  selector: 'ntw-file-upload-field',\r\n  template: `<div [class]=\"field.cssClasses.container\"\r\n     [hidden]=\"isFieldHidden()\"\r\n     [attr.data-html2canvas-ignore]=\"field.html2CanvasIgnore\">\r\n\r\n  <!-- label -->\r\n  <label [class]=\"field.cssClasses.label\"\r\n         [for]=\"field.name\">\r\n    {{field.label | translate}}\r\n    <span class=\"required-asterisk\"\r\n          *ngIf=\"isValidationAsteriskShown()\">*</span>\r\n  </label>\r\n\r\n  <!-- input-->\r\n  <p-fileUpload [id]=\"field.name\"\r\n                [name]=\"field.name\"\r\n                [class]=\"field.cssClasses.input\"\r\n                [ngClass]=\"{'invalid': isValidationShown()}\"\r\n                [url]=\"field.data.url\"\r\n                [multiple]=\"field.multiple\"\r\n                [accept]=\"field.validation.accept\"\r\n                #input\r\n                [auto]=\"field.auto\"\r\n                [maxFileSize]=\"field.validation.maxFileSizeInBytes\"\r\n                [mode]=\"field.mode\"\r\n                [showCancelButton]=\"field.buttons.showCancelButton\"\r\n                [showUploadButton]=\"field.buttons.showUploadButton\"\r\n                [chooseLabel]=\"field.buttons.chooseLabel | translate\"\r\n                [uploadLabel]=\"field.buttons.uploadLabel | translate\"\r\n                [cancelLabel]=\"field.buttons.cancelLabel | translate\"\r\n                [title]=\"field.tooltip | translate\"\r\n                [disabled]=\"field.disabled\"\r\n                invalidFileSizeMessageSummary=\"invalidFileSize\"\r\n                invalidFileSizeMessageDetail=\"invalidFileSize\"\r\n                invalidFileTypeMessageDetail=\"invalidFileType\"\r\n                invalidFileTypeMessageSummary=\"invalidFileType\"\r\n                customUpload=true\r\n                *ngIf=\"bridgeService?.configuration?.settings?.formMode != 'Display'\"\r\n                (onSelect)=\"validate('onSelect');\"\r\n                (onRemove)=\"validate('onRemove');\"\r\n                (onClear)=\"validate('onClear');\">\r\n  </p-fileUpload>\r\n\r\n  <!-- display -->\r\n  <div class=\"upload-file-viewer\"\r\n       *ngIf=\"bridgeService?.configuration?.settings?.formMode != 'New' && field?.data?.value?.length > 0\">\r\n    <div class=\"upload-file-item\"\r\n         *ngFor=\"let file of field.data.value\">\r\n      <a [href]=\"file.url\"\r\n         [download]=\"file.fileName\"\r\n         target=\"_blank\"\r\n         class=\"upload-file-anchor\">\r\n        <span>\r\n          <i class=\"fa fa-file\"></i>\r\n        </span>\r\n        <span class=\"upload-file-title\">{{file.fileName}}</span>\r\n      </a>\r\n\r\n      <a href=\"javascript:;\"\r\n         (click)=\"removeFile(file);validate('onRemoveFile');\"\r\n         *ngIf=\"bridgeService?.configuration?.settings?.formMode != 'Display'\"\r\n         class=\"trash-icon-style\">\r\n        <span>\r\n          <i class=\"fa fa-times\" aria-hidden=\"true\"></i>\r\n        </span>\r\n      </a>\r\n      <div class=\"clearfix\"></div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- validations -->\r\n  <div *ngIf=\"isValidationShown()\">\r\n    <div *ngFor=\"let error of field?.validationErrors\">\r\n      <p [ngClass]=\"error.type | translate\">\r\n        {{error.message | translate}}\r\n      </p>\r\n    </div>\r\n  </div>\r\n</div>\r\n`,\r\n  styles: [`:host ::ng-deep p-fileupload .ui-messages-error{display:none!important}:host ::ng-deep .ui-fileupload{margin-bottom:8px}.upload-file-viewer{border:1px solid #d5d5d5;padding:10px}.upload-file-viewer .upload-file-item{border:1px solid #d5d5d5;padding:10px;background:linear-gradient(to bottom,#f6f7f9 0,#ebedf0 100%);margin-bottom:10px}.upload-file-title{padding:0 15px}a.upload-file-anchor{line-height:2}.upload-file-viewer div:last-child{margin-bottom:0}a.trash-icon-style{padding:6px 11px;border-radius:6px;font-size:12px;border:1px solid #2399e5;color:#fff;background:#2399e5;transition:background-color .2s}a.trash-icon-style:hover{border:1px solid #1f89ce;background:#1f89ce}body.ar :host ::ng-deep a.trash-icon-style{float:left}body.en :host ::ng-deep a.trash-icon-style{float:right}`]\r\n})\r\nexport class FileUploadFieldComponent extends FieldComponent {\r\n  /** @property The file upload control.*/\r\n  @ViewChild(FileUpload) fileUploadControl: FileUpload;\r\n\r\n  /** @description Clears the field's value.*/\r\n  public clearValue() {\r\n    if (this.fileUploadControl) {\r\n      this.fileUploadControl.clear();\r\n    }\r\n\r\n    const length = this.field.data.value.length;\r\n\r\n    for (let i = 0; i < length; i++) {\r\n      this.removeFile(this.field.data.value[i]);\r\n    }\r\n\r\n    this.clearValidationErrors();\r\n  }\r\n\r\n  /** @description Appends the form data.\r\n   * @param FormData data The data.\r\n   * @return FormData The updated form data.\r\n  */\r\n  public appendFormData(data: FormData): FormData {\r\n    if (this.fileUploadControl.files) {\r\n      for (const file of this.fileUploadControl.files) {\r\n        data.append(this.field.name, file);\r\n      }\r\n    }\r\n\r\n    return data;\r\n  }\r\n\r\n  /** @description Validates the form control and updates its validation errors list.\r\n   * @param any eventArguments The event arguments.\r\n   * @param boolean isSubmit Determines whether the validation is reached from form submission.\r\n   * @return Array<InputError> The list of validation errors.\r\n  */\r\n  public validate(eventArguments?: any, isSubmit?: boolean): Array<InputError> {\r\n    this.preValidate(isSubmit);\r\n\r\n    if (this.shouldValidate()) {\r\n      let valueLength = 0;\r\n      if (this.fileUploadControl) {\r\n        valueLength = eventArguments === 'onRemove' ? this.fileUploadControl.files.length - 1 : this.fileUploadControl.files.length;\r\n      }\r\n\r\n      if (this.field.data.value) {\r\n        valueLength += this.field.data.value.length;\r\n      }\r\n\r\n      if ((this.field.validation.min && valueLength < this.field.validation.min) ||\r\n        (this.field.validation.max && valueLength > this.field.validation.max)) {\r\n        this.field.validationErrors.push(new InputError(FieldComponent.ValidationErrorClass, this.field.validation.rangeText));\r\n      }\r\n\r\n      if (this.field.validation.maxFileSizeInBytes > 0 && this.fileUploadControl && this.fileUploadControl.msgs) {\r\n        const invalidFileSizeMessage = this.fileUploadControl.msgs.find(m => m.summary === 'invalidFileSize');\r\n\r\n        if (invalidFileSizeMessage) {\r\n          this.field.validationErrors.push(new InputError(FieldComponent.ValidationErrorClass, this.field.validation.invalidFileSizeText));\r\n        }\r\n\r\n        const invalidFileTypeMessage = this.fileUploadControl.msgs.find(m => m.summary === 'invalidFileType');\r\n\r\n        if (invalidFileTypeMessage) {\r\n          this.field.validationErrors.push(new InputError(FieldComponent.ValidationErrorClass, this.field.validation.invalidFileTypeText));\r\n        }\r\n      }\r\n\r\n      this.updateValidationSummary();\r\n    }\r\n\r\n    return this.field.validationErrors;\r\n  }\r\n\r\n  /** @description Removes the file.\r\n   * @param any file The file to remove.\r\n  */\r\n  public removeFile(file: any) {\r\n    this.field.data.value.pop(file);\r\n  }\r\n}\r\n\r\n","import { Component, ViewChild, ElementRef, OnInit } from '@angular/core';\r\nimport { FieldComponent } from '../field/field.component';\r\nimport { ImageCropperComponent, CropperSettings } from 'ng2-img-cropper';\r\nimport { FileUpload } from 'primeng/fileupload';\r\n\r\n@Component({\r\n  selector: 'ntw-image-cropper-field',\r\n  template: `<div [class]=\"field.cssClasses.container\"\r\n     [hidden]=\"isFieldHidden()\"\r\n     [attr.data-html2canvas-ignore]=\"field.html2CanvasIgnore\">\r\n\r\n  <!-- label -->\r\n  <label [class]=\"field?.cssClasses?.label\"\r\n         [for]=\"field.name\">\r\n    {{field.label | translate}}\r\n    <span class=\"required-asterisk\"\r\n          *ngIf=\"isValidationAsteriskShown()\">*</span>\r\n  </label>\r\n\r\n  <!-- input -->\r\n  <!-- upload control -->\r\n  <p-fileUpload [id]=\"field.name\"\r\n                [name]=\"field.name\"\r\n                [class]=\"field.cssClasses.input\"\r\n                [ngClass]=\"{'invalid': isValidationShown()}\"\r\n                accept=\"image/*\"\r\n                mode=\"advanced\"\r\n                [showCancelButton]=false\r\n                [showUploadButton]=false\r\n                [chooseLabel]=\"field.buttons.chooseLabel | translate\"\r\n                [title]=\"field.tooltip | translate\"\r\n                [disabled]=\"field.disabled\"\r\n                invalidFileSizeMessageSummary=\"invalidFileSize\"\r\n                invalidFileSizeMessageDetail=\"invalidFileSize\"\r\n                invalidFileTypeMessageDetail=\"invalidFileType\"\r\n                invalidFileTypeMessageSummary=\"invalidFileType\"\r\n                customUpload=true\r\n                *ngIf=\"bridgeService?.configuration?.settings?.formMode != 'Display'\"\r\n                (onSelect)=\"setCropperImage();validate();\"\r\n                (onRemove)=\"clearValue();validate();\">\r\n  </p-fileUpload>\r\n\r\n  <!-- cropper -->\r\n  <img-cropper *ngIf=\"bridgeService?.configuration?.settings?.formMode != 'Display'\"\r\n               [hidden]=\"!imageFile.src\"\r\n               [image]=\"imageFile\"\r\n               [settings]=\"cropperSettings\"\r\n               (onCrop)=\"setValue()\">\r\n  </img-cropper>\r\n\r\n  <!-- cropped image -->\r\n  <span class=\"cropped-image\"\r\n        *ngIf=\"bridgeService?.configuration?.settings?.formMode != 'Display'\"\r\n        [hidden]=\" !imageFile.image\">\r\n    <img #croppedImage\r\n         *ngIf=\"imageFile.image\"\r\n         [src]=\"imageFile.image\"\r\n         [width]=\"cropperSettings.width\"\r\n         [height]=\"cropperSettings.height\">\r\n  </span>\r\n\r\n  <!-- display -->\r\n  <span [class]=\"field.cssClasses.display\"\r\n        *ngIf=\"bridgeService?.configuration?.settings?.formMode == 'Display'\">\r\n    <img *ngIf=\"field.data.value\"\r\n         [src]=\"field.data.value\"\r\n         [width]=\"cropperSettings.width\"\r\n         [height]=\"cropperSettings.height\">\r\n  </span>\r\n\r\n  <!-- validations -->\r\n  <div *ngIf=\"isValidationShown()\">\r\n    <div *ngFor=\"let error of field?.validationErrors\">\r\n      <p [ngClass]=\"error.type | translate\">\r\n        {{error.message | translate}}\r\n      </p>\r\n    </div>\r\n  </div>\r\n</div>\r\n`,\r\n  styles: [`input.form-input{border:1px solid #ced4da;border-radius:.25rem;padding:5px}p-fileupload{display:block}:host ::ng-deep img-cropper .ng2-imgcrop{border:1px solid #d5d5d5;padding:20px 0;background-color:#ebedf0;width:100%;margin:10px 0;display:block}.form-display img{border:1px solid #d5d5d5;background-color:#ebedf0;padding:10px}.cropped-image{width:100%;display:block;border:1px solid #d5d5d5;background-color:#ebedf0;margin:0 auto;text-align:center;padding:10px}`]\r\n})\r\nexport class ImageCropperFieldComponent extends FieldComponent implements OnInit {\r\n  /** @property The image cropper component.*/\r\n  @ViewChild(ImageCropperComponent) cropper: ImageCropperComponent;\r\n\r\n  /** @property */\r\n  @ViewChild('croppedImage') croppedImageElement: ElementRef;\r\n\r\n  /** @property The file upload control.*/\r\n  @ViewChild(FileUpload) fileUploadControl: FileUpload;\r\n\r\n  /** @property The cropper settings.*/\r\n  public cropperSettings: CropperSettings;\r\n\r\n  /** @property The image file.*/\r\n  public imageFile: any = new Image();\r\n\r\n  /** @property Whether to validate for required.*/\r\n  public validateForRequired: boolean = true;\r\n\r\n  ngOnInit() {\r\n    this.initializeCropper();\r\n  }\r\n\r\n  /** @description Updates the field's value.\r\n   * @param any newValue The new field value.\r\n  */\r\n  public updateValue(newValue: any) {\r\n    this.field.data.value = newValue.value;\r\n\r\n    if (!this.isFormInDisplayMode()) {\r\n      this.imageFile = new Image();\r\n\r\n      this.imageFile.setAttribute('crossOrigin', 'anonymous');\r\n\r\n      this.imageFile.src = newValue.value;\r\n\r\n      // workaround as it is not working without it. no idea why :)\r\n      setTimeout(() => { this.cropper.setImage(this.imageFile); }, 1);\r\n    }\r\n  }\r\n\r\n  /** @description Clears the field's value.*/\r\n  public clearValue() {\r\n    if (this.field.data) {\r\n      this.field.data.value = '';\r\n\r\n      this.fileUploadControl.clear();\r\n\r\n      this.cropper.reset();\r\n\r\n      this.imageFile = new Image();\r\n\r\n      this.clearValidationErrors();\r\n    }\r\n  }\r\n\r\n  /** @description Sets the cropped image value.*/\r\n  public setValue() {\r\n    if (this.croppedImageElement) {\r\n      this.field.data.value = this.croppedImageElement.nativeElement.currentSrc;\r\n    }\r\n  }\r\n\r\n  /** @description Sets the cropped image.*/\r\n  public setCropperImage() {\r\n    const selectedFile = this.fileUploadControl.files[0];\r\n\r\n    if (selectedFile) {\r\n      this.imageFile = new Image();\r\n\r\n      const fileReader = new FileReader();\r\n\r\n      // set as a temporary value for validation since the read is async.\r\n      this.field.data.value = 'placeholder';\r\n\r\n      fileReader.onloadend = (loadEvent: any) => {\r\n        this.imageFile.src = loadEvent.target.result;\r\n\r\n        this.cropper.setImage(this.imageFile);\r\n\r\n        this.field.data.value = this.imageFile.src;\r\n      };\r\n\r\n      fileReader.readAsDataURL(selectedFile);\r\n    }\r\n  }\r\n\r\n  /** @description Initializes the cropper component.*/\r\n  private initializeCropper() {\r\n    this.cropperSettings = new CropperSettings();\r\n\r\n    this.cropperSettings.noFileInput = true;\r\n\r\n    this.cropperSettings.width = this.cropperSettings.croppedWidth = this.field.cropperSettings.width;\r\n\r\n    this.cropperSettings.height = this.cropperSettings.croppedHeight = this.field.cropperSettings.height;\r\n\r\n    this.cropperSettings.canvasWidth = this.field.cropperSettings.canvasWidth;\r\n\r\n    this.cropperSettings.canvasHeight = this.field.cropperSettings.canvasHeight;\r\n\r\n    this.cropperSettings.minWidth = this.field.cropperSettings.minWidth;\r\n\r\n    this.cropperSettings.minHeight = this.field.cropperSettings.minHeight;\r\n\r\n    this.cropperSettings.rounded = this.field.cropperSettings.rounded;\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { FieldComponent } from '../field/field.component';\r\n\r\n@Component({\r\n  selector: 'ntw-info-field',\r\n  template: `<div [class]=\"field.cssClasses.container\"\r\n     [hidden]=\"isFieldHidden()\"\r\n     [attr.data-html2canvas-ignore]=\"field.html2CanvasIgnore\">\r\n  <div [innerHTML]=\"field.htmlSnippet | translate\"></div>\r\n</div>\r\n`,\r\n  styles: [``]\r\n})\r\nexport class InfoFieldComponent extends FieldComponent {\r\n\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { FieldComponent } from '../field/field.component';\r\n\r\n@Component({\r\n  selector: 'ntw-input-field',\r\n  template: `<div [class]=\"field.cssClasses.container\"\r\n     [hidden]=\"isFieldHidden()\"\r\n     [attr.data-html2canvas-ignore]=\"field.html2CanvasIgnore\">\r\n\r\n  <!-- label -->\r\n  <label [class]=\"field.cssClasses.label\"\r\n         [for]=\"field.name\">\r\n    {{field.label | translate}}\r\n    <span class=\"required-asterisk\"\r\n          *ngIf=\"isValidationAsteriskShown()\">*</span>\r\n  </label>\r\n\r\n  <!-- input-->\r\n  <input [id]=\"field.name\"\r\n         [name]=\"field.name\"\r\n         [(ngModel)]=\"field.data.value\"\r\n         [class]=\"field.cssClasses.input\"\r\n         [ngClass]=\"{'invalid': isValidationShown()}\"\r\n         [placeholder]=\"(field.placeholder) ? (field.placeholder | translate) : ''\"\r\n         [title]=\"field.tooltip | translate\"\r\n         [autocomplete]=\"field.autoComplete\"\r\n         #input=\"ngModel\"\r\n         [type]=\"field.fieldType\"\r\n         [required]=\"field.validation.required\"\r\n         [pattern]=\"field.validation.pattern\"\r\n         [maxlength]=\"field.validation.length\"\r\n         [readonly]=\"field.readonly\"\r\n         [disabled]=\"field.disabled\"\r\n         *ngIf=\"bridgeService?.configuration?.settings?.formMode != 'Display'\"\r\n         (ngModelChange)=\"validate();triggerDynamicEvent('onChange', $event, field);\">\r\n\r\n  <!-- display -->\r\n  <span [class]=\"field.cssClasses.display\"\r\n        *ngIf=\"bridgeService?.configuration?.settings?.formMode == 'Display'\">\r\n    {{field.data.value}}\r\n  </span>\r\n\r\n  <!-- validations -->\r\n  <div *ngIf=\"isValidationShown()\">\r\n    <div *ngFor=\"let error of field?.validationErrors\">\r\n      <p [ngClass]=\"error.type | translate\">\r\n        {{error.message | translate}}\r\n      </p>\r\n    </div>\r\n  </div>\r\n</div>\r\n`,\r\n  styles: [`input.form-input{border:1px solid #ced4da;border-radius:.25rem;padding:5px}`]\r\n})\r\nexport class InputFieldComponent extends FieldComponent {\r\n  /** @property Whether to validate for required.*/\r\n  public validateForRequired: boolean = true;\r\n\r\n  /** @property Whether to validate for pattern.*/\r\n  public validateForPattern: boolean = true;\r\n}\r\n","import { Component, ViewChild, ElementRef, NgZone } from '@angular/core';\r\nimport { FieldComponent } from '../field/field.component';\r\nimport { BridgeService } from '../../../services/bridge.service';\r\nimport { MouseEvent, MapsAPILoader } from '@agm/core';\r\nimport { } from 'googlemaps';\r\nimport { Marker } from '../../../models/map-marker';\r\n\r\n@Component({\r\n  selector: 'ntw-location-field',\r\n  template: `<div [class]=\"field.cssClasses.container\"\r\n     [hidden]=\"isFieldHidden()\"\r\n     [attr.data-html2canvas-ignore]=\"field.html2CanvasIgnore\">\r\n\r\n  <!-- label -->\r\n  <label [class]=\"field.cssClasses.label\"\r\n         [for]=\"field.name\">\r\n    {{field.label | translate}}\r\n    <span class=\"required-asterisk\"\r\n          *ngIf=\"isValidationAsteriskShown()\">*</span>\r\n  </label>\r\n\r\n  <div class=\"search-location-container\"\r\n       *ngIf=\"bridgeService?.configuration?.settings?.formMode != 'Display'\">\r\n    <!-- input && display -->\r\n    <input #search\r\n           [id]=\"field.name\"\r\n           [name]=\"field.name\"\r\n           [title]=\"field.tooltip | translate\"\r\n           [placeholder]=\"(field.placeholder) ? (field.placeholder | translate) : ''\"\r\n           autocorrect=\"off\"\r\n           autocapitalize=\"off\"\r\n           spellcheck=\"false\"\r\n           type=\"text\"\r\n           [class]=\"field.cssClasses.input\"\r\n           (keydown.enter)=\"$event.preventDefault()\">\r\n\r\n    <!-- icon -->\r\n    <span class=\"search-location-icon\">\r\n    </span>\r\n  </div>\r\n\r\n  <agm-map [latitude]=\"field.defaultLocation?.latitude\"\r\n           [longitude]=\"field.defaultLocation?.longitude\"\r\n           [zoom]=\"field.zoom\"\r\n           [zoomControl]=\"field.zoomControl\"\r\n           [ngClass]=\"{'invalid': isValidationShown()}\"\r\n           (mapClick)=\"addMarkers($event);validate();\">\r\n\r\n    <agm-marker *ngFor=\"let marker of field.data.value\"\r\n                (markerClick)=\"triggerDynamicEvent('markerClick', $event, marker);\"\r\n                [latitude]=\"marker.latitude\"\r\n                [longitude]=\"marker.longitude\"\r\n                [markerDraggable]=\"marker.draggable && bridgeService?.configuration?.settings?.formMode != 'Display'\"\r\n                (dragEnd)=\"updateMarkerPosition(marker, $event)\">\r\n\r\n      <agm-info-window *ngIf=\"marker.infoHtml\">\r\n        <div [innerHTML]=\"marker.infoHtml | translate\"></div>\r\n      </agm-info-window>\r\n    </agm-marker>\r\n  </agm-map>\r\n\r\n  <!-- validations -->\r\n  <div *ngIf=\"isValidationShown()\">\r\n    <div *ngFor=\"let error of field?.validationErrors\">\r\n      <p [ngClass]=\"error.type | translate\">\r\n        {{error.message | translate}}\r\n      </p>\r\n    </div>\r\n  </div>\r\n</div>\r\n`,\r\n  styles: [`agm-map{width:100%;height:300px}span.search-location-icon:after{content:\"\\\\f002\";font:14px/2.5 FontAwesome;position:absolute;height:100%;color:#555}.search-location-container{position:relative}body.en :host ::ng-deep span.search-location-icon:after{right:5px;-webkit-transform:rotate(90deg);transform:rotate(90deg)}body.ar :host ::ng-deep span.search-location-icon:after{left:5px}input.form-input{border:1px solid #ced4da;border-radius:.25rem;padding:5px}`]\r\n})\r\nexport class LocationFieldComponent extends FieldComponent {\r\n  /** @property The search element.*/\r\n  @ViewChild('search') searchElement: ElementRef;\r\n\r\n  /** @property Whether to validate for range.*/\r\n  public validateForRange: boolean = true;\r\n\r\n  constructor(\r\n    public bridgeService: BridgeService,\r\n    private mapsAPILoader: MapsAPILoader,\r\n    private ngZone: NgZone\r\n  ) {\r\n    super(bridgeService);\r\n  }\r\n\r\n  /** @description Handles the field's default settings.*/\r\n  public handleDefaultSettings() {\r\n    // set a map field's location to use default location if no value is set and location is available.\r\n    if (!this.field.defaultLocation || !this.field.defaultLocation.latitude || !this.field.defaultLocation.longitude) {\r\n      if ('geolocation' in navigator) {\r\n        navigator.geolocation.getCurrentPosition((position) => {\r\n          this.field.defaultLocation = {\r\n            latitude: position.coords.latitude,\r\n            longitude: position.coords.longitude\r\n          };\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  /** @description Updates the field's value.\r\n   * @param any newValue The new field value.\r\n  */\r\n  public updateValue(newValue: any) {\r\n    for (const value of newValue.value) {\r\n      this.addMarkersFromLocation(value.latitude, value.longitude);\r\n    }\r\n  }\r\n\r\n  /** @description Clears the field's value.*/\r\n  public clearValue() {\r\n    if (this.field.data) {\r\n      this.field.data.value = [];\r\n\r\n      this.clearValidationErrors();\r\n    }\r\n  }\r\n\r\n  /** @description Appends the form data.\r\n   * @param FormData data The data.\r\n   * @return FormData The updated form data.\r\n  */\r\n  public appendFormData(data: FormData): FormData {\r\n    if (this.field.data && this.field.data.value) {\r\n      for (let i = 0; i < this.field.data.value.length; i++) {\r\n        const value = this.field.data.value[i];\r\n\r\n        data.append(this.field.name + '[' + i + '].latitude', value.latitude);\r\n\r\n        data.append(this.field.name + '[' + i + '].longitude', value.longitude);\r\n      }\r\n    }\r\n\r\n    return data;\r\n  }\r\n\r\n  /** @description Add a marker from the clicked map location.\r\n   * @param MouseEvent eventArguments The event arguments.\r\n  */\r\n  public addMarkers(eventArguments: MouseEvent) {\r\n    if (!this.isFormInDisplayMode()) {\r\n      this.addMarkersFromLocation(eventArguments.coords.lat, eventArguments.coords.lng);\r\n    }\r\n  }\r\n\r\n  /** @description Activates the google map location search.*/\r\n  public activateSearchInput() {\r\n    if (this.searchElement) {\r\n      // load Places Autocomplete\r\n      this.mapsAPILoader.load().then(() => {\r\n        const field = this.bridgeService.configuration.mergedFields.find(f => f.name === this.searchElement.nativeElement.id);\r\n\r\n        const autocomplete = new google.maps.places.Autocomplete(this.searchElement.nativeElement, {});\r\n        autocomplete.addListener('place_changed', () => {\r\n          this.ngZone.run(() => {\r\n            // get the place result\r\n            const place: google.maps.places.PlaceResult = autocomplete.getPlace();\r\n\r\n            // verify result\r\n            if (place.geometry === undefined || place.geometry === null) {\r\n              return;\r\n            }\r\n\r\n            // set latitude, longitude and zoom\r\n            const latitude = place.geometry.location.lat();\r\n\r\n            const longitude = place.geometry.location.lng();\r\n\r\n            field.defaultLocation = {\r\n              latitude: latitude,\r\n              longitude: longitude\r\n            };\r\n\r\n            field.zoom = 12;\r\n\r\n            const marker = new Marker(\r\n              place.geometry.location.lat(),\r\n              place.geometry.location.lng(),\r\n              field.markerSettings.defaultNewMarker.draggable,\r\n              field.markerSettings.defaultNewMarker.infoHtml\r\n            );\r\n\r\n            this.addMarkersFromLocation(latitude, longitude);\r\n          });\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  /** @description Add a marker from the clicked map location.\r\n   * @param number latitude The latitude.\r\n   * @param number longitude The longitude.\r\n  */\r\n  private addMarkersFromLocation(latitude: number, longitude: number) {\r\n    if (!this.field.data.value) {\r\n      this.field.data.value = [];\r\n    }\r\n\r\n    if (this.field.validation.max > 0 && this.field.data.value.length < this.field.validation.max) {\r\n      const marker = new Marker(\r\n        latitude,\r\n        longitude,\r\n        this.field.markerSettings.defaultNewMarker.draggable,\r\n        this.field.markerSettings.defaultNewMarker.infoHtml\r\n      );\r\n\r\n      marker.eventTriggers = this.field.markerSettings.defaultNewMarker.eventTriggers;\r\n\r\n      this.field.data.value.push(marker);\r\n    }\r\n  }\r\n\r\n  /** @description Update the marker's position when drag is done.\r\n   * @param Marker marker The marker to update.\r\n   * @param any eventArguments The event arguments of the action causing the trigger.\r\n  */\r\n  public updateMarkerPosition(marker: Marker, eventArguments: MouseEvent) {\r\n    marker.latitude = eventArguments.coords.lat;\r\n    marker.longitude = eventArguments.coords.lng;\r\n  }\r\n}\r\n","import { Component, ViewChild } from '@angular/core';\r\nimport { FieldComponent } from '../field/field.component';\r\nimport { InputMask } from 'primeng/inputmask';\r\n\r\n@Component({\r\n  selector: 'ntw-mask-field',\r\n  template: `<div [class]=\"field.cssClasses.container\"\r\n     [hidden]=\"isFieldHidden()\"\r\n     [attr.data-html2canvas-ignore]=\"field.html2CanvasIgnore\">\r\n\r\n  <!-- label -->\r\n  <label [class]=\"field.cssClasses.label\"\r\n         [for]=\"field.name\">\r\n    {{field.label | translate}}\r\n    <span class=\"required-asterisk\"\r\n          *ngIf=\"isValidationAsteriskShown()\">*</span>\r\n  </label>\r\n\r\n  <!-- input-->\r\n  <p-inputMask [id]=\"field.name\"\r\n               [name]=\"field.name\"\r\n               [class]=\"field.cssClasses.input\"\r\n               [ngClass]=\"{'invalid': isValidationShown()}\"\r\n               [title]=\"field.tooltip | translate\"\r\n               [placeholder]=\"(field.placeholder) ? (field.placeholder | translate) : ''\"\r\n               #input=\"ngModel\"\r\n               [readonly]=\"field.readonly\"\r\n               [(ngModel)]=\"field.data.value\"\r\n               [mask]=\"field.validation.mask\"\r\n               [slotChar]=\"field.slotChar\"\r\n               [autoClear]=\"field.autoClear\"\r\n               [unmask]=\"field.unmask\"\r\n               [disabled]=\"field.disabled\"\r\n               [maxlength]=\"field.validation.length\"\r\n               [characterPattern]=\"field.validation.characterPattern\"\r\n               [pattern]=\"field.validation.pattern\"\r\n               *ngIf=\"bridgeService?.configuration?.settings?.formMode != 'Display'\"\r\n               (ngModelChange)=\"validate();triggerDynamicEvent('onChange', $event, field);\">\r\n  </p-inputMask>\r\n\r\n  <!-- display -->\r\n  <span [class]=\"field.cssClasses.display\"\r\n        *ngIf=\"bridgeService?.configuration?.settings?.formMode == 'Display'\">\r\n    {{field.data.value}}\r\n  </span>\r\n\r\n  <!-- validations -->\r\n  <div *ngIf=\"isValidationShown()\">\r\n    <div *ngFor=\"let error of field?.validationErrors\">\r\n      <p [ngClass]=\"error.type | translate\">\r\n        {{error.message | translate}}\r\n      </p>\r\n    </div>\r\n  </div>\r\n</div>\r\n`,\r\n  styles: [``]\r\n})\r\nexport class MaskFieldComponent extends FieldComponent {\r\n  /** @property The validation summary component.*/\r\n  @ViewChild(InputMask) inputMask: InputMask;\r\n\r\n  /** @property Whether to validate for required.*/\r\n  public validateForRequired: boolean = true;\r\n\r\n  /** @property Whether to validate for pattern.*/\r\n  public validateForPattern: boolean = true;\r\n\r\n  /** @description Updates the mask.\r\n   * @param mask current The new mask.\r\n  */\r\n  public updateMask(mask: any) {\r\n    this.inputMask._mask = mask;\r\n\r\n    this.inputMask.initMask();\r\n\r\n    this.inputMask.inputViewChild.nativeElement.blur();\r\n\r\n    this.inputMask.inputViewChild.nativeElement.focus();\r\n  }\r\n\r\n  /** @description Updates the value.\r\n   * @param value current The new value.\r\n  */\r\n  public updateMaskValue(value: any) {\r\n    this.inputMask.writeValue(value);\r\n  }\r\n}\r\n","import { Component, Inject, ViewChild } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { DynamicFormComponent } from '../../dynamic-form/dynamic-form.component';\r\nimport { Field } from '../../../models/field';\r\n\r\n@Component({\r\n  selector: 'ntw-default-master-detail-form',\r\n  template: `<mat-dialog-actions>\r\n    <button mat-dialog-close mat-button>\r\n        <i class=\"fa fa-times-circle\"\r\n           aria-hidden=\"true\">\r\n        </i>\r\n    </button>\r\n</mat-dialog-actions>\r\n\r\n<mat-dialog-content>\r\n    <ntw-dynamic-form #detailsForm\r\n                      [parentComponent]=\"this\"\r\n                      [configurationSourceUrl]=\"field.details.configurationSourceUrl\">\r\n    </ntw-dynamic-form>\r\n</mat-dialog-content>\r\n`,\r\n  styles: [``]\r\n})\r\nexport class DefaultMasterDetailFormComponent {\r\n  /** @property The reference to the details dynamic form component.*/\r\n  @ViewChild('detailsForm') detailsFormComponent: DynamicFormComponent;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<DefaultMasterDetailFormComponent>,\r\n    @Inject(MAT_DIALOG_DATA)\r\n    public field: Field\r\n  ) { }\r\n\r\n  /** @description Adds a child and closes the dialog.\r\n   * @param DefaultMasterDetailFormComponent current The current instance of the default master detail form component.\r\n   * @param any triggeringField The field triggering the action.\r\n  */\r\n  addChild(current: DefaultMasterDetailFormComponent, triggeringField: any) {\r\n    //current.detailsFormComponent.validateForm();\r\n\r\n    //if (current.detailsFormComponent.configuration.validationErrors.length === 0) {\r\n    //  const values = current.detailsFormComponent.getFormValues();\r\n\r\n    //  current.dialogRef.close(values);\r\n    //}\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { FieldComponent } from '../field/field.component';\r\nimport { BridgeService } from '../../../services/bridge.service';\r\nimport { DefaultMasterDetailFormComponent } from '../../form-part-templates/default-master-detail-form/default-master-detail-form.component';\r\nimport { MatDialog } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'ntw-master-detail-field',\r\n  template: `<div [class]=\"field.cssClasses.container\"\r\n     [hidden]=\"isFieldHidden()\"\r\n     [attr.data-html2canvas-ignore]=\"field.html2CanvasIgnore\">\r\n\r\n  <!-- label -->\r\n  <label [class]=\"field.cssClasses.label\"\r\n         [for]=\"field.name\">\r\n    {{field.label | translate}}\r\n    <span class=\"required-asterisk\"\r\n          *ngIf=\"isValidationAsteriskShown()\">*</span>\r\n  </label>\r\n\r\n  <!-- input-->\r\n  <div>\r\n    <a href=\"javascript:;\"\r\n       (click)=\"openDialog();\">\r\n      <i class=\"fa fa-plus\"></i>\r\n    </a>\r\n  </div>\r\n\r\n  <!-- display -->\r\n  <span [class]=\"field.cssClasses.display\"\r\n        *ngIf=\"bridgeService?.configuration?.settings?.formMode == 'Display'\">\r\n\r\n  </span>\r\n\r\n  <!-- validations -->\r\n  <div *ngIf=\"isValidationShown()\">\r\n    <div *ngFor=\"let error of field?.validationErrors\">\r\n      <p [ngClass]=\"error.type | translate\">\r\n        {{error.message | translate}}\r\n      </p>\r\n    </div>\r\n  </div>\r\n</div>\r\n`,\r\n  styles: [``]\r\n})\r\nexport class MasterDetailFieldComponent extends FieldComponent {\r\n  /** @property Whether to validate for range.*/\r\n  public validateForRange: boolean = true;\r\n\r\n  constructor(\r\n    public bridgeService: BridgeService,\r\n    private dialog: MatDialog\r\n  ) {\r\n    super(bridgeService);\r\n  }\r\n\r\n  /** @description Opens the details dialog.*/\r\n  openDialog() {\r\n    const detailsDialog = this.dialog.open(DefaultMasterDetailFormComponent, {\r\n      data: this.field\r\n    });\r\n\r\n    detailsDialog.afterClosed().subscribe(result => {\r\n      console.log(result);\r\n    });\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { BoundableFieldComponent } from '../boundable-field/boundable-field.component';\r\n\r\n@Component({\r\n  selector: 'ntw-multi-select-field',\r\n  template: `<div [class]=\"field.cssClasses.container\"\r\n     [hidden]=\"isFieldHidden()\"\r\n     [attr.data-html2canvas-ignore]=\"field.html2CanvasIgnore\">\r\n\r\n  <!-- label -->\r\n  <label [class]=\"field.cssClasses.label\"\r\n         [for]=\"field.name\">\r\n    {{field.label | translate}}\r\n    <span class=\"required-asterisk\"\r\n          *ngIf=\"isValidationAsteriskShown()\">*</span>\r\n  </label>\r\n\r\n  <!-- input-->\r\n  <p-multiSelect [options]=\"field.data.options\"\r\n                 [id]=\"field.name\"\r\n                 [name]=\"field.name\"\r\n                 [class]=\"field.cssClasses.input\"\r\n                 [ngClass]=\"{'invalid': isValidationShown()}\"\r\n                 [title]=\"field.tooltip | translate\"\r\n                 #input=\"ngModel\"\r\n                 [filterPlaceHolder]=\"field.placeholder | translate\"\r\n                 [(ngModel)]=\"field.data.value\"\r\n                 [required]=\"field.validation.required\"\r\n                 [disabled]=\"field.disabled\"\r\n                 [filter]=\"field.enablefilter\"\r\n                 optionLabel=\"name\"\r\n                 dataKey=\"id\"\r\n                 [defaultLabel]=\"field.placeholder | translate\"\r\n                 *ngIf=\"bridgeService?.configuration?.settings?.formMode != 'Display'\"\r\n                 (onChange)=\"triggerDynamicEvent('onChange', $event, field);\"\r\n                 (ngModelChange)=\"validate();\">\r\n  </p-multiSelect>\r\n\r\n  <!-- display -->\r\n  <div [class]=\"field.cssClasses.display\"\r\n       *ngIf=\"bridgeService?.configuration?.settings?.formMode == 'Display'\">\r\n    <ul>\r\n      <li *ngFor=\"let item of field?.data?.value\">{{item.name}}</li>\r\n    </ul>\r\n  </div>\r\n\r\n  <!-- validations -->\r\n  <div *ngIf=\"isValidationShown()\">\r\n    <div *ngFor=\"let error of field?.validationErrors\">\r\n      <p [ngClass]=\"error.type | translate\">\r\n        {{error.message | translate}}\r\n      </p>\r\n    </div>\r\n  </div>\r\n</div>\r\n`,\r\n  styles: [`:host ::ng-deep .ui-multiselect.ui-widget{width:100%}:host ::ng-deep p-multiselect .ui-multiselect-label.ui-corner-all{margin-bottom:0;height:35px}body.ar :host ::ng-deep .ui-multiselect-filter-container{float:right}body.ar :host ::ng-deep .ui-multiselect-header .ui-multiselect-close{right:unset;left:.375em}body.ar :host ::ng-deep .ui-multiselect-panel .ui-multiselect-item{text-align:right!important}body.ar :host ::ng-deep p-multiselect .ui-corner-right{left:0;right:unset;border-right:1px solid #d6d6d6;border-left:0;border-top-right-radius:0;border-bottom-right-radius:0}body.ar :host ::ng-deep p-multiselect .ui-multiselect-label.ui-corner-all{padding-right:5px}`]\r\n})\r\nexport class MultiSelectFieldComponent extends BoundableFieldComponent {\r\n  /** @property Whether to validate for range.*/\r\n  public validateForRange: boolean = true;\r\n\r\n  /** @description Clears the field's value.*/\r\n  public clearValue() {\r\n    if (this.field.data) {\r\n      this.field.data.value = [];\r\n\r\n      this.control.reset();\r\n\r\n      this.clearValidationErrors();\r\n    }\r\n  }\r\n\r\n  /** @description Appends the form data.\r\n   * @param FormData data The data.\r\n   * @return FormData The updated form data.\r\n  */\r\n  public appendFormData(data: FormData): FormData {\r\n    if (this.field.data && this.field.data.value) {\r\n      for (let i = 0; i < this.field.data.value.length; i++) {\r\n        const value = this.field.data.value[i];\r\n\r\n        data.append(this.field.name + '[' + i + '].id', value.id);\r\n      }\r\n    }\r\n\r\n    return data;\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { BoundableFieldComponent } from '../boundable-field/boundable-field.component';\r\n\r\n@Component({\r\n  selector: 'ntw-radiobutton-field',\r\n  template: `<div [class]=\"field.cssClasses.container\"\r\n     [hidden]=\"isFieldHidden()\"\r\n     [attr.data-html2canvas-ignore]=\"field.html2CanvasIgnore\">\r\n\r\n  <!-- label -->\r\n  <label [class]=\"field.cssClasses.label\"\r\n         [for]=\"field.name\">\r\n    {{field.label | translate}}\r\n    <span class=\"required-asterisk\"\r\n          *ngIf=\"isValidationAsteriskShown()\">*</span>\r\n  </label>\r\n\r\n  <!-- input-->\r\n  <div class=\"radioButtonHolder\"\r\n       *ngIf=\"bridgeService?.configuration?.settings?.formMode != 'Display'\">\r\n    <p-radioButton *ngFor=\"let radiobutton of field.data.options; let i = index\"\r\n                   [id]=\"field.name+'_'+i\"\r\n                   [name]=\"field.name\"\r\n                   [(ngModel)]=\"field.data.value\"\r\n                   [class]=\"field.cssClasses.input\"\r\n                   [ngClass]=\"{'invalid': isValidationShown()}\"\r\n                   [title]=\"field.tooltip | translate\"\r\n                   #input=\"ngModel\"\r\n                   [required]=\"field.validation.required\"\r\n                   [label]=\" radiobutton.name | translate\"\r\n                   [value]=\"radiobutton.id\"\r\n                   [disabled]=\"field.disabled\"\r\n                   (onClick)=\"triggerDynamicEvent('onClick', $event, field);\"\r\n                   (ngModelChange)=\"validate();\">\r\n    </p-radioButton>\r\n  </div>\r\n\r\n  <!-- display -->\r\n  <span [class]=\"field.cssClasses.display\"\r\n        *ngIf=\"bridgeService?.configuration?.settings?.formMode == 'Display'\">\r\n    {{field?.data?.value}}\r\n  </span>\r\n\r\n  <!-- validations -->\r\n  <div *ngIf=\"isValidationShown()\">\r\n    <div *ngFor=\"let error of field?.validationErrors\">\r\n      <p [ngClass]=\"error.type | translate\">\r\n        {{error.message | translate}}\r\n      </p>\r\n    </div>\r\n  </div>\r\n</div>\r\n`,\r\n  styles: [`p-radiobutton{display:block}`]\r\n})\r\nexport class RadiobuttonFieldComponent extends BoundableFieldComponent {\r\n  /** @property Whether to validate for required.*/\r\n  public validateForRequired: boolean = true;\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { FieldComponent } from '../field/field.component';\r\n\r\n@Component({\r\n  selector: 'ntw-rating-field',\r\n  template: `<div [class]=\"field.cssClasses.container\"\r\n     [hidden]=\"isFieldHidden()\"\r\n     [attr.data-html2canvas-ignore]=\"field.html2CanvasIgnore\">\r\n\r\n  <!-- label -->\r\n  <label [class]=\"field?.cssClasses?.label\"\r\n         [for]=\"field.name\">\r\n    {{field.label | translate}}\r\n    <span class=\"required-asterisk\"\r\n          *ngIf=\"isValidationAsteriskShown()\">*</span>\r\n  </label>\r\n\r\n  <!-- input & display -->\r\n  <p-rating [id]=\"field.name\"\r\n            [name]=\"field.name\"\r\n            [(ngModel)]=\"field.data.value\"\r\n            [class]=\"field.cssClasses.input\"\r\n            [ngClass]=\"{'invalid': isValidationShown()}\"\r\n            [title]=\"field.tooltip | translate\"\r\n            [readonly]=\"field.readonly\"\r\n            [disabled]=\"field.disabled\"\r\n            [stars]=\"field.starNumber\"\r\n            [iconCancelClass]=\"field.iconCancelClass\"\r\n            [iconOnClass]=\"field.iconOnClass\"\r\n            [iconOffClass]=\"field.iconOffClass\"\r\n            [cancel]=\"field.cancelIcon && !field.readonly\"\r\n            (onRate)=\"triggerDynamicEvent('onRate', $event, field);validate();\"\r\n            (onCancel)=\"triggerDynamicEvent('onCancel', $event, field);validate();\">\r\n  </p-rating>\r\n\r\n  <!-- validations -->\r\n  <div *ngIf=\"isValidationShown()\">\r\n    <div *ngFor=\"let error of field?.validationErrors\">\r\n      <p [ngClass]=\"error.type | translate\">\r\n        {{error.message | translate}}\r\n      </p>\r\n    </div>\r\n  </div>\r\n</div>\r\n`,\r\n  styles: [``]\r\n})\r\nexport class RatingFieldComponent extends FieldComponent {\r\n  /** @property Whether to validate for required.*/\r\n  public validateForRequired: boolean = true;\r\n\r\n  /** @description Handles the field's default settings.*/\r\n  public handleDefaultSettings() {\r\n    if (this.isFormInDisplayMode()) {\r\n      this.field.readonly = true;\r\n    }\r\n\r\n    if (!this.field.iconCancelClass) {\r\n      this.field.iconCancelClass = 'pi pi- ban';\r\n    }\r\n\r\n    if (!this.field.iconOnClass) {\r\n      this.field.iconOnClass = 'pi pi-star';\r\n    }\r\n\r\n    if (!this.field.iconOffClass) {\r\n      this.field.iconOffClass = 'pi pi-star-o';\r\n    }\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { BoundableFieldComponent } from '../boundable-field/boundable-field.component';\r\n\r\n@Component({\r\n  selector: 'ntw-select-field',\r\n  template: `<div [class]=\"field.cssClasses.container\"\r\n     [hidden]=\"isFieldHidden()\"\r\n     [attr.data-html2canvas-ignore]=\"field.html2CanvasIgnore\">\r\n\r\n  <!-- label -->\r\n  <label [class]=\"field.cssClasses.label\"\r\n         [for]=\"field.name\">\r\n    {{field.label | translate}}\r\n    <span class=\"required-asterisk\"\r\n          *ngIf=\"isValidationAsteriskShown()\">*</span>\r\n  </label>\r\n\r\n  <!-- input-->\r\n  <p-dropdown [options]=\"field.data.options\"\r\n              [id]=\"field.name\"\r\n              [name]=\"field.name\"\r\n              [class]=\"field.cssClasses.input\"\r\n              [ngClass]=\"{'invalid': isValidationShown()}\"\r\n              [title]=\"field.tooltip | translate\"\r\n              #input=\"ngModel\"\r\n              [placeholder]=\"(field.placeholder) ? (field.placeholder | translate) : ''\"\r\n              [(ngModel)]=\"field.data.value\"\r\n              [required]=\"field.validation.required\"\r\n              [disabled]=\"field.disabled\"\r\n              [filter]=\"field.enablefilter\"\r\n              optionLabel=\"name\"\r\n              dataKey=\"id\"\r\n              *ngIf=\"bridgeService?.configuration?.settings?.formMode != 'Display'\"\r\n              (onChange)=\"validate();triggerDynamicEvent('onChange', $event, field);\">\r\n  </p-dropdown>\r\n\r\n  <!-- display -->\r\n  <span [class]=\"field.cssClasses.display\"\r\n        *ngIf=\"bridgeService?.configuration?.settings?.formMode == 'Display'\">\r\n    {{field?.data?.value?.name}}\r\n  </span>\r\n\r\n  <!-- validations -->\r\n  <div *ngIf=\"isValidationShown()\">\r\n    <div *ngFor=\"let error of field?.validationErrors\">\r\n      <p [ngClass]=\"error.type | translate\">\r\n        {{error.message | translate}}\r\n      </p>\r\n    </div>\r\n  </div>\r\n</div>\r\n`,\r\n  styles: [`body.ar :host ::ng-deep .ui-dropdown-panel .ui-dropdown-item{text-align:right}body.ar :host ::ng-deep p-dropdown .ui-dropdown .ui-dropdown-trigger{left:0;right:unset;border-right:1px solid #d6d6d6;border-left:0;border-top-right-radius:0;border-bottom-right-radius:0}body.ar :host ::ng-deep .ui-dropdown .ui-dropdown-label{padding-right:5px}`]\r\n})\r\nexport class SelectFieldComponent extends BoundableFieldComponent {\r\n  /** @property Whether to validate for required.*/\r\n  public validateForRequired: boolean = true;\r\n\r\n  /** @description Appends the form data.\r\n   * @param FormData data The data.\r\n   * @return FormData The updated form data.\r\n  */\r\n  public appendFormData(data: FormData): FormData {\r\n    if (this.field.data && this.field.data.value) {\r\n      data.append(this.field.name + '.id', this.field.data.value.id);\r\n    }\r\n\r\n    return data;\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { FieldComponent } from '../field/field.component';\r\nimport { BridgeService } from '../../../services/bridge.service';\r\nimport { UtilitiesService } from '../../../services/utilities.service';\r\n\r\n@Component({\r\n  selector: 'ntw-time-field',\r\n  template: `<div [class]=\"field.cssClasses.container\"\r\n     [hidden]=\"isFieldHidden()\"\r\n     [attr.data-html2canvas-ignore]=\"field.html2CanvasIgnore\">\r\n\r\n  <!-- label -->\r\n  <label [class]=\"field.cssClasses.label\"\r\n         [for]=\"field.name\">\r\n    {{field.label | translate}}\r\n    <span class=\"required-asterisk\"\r\n          *ngIf=\"isValidationAsteriskShown()\">*</span>\r\n  </label>\r\n\r\n  <!-- input-->\r\n  <ntw-mat-timepicker color=\"primary\"\r\n                      [inputClass]=\"field.cssClasses.input\"\r\n                      [ngClass]=\"{'invalid': isValidationShown()}\"\r\n                      [inputId]=\"field.name\"\r\n                      [inputName]=\"field.name\"\r\n                      [disabled]=\"field.disabled\"\r\n                      readonly=true\r\n                      [tooltip]=\"field.tooltip | translate\"\r\n                      [placeholderValue]=\"field.tooltip | translate\"\r\n                      [(userTime)]=\"field.data.value\"\r\n                      *ngIf=\"bridgeService?.configuration?.settings?.formMode != 'Display'\"\r\n                      (userTimeChange)=\"setTimePickerFieldValue($event);validate();triggerDynamicEvent('onChange', $event, field);\">\r\n  </ntw-mat-timepicker>\r\n\r\n  <!-- display -->\r\n  <span [class]=\"field.cssClasses.display\"\r\n        *ngIf=\"bridgeService?.configuration?.settings?.formMode == 'Display'\">\r\n    {{field?.data?.value?.hour}}:{{field?.data?.value?.minute}}\r\n    <span *ngIf=\"field?.data?.value?.format == 12\">{{field?.data?.value?.meriden | translate}}</span>\r\n  </span>\r\n\r\n  <!-- validations -->\r\n  <div *ngIf=\"isValidationShown()\">\r\n    <div *ngFor=\"let error of field?.validationErrors\">\r\n      <p [ngClass]=\"error.type | translate\">\r\n        {{error.message | translate}}\r\n      </p>\r\n    </div>\r\n  </div>\r\n</div>\r\n`,\r\n  styles: [`:host ::ng-deep .time-picker-button.mat-button{position:absolute;border:1px solid #2399e5;color:#fff;background:#2399e5;transition:background-color .2s;height:35px}body.en :host ::ng-deep .time-picker-button.mat-button{right:15px}body.ar :host ::ng-deep .time-picker-button.mat-button{left:15px}:host ::ng-deep .w-mat-timepicker .mat-button,:host ::ng-deep .w-mat-timepicker .mat-flat-button,:host ::ng-deep .w-mat-timepicker .mat-icon-button,:host ::ng-deep .w-mat-timepicker .mat-stroked-button{line-height:32px}:host ::ng-deep input.form-input{border:1px solid #ced4da;border-radius:.25rem;padding:5px}`]\r\n})\r\nexport class TimeFieldComponent extends FieldComponent {\r\n  /** @property Whether to validate for required.*/\r\n  public validateForRequired: boolean = true;\r\n\r\n  constructor(\r\n    public bridgeService: BridgeService,\r\n    private utilitiesService: UtilitiesService\r\n  ) {\r\n    super(bridgeService);\r\n  }\r\n\r\n  /** @description Handles the field's default settings.*/\r\n  public handleDefaultSettings() {\r\n    this.field.data.value = this.utilitiesService.evaluateFunctionOrDefault(this.field.setTime, this.field.setTime);\r\n  }\r\n\r\n  /** @description Clears the field's value.*/\r\n  public clearValue() {\r\n    if (this.field.data) {\r\n      this.field.data.value = this.utilitiesService.evaluateFunctionOrDefault(this.field.setTime, this.field.setTime);\r\n    }\r\n  }\r\n\r\n  /** @description Appends the form data.\r\n   * @param FormData data The data.\r\n   * @return FormData The updated form data.\r\n  */\r\n  public appendFormData(data: FormData): FormData {\r\n    if (this.field.data && this.field.data.value) {\r\n      data.append(this.field.name + '.hour', this.field.data.value.hour);\r\n\r\n      data.append(this.field.name + '.minute', this.field.data.value.minute);\r\n\r\n      data.append(this.field.name + '.meriden', this.field.data.value.meriden);\r\n\r\n      data.append(this.field.name + '.format', this.field.data.value.format);\r\n    }\r\n\r\n    return data;\r\n  }\r\n\r\n  /** @description Sets a time picker field's value once it is changed.\r\n   * @param any newValue The new value.\r\n  */\r\n  public setTimePickerFieldValue(newValue: any) {\r\n    this.field.data.value = newValue;\r\n  }\r\n}\r\n","import { Component, ViewChild } from '@angular/core';\r\nimport { FieldComponent } from '../field/field.component';\r\nimport { BridgeService } from '../../../services/bridge.service';\r\nimport { LanguageService } from '../../../services/language.service';\r\nimport { InputError } from '../../../models/input-error';\r\n\r\n@Component({\r\n  selector: 'ntw-recaptcha-field',\r\n  template: `<div [class]=\"field.cssClasses.container\"\r\n     [hidden]=\"isFieldHidden()\"\r\n     [attr.data-html2canvas-ignore]=\"field.html2CanvasIgnore\">\r\n\r\n  <!-- label -->\r\n  <label [class]=\"field.cssClasses.label\">\r\n    {{field.label | translate}}\r\n    <span class=\"required-asterisk\"\r\n          *ngIf=\"isValidationAsteriskShown()\">*</span>\r\n  </label>\r\n\r\n  <!-- input-->\r\n  <re-captcha #recaptcha\r\n              [id]=\"field.name\"\r\n              [siteKey]=\"field.siteKey\"\r\n              [class]=\"field.cssClasses.input\"\r\n              [ngClass]=\"{'invalid': isValidationShown()}\"\r\n              [theme]=\"field.theme\"\r\n              [size]=\"field.size\"\r\n              [title]=\"field.tooltip | translate\"\r\n              (resolved)=\"validate($event);\">\r\n  </re-captcha>\r\n\r\n  <!-- validations -->\r\n  <div *ngIf=\"isValidationShown()\">\r\n    <div *ngFor=\"let error of field?.validationErrors\">\r\n      <p [ngClass]=\"error.type | translate\">\r\n        {{error.message | translate}}\r\n      </p>\r\n    </div>\r\n  </div>\r\n</div>\r\n`,\r\n  styles: [``]\r\n})\r\nexport class RecaptchaFieldComponent extends FieldComponent {\r\n  /** @property The recaptcha element.*/\r\n  @ViewChild('recaptcha') recaptchaElement: any;\r\n\r\n  /** @property Whether the field is valid.*/\r\n  private isValid: boolean;\r\n\r\n  constructor(\r\n    public bridgeService: BridgeService,\r\n    private languageService: LanguageService\r\n  ) {\r\n    super(bridgeService);\r\n  }\r\n\r\n  /** @description Clears the field's value.*/\r\n  public clearValue() {\r\n    this.isValid = false;\r\n\r\n    this.clearValidationErrors();\r\n  }\r\n\r\n  /** @description Validates the form control and updates its validation errors list.\r\n   * @param any eventArguments The event arguments.\r\n   * @param boolean isSubmit Determines whether the validation is reached from form submission.\r\n   * @return Array<InputError> The list of validation errors.\r\n  */\r\n  public validate(eventArguments?: any, isSubmit?: boolean): Array<InputError> {\r\n    this.preValidate(isSubmit);\r\n\r\n    if (this.shouldValidate()) {\r\n      if (this.field.validation.required) {\r\n        if (!isSubmit) {\r\n          this.isValid = eventArguments != null;\r\n        }\r\n\r\n        if (!this.isValid) {\r\n          this.field.validationErrors.push(new InputError(FieldComponent.ValidationErrorClass, this.field.validation.requiredText));\r\n        }\r\n      }\r\n\r\n      this.updateValidationSummary();\r\n    }\r\n\r\n    return this.field.validationErrors;\r\n  }\r\n\r\n  /** @description Sets the captcha language.*/\r\n  public setCaptchaLanguge() {\r\n    const language = this.languageService.getLanguage();\r\n\r\n    if (this.recaptchaElement) {\r\n      const captchaIFrame = this.recaptchaElement.elementRef.nativeElement.querySelector('iframe');\r\n\r\n      if (captchaIFrame) {\r\n        const src = captchaIFrame.getAttribute('src');\r\n\r\n        captchaIFrame.setAttribute('src', src.replace(/hl=(.*?)&/, 'hl=' + language + '&'));\r\n      }\r\n    }\r\n\r\n    this.isValid = false;\r\n\r\n    this.clearValidationErrors();\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { BridgeService } from '../../../services/bridge.service';\r\n\r\n@Component({\r\n  selector: 'ntw-next-previous-section',\r\n  template: `<div class=\"next-prev-container\">\r\n  <a class=\"arrow-prev\"\r\n     href=\"javascript:;\"\r\n     (click)=\"incrementSection(-1)\"\r\n     title=\"{{'buttons.Previous' | translate}}\">\r\n  </a>\r\n  <span class=\"next-prev-header\">{{bridgeService.configuration?.currentSection?.legend | translate}}</span>\r\n  <a class=\"arrow-next\"\r\n     href=\"javascript:;\"\r\n     (click)=\"incrementSection(1)\"\r\n     title=\"{{'buttons.Next' | translate}}\">\r\n  </a>\r\n</div>\r\n`,\r\n  styles: [`.next-prev-container a{text-decoration:none!important}.next-prev-container{text-align:center}.next-prev-header{font-size:2em;font-weight:700}body.en :host ::ng-deep a.arrow-prev:before{content:\"\\\\f104\";font:3em/1 FontAwesome;color:#555565}body.en :host ::ng-deep a.arrow-next:before{content:\"\\\\f105\";font:3em/1 FontAwesome;color:#555565}body.en :host ::ng-deep a.arrow-next{float:right}body.en :host ::ng-deep a.arrow-prev{float:left}body.ar :host ::ng-deep a.arrow-prev:before{content:\"\\\\f105\";font:3em/1 FontAwesome;color:#555565}body.ar :host ::ng-deep a.arrow-next:before{content:\"\\\\f104\";font:3em/1 FontAwesome;color:#555565}body.ar :host ::ng-deep a.arrow-next{float:left}body.ar :host ::ng-deep a.arrow-prev{float:right}`]\r\n})\r\nexport class NextPreviousSectionComponent {\r\n  constructor(\r\n    public bridgeService: BridgeService\r\n  ) { }\r\n\r\n  /** @description Cycles through the sections.\r\n   * @param number increment The increment.\r\n  */\r\n  public incrementSection(increment: number) {\r\n    let newSectionId = this.bridgeService.configuration.currentSection.id + increment;\r\n\r\n    if (newSectionId === 0) {\r\n      newSectionId = this.bridgeService.configuration.sections.length;\r\n    } else if (newSectionId === this.bridgeService.configuration.sections.length + 1) {\r\n      newSectionId = 1;\r\n    }\r\n\r\n    this.bridgeService.configuration.currentSection = this.bridgeService.configuration.sections.find(s => s.id === newSectionId);\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { BridgeService } from '../../../services/bridge.service';\r\nimport { Section } from '../../../models/section';\r\n\r\n@Component({\r\n  selector: 'ntw-tabs-section',\r\n  template: `<ul class=\"nav nav-tabs\">\r\n  <li *ngFor=\"let section of bridgeService?.configuration?.sections\"\r\n      class=\"nav-item\">\r\n    <a class=\"nav-link\"\r\n       href=\"javascript:;\"\r\n       [ngClass]=\"{'active':section.id==bridgeService?.configuration?.currentSection?.id}\"\r\n       (click)=\"switchSection(section)\">\r\n      <span>{{section.legend | translate}}</span>\r\n      <span class=\"validation-errors-count\"\r\n            *ngIf=\"section.validationErrorsCount > 0\">\r\n      </span>\r\n    </a>\r\n  </li>\r\n</ul>\r\n`,\r\n  styles: [``]\r\n})\r\nexport class TabsSectionComponent {\r\n  constructor(\r\n    public bridgeService: BridgeService\r\n  ) { }\r\n\r\n  /** @description Switches the active section.\r\n   * @param Section section The new active section.\r\n  */\r\n  public switchSection(section: Section) {\r\n    this.bridgeService.configuration.currentSection = section;\r\n  }\r\n}\r\n","import { Component, ViewChild, ElementRef, ChangeDetectorRef } from '@angular/core';\r\nimport { BridgeService } from '../../../services/bridge.service';\r\nimport { LanguageService } from '../../../services/language.service';\r\nimport { ValidationSummaryModes, SwalTypes } from '../../../models/enums';\r\nimport swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'ntw-validation-summary',\r\n  template: `<div #validationSummary\r\n     class=\"validation-summary-container\"\r\n     [hidden]=\"bridgeService?.configuration?.settings?.validationSummaryMode !='List'\">\r\n  <div class=\"validation-summary\"\r\n       *ngIf=\"bridgeService?.configuration?.validationErrors?.length > 0\">\r\n    <span class=\"validation-summary-title-section\">{{'validations.ValidationSummaryErrors' | translate}}</span>\r\n    <ul>\r\n      <li class=\"validation-summary-error\" *ngFor=\"let error of bridgeService?.configuration?.validationErrors\">\r\n        {{error.message | translate}}\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</div>\r\n`,\r\n  styles: [`.validation-summary{border:1px solid #d6d6d6;padding-top:15px;color:red;margin-bottom:20px}.validation-summary-title-section{font-weight:700;padding:15px 20px;display:block}.validation-summary-container{margin-top:20px}`]\r\n})\r\nexport class ValidationSummaryComponent {\r\n  /** @property The validation summary element.*/\r\n  @ViewChild('validationSummary') validationSummaryElement: ElementRef;\r\n\r\n  constructor(\r\n    public bridgeService: BridgeService,\r\n    private languageService: LanguageService,\r\n    private changeDetectorRef: ChangeDetectorRef\r\n  ) { }\r\n\r\n  /** @description Shows the validation summary as an alert.*/\r\n  showSummaryAlert() {\r\n    if (this.bridgeService.configuration.settings.validationSummaryMode === ValidationSummaryModes.Alert) {\r\n      this.changeDetectorRef.detectChanges();\r\n\r\n      swal({\r\n        html: this.validationSummaryElement.nativeElement.innerHTML,\r\n        type: SwalTypes.Warning,\r\n        confirmButtonText: this.languageService.translations.buttons.Ok\r\n      });\r\n    }\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ntw-progress-indicator',\r\n  template: `<div class=\"progress-indicator-container\"\r\n     *ngIf=\"spinnerSourceUrl\">\r\n  <div class=\"progress-indicator\">\r\n    <img [src]=\"spinnerSourceUrl\"\r\n         class=\"progress-indicator-image\"\r\n         alt=\"progress\" />\r\n  </div>\r\n</div>\r\n`,\r\n  styles: [``]\r\n})\r\nexport class ProgressIndicatorComponent {\r\n  /** @property The spinner source url.*/\r\n  @Input('spinnerSourceUrl') spinnerSourceUrl: string;\r\n}\r\n","import {\r\n  Component, Input, Output, OnInit, EventEmitter, ViewChild, ElementRef,\r\n  ChangeDetectorRef, ViewChildren, QueryList, ViewEncapsulation, Optional\r\n} from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { TranslateService, TranslatePipe } from '@ngx-translate/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpRequestsService } from '../../services/http-requests.service';\r\nimport { LocalStorageService } from '../../services/local-storage.service';\r\nimport { UtilitiesService } from '../../services/utilities.service';\r\nimport { LanguageService } from '../../services/language.service';\r\nimport { BridgeService } from '../../services/bridge.service';\r\nimport { FieldTypes, SwalTypes, FormModes, PostModes } from '../../models/enums';\r\nimport { ValidationSummaryComponent } from '../form-part-templates/validation-summary/validation-summary.component';\r\nimport { InputFieldComponent } from '../field-templates/input-field/input-field.component';\r\nimport { SelectFieldComponent } from '../field-templates/select-field/select-field.component';\r\nimport { DatetimeFieldComponent } from '../field-templates/datetime-field/datetime-field.component';\r\nimport { DatetimeHijriFieldComponent } from '../field-templates/datetime-hijri-field/datetime-hijri-field.component';\r\nimport { CheckboxFieldComponent } from '../field-templates/checkbox-field/checkbox-field.component';\r\nimport { RadiobuttonFieldComponent } from '../field-templates/radiobutton-field/radiobutton-field.component';\r\nimport { MultiSelectFieldComponent } from '../field-templates/multi-select-field/multi-select-field.component';\r\nimport { ChipsFieldComponent } from '../field-templates/chips-field/chips-field.component';\r\nimport { EditorFieldComponent } from '../field-templates/editor-field/editor-field.component';\r\nimport { MaskFieldComponent } from '../field-templates/mask-field/mask-field.component';\r\nimport { TimeFieldComponent } from '../field-templates/time-field/time-field.component';\r\nimport { LocationFieldComponent } from '../field-templates/location-field/location-field.component';\r\nimport { FileUploadFieldComponent } from '../field-templates/file-upload-field/file-upload-field.component';\r\nimport { ImageCropperFieldComponent } from '../field-templates/image-cropper-field/image-cropper-field.component';\r\nimport { RecaptchaFieldComponent } from '../field-templates/recaptcha-field/recaptcha-field.component';\r\nimport { RatingFieldComponent } from '../field-templates/rating-field/rating-field.component';\r\nimport { FieldComponent } from '../field-templates/field/field.component';\r\nimport { Configuration } from '../../models/configuration';\r\nimport { Field } from '../../models/field';\r\nimport { InputError } from '../../models/input-error';\r\nimport swal from 'sweetalert2';\r\nimport { ResponseEventArgs } from '../../models/response-event-args';\r\n\r\n@Component({\r\n  selector: 'ntw-dynamic-form',\r\n  template: `<div #container\r\n     class=\"container\">\r\n  <form class=\"dynamic-form-form\"\r\n        #f=\"ngForm\"\r\n        (ngSubmit)=\"submitForm(f)\"\r\n        [hidden]=\"showProgressIndicator\"\r\n        autocomplete=\"on\">\r\n    <div class=\"dynamic-form\">\r\n      <div class=\"sections sections-top\"\r\n           *ngIf=\"configuration?.settings?.sectionLocation == 'Top' || configuration?.settings?.sectionLocation == 'Both'\">\r\n        <!-- section tabs -->\r\n        <ntw-tabs-section *ngIf=\"configuration?.settings?.sectionMode == 'Tabs'\"></ntw-tabs-section>\r\n\r\n        <!-- next previous -->\r\n        <ntw-next-previous-section *ngIf=\"configuration?.settings?.sectionMode == 'NextPrevious'\"></ntw-next-previous-section>\r\n      </div>\r\n\r\n      <div class=\"clearfix\"></div>\r\n\r\n      <!-- form -->\r\n      <div class=\"form-container row\">\r\n        <div [class]=\"field.cssClasses.wrapper\"\r\n             *ngFor=\"let field of configuration?.mergedFields\">\r\n\r\n          <!-- info -->\r\n          <ntw-info-field [field]=\"field\"\r\n                          *ngIf=\"field.fieldType=='info'\">\r\n          </ntw-info-field>\r\n\r\n          <!-- text or number or password -->\r\n          <ntw-input-field [field]=\"field\"\r\n                           *ngIf=\"(field.fieldType=='text' || field.fieldType=='number' || field.fieldType=='password')\">\r\n          </ntw-input-field>\r\n\r\n          <!-- dropdown list -->\r\n          <ntw-select-field [field]=\"field\"\r\n                            *ngIf=\"field.fieldType=='select'\">\r\n          </ntw-select-field>\r\n\r\n          <!-- datetime picker -->\r\n          <ntw-datetime-field [field]=\"field\"\r\n                              *ngIf=\"field.fieldType=='datetime'\">\r\n          </ntw-datetime-field>\r\n\r\n          <!-- hijri datetime picker -->\r\n          <ntw-datetime-hijri-field [field]=\"field\"\r\n                                    *ngIf=\"field.fieldType=='datetimehijri'\">\r\n          </ntw-datetime-hijri-field>\r\n\r\n          <!-- time picker -->\r\n          <ntw-time-field [field]=\"field\"\r\n                          *ngIf=\"field.fieldType=='time'\">\r\n          </ntw-time-field>\r\n\r\n          <!-- checkbox list -->\r\n          <ntw-checkbox-field [field]=\"field\"\r\n                              *ngIf=\"field.fieldType=='checkbox'\">\r\n          </ntw-checkbox-field>\r\n\r\n          <!-- radiobutton list -->\r\n          <ntw-radiobutton-field [field]=\"field\"\r\n                                 *ngIf=\"field.fieldType=='radiobutton'\">\r\n          </ntw-radiobutton-field>\r\n\r\n          <!-- multiSelect list -->\r\n          <ntw-multi-select-field [field]=\"field\"\r\n                                  *ngIf=\"field.fieldType=='multiselect'\">\r\n          </ntw-multi-select-field>\r\n\r\n          <!-- chips -->\r\n          <ntw-chips-field [field]=\"field\"\r\n                           *ngIf=\"field.fieldType=='chips'\">\r\n          </ntw-chips-field>\r\n\r\n          <!-- editor -->\r\n          <ntw-editor-field [field]=\"field\"\r\n                            *ngIf=\"field.fieldType=='editor'\">\r\n          </ntw-editor-field>\r\n\r\n          <!-- mask -->\r\n          <ntw-mask-field [field]=\"field\"\r\n                          *ngIf=\"field.fieldType=='mask'\">\r\n          </ntw-mask-field>\r\n\r\n          <!-- location -->\r\n          <ntw-location-field [field]=\"field\"\r\n                              *ngIf=\"field.fieldType=='location'\">\r\n          </ntw-location-field>\r\n\r\n          <!-- file upload -->\r\n          <ntw-file-upload-field [field]=\"field\"\r\n                                 *ngIf=\"field.fieldType=='fileupload'\">\r\n          </ntw-file-upload-field>\r\n\r\n          <!-- Rating -->\r\n          <ntw-rating-field [field]=\"field\"\r\n                            *ngIf=\"field.fieldType=='rating'\">\r\n          </ntw-rating-field>\r\n\r\n          <!-- recaptcha -->\r\n          <ntw-recaptcha-field [field]=\"field\"\r\n                               *ngIf=\"field.fieldType=='recaptcha'\">\r\n          </ntw-recaptcha-field>\r\n\r\n          <!-- image cropper -->\r\n          <ntw-image-cropper-field [field]=\"field\"\r\n                                   *ngIf=\"field.fieldType=='imagecropper'\">\r\n          </ntw-image-cropper-field>\r\n\r\n          <!-- masterdetail -->\r\n          <ntw-master-detail-field [field]=\"field\"\r\n                                   *ngIf=\"field.fieldType=='masterdetail'\">\r\n          </ntw-master-detail-field>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"clearfix\"></div>\r\n\r\n      <!-- validation summary -->\r\n      <ntw-validation-summary></ntw-validation-summary>\r\n\r\n      <!-- buttons -->\r\n      <div [class]=\"configuration?.buttons?.cssClass\"\r\n           data-html2canvas-ignore=\"true\">\r\n        <span class=\"main-buttons\"\r\n              *ngIf=\"configuration?.settings?.formMode != 'Display'\">\r\n          <button type=\"button\"\r\n                  [name]=\"configuration?.buttons?.main?.clear?.name\"\r\n                  [title]=\"configuration?.buttons?.main?.clear?.tooltip | translate\"\r\n                  [disabled]=\"configuration?.buttons?.main?.clear?.disabled\"\r\n                  [hidden]=\"isButtonHidden(configuration?.buttons?.main?.clear)\"\r\n                  [class]=\"configuration?.buttons?.main?.clear?.cssClass\"\r\n                  (click)=\"clearForm(f)\">\r\n            {{configuration?.buttons?.main?.clear?.label | translate}}\r\n          </button>\r\n          <button type=\"button\"\r\n                  [name]=\"configuration?.buttons?.main?.save?.name\"\r\n                  [title]=\"configuration?.buttons?.main?.save?.tooltip | translate\"\r\n                  [disabled]=\"configuration?.buttons?.main?.save?.disabled\"\r\n                  [hidden]=\"isButtonHidden(configuration?.buttons?.main?.save)\"\r\n                  [class]=\"configuration?.buttons?.main?.save?.cssClass\"\r\n                  (click)=\"saveForm(f)\">\r\n            {{configuration?.buttons?.main?.save?.label | translate}}\r\n          </button>\r\n          <button type=\"submit\"\r\n                  [name]=\"configuration?.buttons?.main?.submit?.name\"\r\n                  [title]=\"configuration?.buttons?.main?.submit?.tooltip | translate\"\r\n                  [disabled]=\"configuration?.buttons?.main?.submit?.disabled\"\r\n                  [hidden]=\"isButtonHidden(configuration?.buttons?.main?.submit)\"\r\n                  [class]=\"configuration?.buttons?.main?.submit?.cssClass\">\r\n            {{configuration?.buttons?.main?.submit?.label | translate}}\r\n          </button>\r\n        </span>\r\n\r\n        <span class=\"additional-buttons\">\r\n          <button *ngFor=\"let button of configuration?.buttons?.additionalButtons\"\r\n                  type=\"button\"\r\n                  [name]=\"button?.name\"\r\n                  [title]=\"button?.tooltip | translate\"\r\n                  [disabled]=\"button?.disabled\"\r\n                  [hidden]=\"isButtonHidden(button)\"\r\n                  [class]=\"button?.cssClass\"\r\n                  (click)=\"triggerDynamicEvent('click', $event, button);\">\r\n            {{button?.label | translate}}\r\n          </button>\r\n        </span>\r\n      </div>\r\n\r\n      <div class=\"sections sections-bottom\"\r\n           *ngIf=\"configuration?.settings?.sectionLocation == 'Bottom' || configuration?.settings?.sectionLocation == 'Both'\">\r\n        <!-- section tabs -->\r\n        <ntw-tabs-section *ngIf=\"configuration?.settings?.sectionMode == 'Tabs'\"></ntw-tabs-section>\r\n\r\n        <!-- next previous -->\r\n        <ntw-next-previous-section *ngIf=\"configuration?.settings?.sectionMode == 'NextPrevious'\"></ntw-next-previous-section>\r\n      </div>\r\n    </div>\r\n  </form>\r\n\r\n  <div class=\"clearfix\"></div>\r\n\r\n  <ntw-progress-indicator *ngIf=\"showProgressIndicator\"\r\n                          [spinnerSourceUrl]=\"configuration?.settings?.spinnerSourceUrl\"></ntw-progress-indicator>\r\n</div>\r\n`,\r\n  styles: [`.formButtons{margin:20px 0}body.ar .main-buttons button{margin-left:10px}body.en .main-buttons button{margin-right:10px}body.ar{direction:rtl!important;text-align:right!important}body.en{direction:ltr!important;text-align:left!important}.ui-dropdown,input.form-input,input.ui-inputtext.ui-widget.ui-state-default,p-dropdown{width:100%!important;height:35px}.input-container{margin-top:24px}label.form-label{font-weight:700}span.required-asterisk{color:red}p.error,p.validation-error{display:block;color:red}.result img{width:150px;height:150px}.form-display{display:block}w-clock *{box-sizing:content-box!important}`],\r\n  providers: [TranslatePipe, BridgeService, UtilitiesService],\r\n  // provide the bridge service here in order to have a different instance per form instance.\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class DynamicFormComponent implements OnInit {\r\n  /** @property The configuration source url.*/\r\n  @Input('configurationSourceUrl') configurationSourceUrl: string;\r\n\r\n  /** @property The parent component.*/\r\n  @Input('parentComponent') parentComponent: any;\r\n\r\n  /** @property The additional parameters.*/\r\n  @Input('additionalParameters') additionalParameters: any;\r\n\r\n  /** @property The onFormCleared event. Triggered when the form is cleared.*/\r\n  @Output() formCleared = new EventEmitter<any>();\r\n\r\n  /** @property The onFormDataBound event. Triggered when the form is data bound.*/\r\n  @Output() formDataBound = new EventEmitter<any>();\r\n\r\n  /** @property The onBeforeFormSaved event. Triggered before the form is saved.*/\r\n  @Output() beforeFormSaved = new EventEmitter<any>();\r\n\r\n  /** @property The onAfterFormSaved event. Triggered after the form is saved.*/\r\n  @Output() afterFormSaved = new EventEmitter<any>();\r\n\r\n  /** @property The onBeforeFormSubmitted event. Triggered before the form is submitted.*/\r\n  @Output() beforeFormSubmitted = new EventEmitter<any>();\r\n\r\n  /** @property The onAfterFormSubmitted event. Triggered after the form is submitted.*/\r\n  @Output() afterFormSubmitted = new EventEmitter<any>();\r\n\r\n  /** @property The root container element.*/\r\n  @ViewChild('container') containerElement: ElementRef;\r\n\r\n  /** @property The validation summary component.*/\r\n  @ViewChild(ValidationSummaryComponent) validationSummaryComponent: ValidationSummaryComponent;\r\n\r\n  /** @property The list of input field components.*/\r\n  @ViewChildren(InputFieldComponent) inputFieldComponents: QueryList<InputFieldComponent>;\r\n\r\n  /** @property The list of select field components.*/\r\n  @ViewChildren(SelectFieldComponent) selectFieldComponents: QueryList<SelectFieldComponent>;\r\n\r\n  /** @property The list of datetime field components.*/\r\n  @ViewChildren(DatetimeFieldComponent) datetimeFieldComponents: QueryList<DatetimeFieldComponent>;\r\n\r\n  /** @property The list of datetime hijri field components.*/\r\n  @ViewChildren(DatetimeHijriFieldComponent) datetimeHijriFieldComponents: QueryList<DatetimeHijriFieldComponent>;\r\n\r\n  /** @property The list of checkbox field components.*/\r\n  @ViewChildren(CheckboxFieldComponent) checkboxFieldComponents: QueryList<CheckboxFieldComponent>;\r\n\r\n  /** @property The list of radio button field components.*/\r\n  @ViewChildren(RadiobuttonFieldComponent) radiobuttonFieldComponents: QueryList<RadiobuttonFieldComponent>;\r\n\r\n  /** @property The list of multi select field components.*/\r\n  @ViewChildren(MultiSelectFieldComponent) multiSelectFieldComponents: QueryList<MultiSelectFieldComponent>;\r\n\r\n  /** @property The list of chips field components.*/\r\n  @ViewChildren(ChipsFieldComponent) chipsFieldComponents: QueryList<ChipsFieldComponent>;\r\n\r\n  /** @property The list of editor field components.*/\r\n  @ViewChildren(EditorFieldComponent) editorFieldComponents: QueryList<EditorFieldComponent>;\r\n\r\n  /** @property The list of mask field components.*/\r\n  @ViewChildren(MaskFieldComponent) maskFieldComponents: QueryList<MaskFieldComponent>;\r\n\r\n  /** @property The list of time field components.*/\r\n  @ViewChildren(TimeFieldComponent) timeFieldComponents: QueryList<TimeFieldComponent>;\r\n\r\n  /** @property The list of location field components.*/\r\n  @ViewChildren(LocationFieldComponent) locationFieldComponents: QueryList<LocationFieldComponent>;\r\n\r\n  /** @property The list of file upload field components.*/\r\n  @ViewChildren(FileUploadFieldComponent) fileUploadFieldComponents: QueryList<FileUploadFieldComponent>;\r\n\r\n  /** @property The list of recaptcha field components.*/\r\n  @ViewChildren(ImageCropperFieldComponent) imageCropperFieldComponents: QueryList<ImageCropperFieldComponent>;\r\n\r\n  /** @property The list of recaptcha field components.*/\r\n  @ViewChildren(RecaptchaFieldComponent) recaptchaFieldComponents: QueryList<RecaptchaFieldComponent>;\r\n\r\n  /** @property The list of recaptcha field components.*/\r\n  @ViewChildren(RatingFieldComponent) ratingFieldComponents: QueryList<RatingFieldComponent>;\r\n\r\n  /** @property The list of all field components.*/\r\n  public fieldComponents: Array<FieldComponent> = new Array<FieldComponent>();\r\n\r\n  /** @property The main configuration object.*/\r\n  public configuration: Configuration = new Configuration();\r\n\r\n  /** @property Whether to show the progress indicator.*/\r\n  public showProgressIndicator: boolean = true;\r\n\r\n  constructor(\r\n    public bridgeService: BridgeService,\r\n    private httpRequestsService: HttpRequestsService,\r\n    private localStorageService: LocalStorageService,\r\n    private utilitiesService: UtilitiesService,\r\n    private translateService: TranslateService,\r\n    private languageService: LanguageService,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n    private translatePipe: TranslatePipe,\r\n    @Optional() private route: ActivatedRoute\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.bridgeService.parentComponent = this.parentComponent;\r\n\r\n    if (typeof this.additionalParameters === 'string') {\r\n      this.additionalParameters = JSON.parse(this.additionalParameters);\r\n    }\r\n\r\n    this.bridgeService.additionalParameters = this.additionalParameters;\r\n\r\n    this.bindForm();\r\n  }\r\n\r\n  /** @description Clears the form.\r\n  * @param NgForm form The form.\r\n  */\r\n  public clearForm(form: NgForm) {\r\n    for (const fieldComponent of this.fieldComponents) {\r\n      fieldComponent.clearValue();\r\n    }\r\n\r\n    this.configuration.validationErrors = new Array<InputError>();\r\n\r\n    this.formCleared.emit();\r\n  }\r\n\r\n  /** @description Saves the form.\r\n  * @param NgForm form The form.\r\n  */\r\n  public saveForm(form: NgForm) {\r\n    // trigger recaptcha validation if exists.\r\n    for (const recaptchaFieldComponents of this.recaptchaFieldComponents.toArray()) {\r\n      recaptchaFieldComponents.validate(null, true);\r\n    }\r\n\r\n    if (this.isFormValid()) {\r\n      this.showProgressIndicator = true;\r\n\r\n      const values = this.getRequestBody();\r\n\r\n      this.beforeFormSaved.emit(values);\r\n\r\n      console.log(values);\r\n\r\n      const endpoint = this.utilitiesService.replaceTokens(\r\n        this.configuration.endpoints.save,\r\n        this.route,\r\n        this.bridgeService.additionalParameters\r\n      );\r\n\r\n      this.httpRequestsService.post(endpoint, values).subscribe(response => {\r\n        console.log(response);\r\n\r\n        this.afterFormSaved.emit(new ResponseEventArgs(true, response, values));\r\n\r\n        this.showProgressIndicator = false;\r\n\r\n        if (this.configuration.notifications.showResultMessage) {\r\n          swal({\r\n            title: this.translatePipe.transform(this.configuration.notifications.saveSuccessMessageTitle),\r\n            html: this.translatePipe.transform(this.configuration.notifications.saveSuccessMessageDetails),\r\n            type: SwalTypes.Success,\r\n            confirmButtonText: this.languageService.translations.buttons.Ok\r\n          });\r\n        }\r\n      }, exception => {\r\n        console.error('saveForm: ', exception);\r\n\r\n        this.afterFormSaved.emit(new ResponseEventArgs(false, exception, values));\r\n\r\n        this.showProgressIndicator = false;\r\n\r\n        if (this.configuration.notifications.showResultMessage) {\r\n          swal({\r\n            title: this.translatePipe.transform(this.configuration.notifications.saveErrorMessageTitle),\r\n            html: this.translatePipe.transform(this.configuration.notifications.saveErrorMessageDetails),\r\n            type: SwalTypes.Error,\r\n            confirmButtonText: this.languageService.translations.buttons.Ok\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  /** @description Submits the form.\r\n  * @param NgForm form The form.\r\n  */\r\n  public submitForm(form: NgForm) {\r\n    this.validateForm();\r\n\r\n    if (this.isFormValid()) {\r\n      this.showProgressIndicator = true;\r\n\r\n      const values = this.getRequestBody();\r\n\r\n      this.beforeFormSubmitted.emit(values);\r\n\r\n      console.log(values);\r\n\r\n      const endpoint = this.utilitiesService.replaceTokens(\r\n        this.configuration.endpoints.submit,\r\n        this.route,\r\n        this.bridgeService.additionalParameters\r\n      );\r\n\r\n      this.httpRequestsService.post(endpoint, values).subscribe(response => {\r\n        console.log(response);\r\n\r\n        this.afterFormSubmitted.emit(new ResponseEventArgs(true, response, values));\r\n\r\n        this.showProgressIndicator = false;\r\n\r\n        if (this.configuration.notifications.showResultMessage) {\r\n          swal({\r\n            title: this.translatePipe.transform(this.configuration.notifications.submitSuccessMessageTitle),\r\n            html: this.translatePipe.transform(this.configuration.notifications.submitSuccessMessageDetails),\r\n            type: SwalTypes.Success,\r\n            confirmButtonText: this.languageService.translations.buttons.Ok\r\n          });\r\n        }\r\n      }, exception => {\r\n        console.error('submitForm: ', exception);\r\n\r\n        this.afterFormSubmitted.emit(new ResponseEventArgs(false, exception, values));\r\n\r\n        this.showProgressIndicator = false;\r\n\r\n        if (this.configuration.notifications.showResultMessage) {\r\n          swal({\r\n            title: this.translatePipe.transform(this.configuration.notifications.submitErrorMessageTitle),\r\n            html: this.translatePipe.transform(this.configuration.notifications.submitErrorMessageDetails),\r\n            type: SwalTypes.Error,\r\n            confirmButtonText: this.languageService.translations.buttons.Ok\r\n          });\r\n        }\r\n      });\r\n    } else {\r\n      this.validationSummaryComponent.showSummaryAlert();\r\n    }\r\n  }\r\n\r\n  /** @description Validates the form.*/\r\n  public validateForm() {\r\n    for (const fieldComponent of this.fieldComponents) {\r\n      this.validateFormFieldComponent(fieldComponent);\r\n    }\r\n  }\r\n\r\n  /** @description Gets whether the form is valid.\r\n   * @return boolean Whether the form is valid.\r\n  */\r\n  public isFormValid(): boolean {\r\n    return !this.configuration.validationErrors || this.configuration.validationErrors.length === 0;\r\n  }\r\n\r\n  /** @description Gets the request body.\r\n   * @return any source The request body.\r\n  */\r\n  public getRequestBody(): any {\r\n    if (this.configuration.settings.postMode === PostModes.FormData) {\r\n      return this.getFormData();\r\n    } else {\r\n      return this.getFormValues();\r\n    }\r\n  }\r\n\r\n  /** @description Gets the form field values.\r\n   * @return any source The form values.\r\n  */\r\n  public getFormValues(): any {\r\n    const values = {};\r\n\r\n    for (const fieldComponent of this.fieldComponents) {\r\n      if (fieldComponent.field.data) {\r\n        values[fieldComponent.field.name] = fieldComponent.getValue();\r\n      }\r\n    }\r\n\r\n    return values;\r\n  }\r\n\r\n  /** @description Gets the form field values.\r\n   * @return any source The form data.\r\n  */\r\n  public getFormData(): FormData {\r\n    let data = new FormData();\r\n\r\n    for (const fieldComponent of this.fieldComponents) {\r\n      data = fieldComponent.appendFormData(data);\r\n    }\r\n\r\n    return data;\r\n  }\r\n\r\n  /** @description Gets a field component reference by its name.\r\n   * @param string name The name.\r\n   * @return FieldComponent The field component reference.\r\n  */\r\n  public getComponent(name: string): FieldComponent {\r\n    return this.fieldComponents.find(fc => fc.field.name === name);\r\n  }\r\n\r\n  /** @description Checks whether the button should be hidden.\r\n   * @param any button The button.\r\n   * @return FieldComponent Whether the button should be hidden.\r\n  */\r\n  public isButtonHidden(button: any): boolean {\r\n    return (button && button.hidden) || (this.configuration.currentSection &&\r\n      this.configuration.currentSection.hideButtons &&\r\n      this.configuration.currentSection.hideButtons.indexOf(button.name) > -1\r\n    );\r\n  }\r\n\r\n  /** @description Sets the form data.\r\n   * @param any formData The form data.\r\n  */\r\n  public setFormData(formData) {\r\n    for (const responseField of formData.fields) {\r\n      if (responseField.value) {\r\n        const fieldComponent = this.getComponent(responseField.name);\r\n\r\n        if (fieldComponent) {\r\n          fieldComponent.updateValue(responseField);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /** @description Binds the dynamic form.*/\r\n  private async bindForm() {\r\n    await this.loadConfiguration();\r\n\r\n    // workaround for datetime fields.\r\n    const dateFields = this.configuration.mergedFields.filter(f => f.fieldType === FieldTypes.DateTime);\r\n\r\n    for (const field of dateFields) {\r\n      this.handleDefaultDateTimeSettings(field);\r\n    }\r\n\r\n    this.changeDetectorRef.detectChanges();\r\n\r\n    this.fieldComponents = this.fieldComponents.concat(\r\n      this.inputFieldComponents.toArray(),\r\n      this.selectFieldComponents.toArray(),\r\n      this.datetimeFieldComponents.toArray(),\r\n      this.datetimeHijriFieldComponents.toArray(),\r\n      this.checkboxFieldComponents.toArray(),\r\n      this.radiobuttonFieldComponents.toArray(),\r\n      this.multiSelectFieldComponents.toArray(),\r\n      this.chipsFieldComponents.toArray(),\r\n      this.editorFieldComponents.toArray(),\r\n      this.maskFieldComponents.toArray(),\r\n      this.timeFieldComponents.toArray(),\r\n      this.locationFieldComponents.toArray(),\r\n      this.fileUploadFieldComponents.toArray(),\r\n      this.imageCropperFieldComponents.toArray(),\r\n      this.recaptchaFieldComponents.toArray(),\r\n      this.ratingFieldComponents.toArray()\r\n    );\r\n\r\n    this.handleDefaultSettings();\r\n\r\n    this.bindFormData();\r\n\r\n    for (const fieldComponent of this.locationFieldComponents.toArray()) {\r\n      fieldComponent.activateSearchInput();\r\n    }\r\n\r\n    this.translateService.onLangChange.subscribe(response => {\r\n      if (this.configuration.settings.formMode === FormModes.Display) {\r\n        this.bindFormData();\r\n      }\r\n\r\n      for (const fieldComponent of this.recaptchaFieldComponents.toArray()) {\r\n        fieldComponent.setCaptchaLanguge();\r\n      }\r\n    });\r\n  }\r\n\r\n  /** @description Loads the configuration as a get request or from local storage.*/\r\n  private async loadConfiguration() {\r\n    this.configuration = await this.utilitiesService.loadFile(this.configurationSourceUrl);\r\n\r\n    // if it is in local, read the already merged fields. otherwise, merge it and save in local storage.\r\n    if (!this.configuration.isLocal) {\r\n      // merge the form json schema from the different source pieces.\r\n      if (this.configuration.settings.sourceFormSchemas) {\r\n        for (let i = this.configuration.settings.sourceFormSchemas.length - 1; i >= 0; i--) {\r\n\r\n          const sourceFormSchemaUrl = this.configuration.settings.sourceFormSchemas[i];\r\n\r\n          const sourceFormSchema = await this.utilitiesService.loadFile(sourceFormSchemaUrl);\r\n\r\n          this.configuration = this.utilitiesService.mergeRecursive(sourceFormSchema, this.configuration);\r\n        }\r\n      }\r\n\r\n      const allFields = await this.utilitiesService.loadFile(this.configuration.settings.allFieldsSource);\r\n\r\n      if (!allFields.isLocal) {\r\n        this.localStorageService.save(this.configuration.settings.allFieldsSource, allFields);\r\n      }\r\n\r\n      this.configuration.mergedFields = new Array<Field>();\r\n\r\n      // merge the field properties with the all fields list.\r\n      for (const fieldName in this.configuration.fields) {\r\n        if (this.configuration.fields.hasOwnProperty(fieldName)) {\r\n          const sourceField = allFields.fields.find(f => f.name === fieldName);\r\n\r\n          if (sourceField) {\r\n            const mergedField = this.utilitiesService.mergeRecursive(sourceField, this.configuration.fields[fieldName]);\r\n\r\n            this.configuration.mergedFields.push(mergedField);\r\n          } else {\r\n            console.warn(`The field ${fieldName} doesn't exist in the all-fields-list.`);\r\n          }\r\n        }\r\n      }\r\n\r\n      this.localStorageService.save(this.configurationSourceUrl, this.configuration);\r\n    }\r\n\r\n    if (this.configuration.sections && this.configuration.sections.length > 0) {\r\n      this.configuration.currentSection = this.configuration.sections[0];\r\n    }\r\n\r\n    this.bridgeService.configuration = this.configuration;\r\n  }\r\n\r\n  /** @description Handles all fields' default settings.*/\r\n  private handleDefaultSettings() {\r\n    for (const fieldComponent of this.fieldComponents) {\r\n      fieldComponent.handleDefaultSettings();\r\n    }\r\n  }\r\n\r\n  /** @description Handles a date field's default settings.\r\n   * It is buggy if done from the component after it is loaded.\r\n   * @param Field field The field component.\r\n  */\r\n  private handleDefaultDateTimeSettings(field: Field) {\r\n    // in case of datetime field, parse the values from string to date and execute any functions.\r\n    if (field.minDate) {\r\n      field.minDateValue = this.utilitiesService.evaluateFunctionOrDefault(field.minDate, new Date(field.minDate));\r\n    }\r\n\r\n    if (field.maxDate) {\r\n      field.maxDateValue = this.utilitiesService.evaluateFunctionOrDefault(field.maxDate, new Date(field.maxDate));\r\n    }\r\n\r\n    if (field.data.dateValue) {\r\n      field.data.value = this.utilitiesService.evaluateFunctionOrDefault(field.data.dateValue, new Date(field.data.dateValue));\r\n    }\r\n\r\n    if (field.defaultDate) {\r\n      field.defaultDateValue = this.utilitiesService.evaluateFunctionOrDefault(field.defaultDate, new Date(field.defaultDate));\r\n    }\r\n\r\n    if (field.minDateValue && field.maxDateValue) {\r\n      field.yearRange = field.minDateValue.getFullYear() + ':' + field.maxDateValue.getFullYear();\r\n    }\r\n  }\r\n\r\n  /** @description Binds the form data.*/\r\n  private bindFormData() {\r\n    if (this.configuration.endpoints.get) {\r\n      const endpoint = this.utilitiesService.replaceTokens(\r\n        this.configuration.endpoints.get,\r\n        this.route,\r\n        this.bridgeService.additionalParameters\r\n      );\r\n\r\n      this.httpRequestsService.get(endpoint).subscribe(response => {\r\n        this.setFormData(response);\r\n\r\n        this.formDataBound.emit(response);\r\n\r\n        this.showProgressIndicator = false;\r\n      }, exception => {\r\n        console.error('bindFormData: ', exception);\r\n\r\n        this.showProgressIndicator = false;\r\n\r\n        if (this.configuration.notifications.showResultMessage) {\r\n          swal({\r\n            title: this.translatePipe.transform(this.configuration.notifications.getErrorMessageTitle),\r\n            html: this.translatePipe.transform(this.configuration.notifications.getErrorMessageDetails),\r\n            type: SwalTypes.Error,\r\n            confirmButtonText: this.languageService.translations.buttons.Ok\r\n          });\r\n        }\r\n      });\r\n    } else {\r\n      this.formDataBound.emit(null);\r\n\r\n      this.showProgressIndicator = false;\r\n    }\r\n  }\r\n\r\n  /** @description Validates a form field component.\r\n   * @param FieldComponent fieldComponent The field component.\r\n   * @return Array<InputError> The list of validation errors.\r\n  */\r\n  private validateFormFieldComponent(fieldComponent: FieldComponent): Array<InputError> {\r\n    let fieldValidationErrors = new Array<InputError>();\r\n\r\n    if (!fieldComponent.field.hidden) {\r\n      fieldValidationErrors = fieldComponent.validate(null, true);\r\n    }\r\n\r\n    return fieldValidationErrors;\r\n  }\r\n\r\n  /** @description Triggers a dynamic event in case it is defined.\r\n   * @param string eventType The type of the event.\r\n   * @param any eventArguments The event arguments of the action causing the trigger.\r\n   * @param any source The source of the action causing the trigger.\r\n  */\r\n  public triggerDynamicEvent(eventType: string, eventArguments: any, source: any) {\r\n    if (source.eventTriggers) {\r\n      const event = source.eventTriggers[eventType];\r\n\r\n      const parentEventHandlerFunction = this.parentComponent[event];\r\n\r\n      if (parentEventHandlerFunction) {\r\n        parentEventHandlerFunction(this.parentComponent, source);\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RecaptchaCommonModule } from 'ng-recaptcha/recaptcha/recaptcha-common.module';\r\nimport { RecaptchaModule } from 'ng-recaptcha/recaptcha/recaptcha.module';\r\nimport { AgmCoreModule } from '@agm/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\nimport { InputTextModule } from 'primeng/inputtext';\r\nimport { CalendarModule } from 'primeng/calendar';\r\nimport { CheckboxModule } from 'primeng/checkbox';\r\nimport { RadioButtonModule } from 'primeng/radiobutton';\r\nimport { DropdownModule } from 'primeng/dropdown';\r\nimport { MultiSelectModule } from 'primeng/multiselect';\r\nimport { FileUploadModule } from 'primeng/fileupload';\r\nimport { ChipsModule } from 'primeng/chips';\r\nimport { EditorModule } from 'primeng/editor';\r\nimport { InputMaskModule } from 'primeng/inputmask';\r\nimport { ImageCropperModule } from 'ng2-img-cropper';\r\nimport { RatingModule } from 'primeng/rating';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport {\r\n  MatDialogModule, MatInputModule, MatToolbarModule, MatSnackBarModule,\r\n  MatButtonModule, MatButtonToggleModule, MatFormFieldModule, MatIconModule,\r\n  MatSelectModule\r\n} from '@angular/material';\r\n\r\nimport { WMatTimePickerComponent } from './components/controls/time-control/w-mat-timepicker/w-mat-timepicker.component';\r\nimport { WTimeDialogComponent } from './components/controls/time-control/w-time-dialog/w-time-dialog.component';\r\nimport { WClockComponent } from './components/controls/time-control/w-clock/w-clock.component';\r\nimport { WTimeComponent } from './components/controls/time-control/w-time/w-time.component';\r\n\r\nimport { FieldComponent } from './components/field-templates/field/field.component';\r\nimport { BoundableFieldComponent } from './components/field-templates/boundable-field/boundable-field.component';\r\nimport { InputFieldComponent } from './components/field-templates/input-field/input-field.component';\r\nimport { DatetimeFieldComponent } from './components/field-templates/datetime-field/datetime-field.component';\r\nimport { SelectFieldComponent } from './components/field-templates/select-field/select-field.component';\r\nimport { DatetimeHijriFieldComponent } from './components/field-templates/datetime-hijri-field/datetime-hijri-field.component';\r\nimport { CheckboxFieldComponent } from './components/field-templates/checkbox-field/checkbox-field.component';\r\nimport { RadiobuttonFieldComponent } from './components/field-templates/radiobutton-field/radiobutton-field.component';\r\nimport { MultiSelectFieldComponent } from './components/field-templates/multi-select-field/multi-select-field.component';\r\nimport { ChipsFieldComponent } from './components/field-templates/chips-field/chips-field.component';\r\nimport { EditorFieldComponent } from './components/field-templates/editor-field/editor-field.component';\r\nimport { MaskFieldComponent } from './components/field-templates/mask-field/mask-field.component';\r\nimport { TimeFieldComponent } from './components/field-templates/time-field/time-field.component';\r\nimport { LocationFieldComponent } from './components/field-templates/location-field/location-field.component';\r\nimport { FileUploadFieldComponent } from './components/field-templates/file-upload-field/file-upload-field.component';\r\nimport { InfoFieldComponent } from './components/field-templates/info-field/info-field.component';\r\nimport { MasterDetailFieldComponent } from './components/field-templates/master-detail-field/master-detail-field.component';\r\nimport { ImageCropperFieldComponent } from './components/field-templates/image-cropper-field/image-cropper-field.component';\r\nimport { RatingFieldComponent } from './components/field-templates/rating-field/rating-field.component';\r\nimport { RecaptchaFieldComponent } from './components/field-templates/recaptcha-field/recaptcha-field.component';\r\n\r\nimport { TabsSectionComponent } from './components/form-part-templates/tabs-section/tabs-section.component';\r\nimport { NextPreviousSectionComponent } from './components/form-part-templates/next-previous-section/next-previous-section.component';\r\nimport { ValidationSummaryComponent } from './components/form-part-templates/validation-summary/validation-summary.component';\r\nimport { ProgressIndicatorComponent } from './components/form-part-templates/progress-indicator/progress-indicator.component';\r\nimport { DefaultMasterDetailFormComponent } from './components/form-part-templates/default-master-detail-form/default-master-detail-form.component';\r\n\r\nimport { DynamicFormComponent } from './components/dynamic-form/dynamic-form.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    WMatTimePickerComponent,\r\n    WTimeDialogComponent,\r\n    WClockComponent,\r\n    WTimeComponent,\r\n    FieldComponent,\r\n    BoundableFieldComponent,\r\n    InputFieldComponent,\r\n    SelectFieldComponent,\r\n    DatetimeFieldComponent,\r\n    DatetimeHijriFieldComponent,\r\n    CheckboxFieldComponent,\r\n    RadiobuttonFieldComponent,\r\n    MultiSelectFieldComponent,\r\n    ChipsFieldComponent,\r\n    EditorFieldComponent,\r\n    MaskFieldComponent,\r\n    TimeFieldComponent,\r\n    LocationFieldComponent,\r\n    FileUploadFieldComponent,\r\n    RecaptchaFieldComponent,\r\n    InfoFieldComponent,\r\n    MasterDetailFieldComponent,\r\n    ImageCropperFieldComponent,\r\n    RatingFieldComponent,\r\n    TabsSectionComponent,\r\n    NextPreviousSectionComponent,\r\n    ValidationSummaryComponent,\r\n    ProgressIndicatorComponent,\r\n    DefaultMasterDetailFormComponent,\r\n    DynamicFormComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    BrowserModule,\r\n    FormsModule,\r\n    BrowserAnimationsModule,\r\n    FlexLayoutModule,\r\n    InputTextModule,\r\n    CalendarModule,\r\n    CheckboxModule,\r\n    RadioButtonModule,\r\n    FileUploadModule,\r\n    EditorModule,\r\n    InputMaskModule,\r\n    ChipsModule,\r\n    DropdownModule,\r\n    MultiSelectModule,\r\n    MatDialogModule,\r\n    MatToolbarModule,\r\n    MatInputModule,\r\n    MatSnackBarModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatFormFieldModule,\r\n    MatIconModule,\r\n    MatSelectModule,\r\n    ImageCropperModule,\r\n    RatingModule,\r\n    RecaptchaCommonModule,\r\n    RecaptchaModule.forRoot(),\r\n    NgbModule.forRoot(),\r\n    TranslateModule.forRoot({\r\n      loader: {\r\n        provide: TranslateLoader,\r\n        useFactory: HttpLoaderFactory,\r\n        deps: [HttpClient]\r\n      }\r\n    }),\r\n    AgmCoreModule.forRoot({\r\n      apiKey: 'AIzaSyDkk4mAY1r5Q-abux5POCscTR0LojWMwUo',\r\n      libraries: ['places'],\r\n      region: 'LB',\r\n      language: 'en'\r\n    })\r\n  ],\r\n  entryComponents: [\r\n    DefaultMasterDetailFormComponent,\r\n    WMatTimePickerComponent,\r\n    WTimeDialogComponent\r\n  ],\r\n  exports: [\r\n    WMatTimePickerComponent,\r\n    WTimeDialogComponent,\r\n    WClockComponent,\r\n    WTimeComponent,\r\n    FieldComponent,\r\n    BoundableFieldComponent,\r\n    InputFieldComponent,\r\n    SelectFieldComponent,\r\n    DatetimeFieldComponent,\r\n    DatetimeHijriFieldComponent,\r\n    CheckboxFieldComponent,\r\n    RadiobuttonFieldComponent,\r\n    MultiSelectFieldComponent,\r\n    ChipsFieldComponent,\r\n    EditorFieldComponent,\r\n    MaskFieldComponent,\r\n    TimeFieldComponent,\r\n    LocationFieldComponent,\r\n    FileUploadFieldComponent,\r\n    RecaptchaFieldComponent,\r\n    InfoFieldComponent,\r\n    MasterDetailFieldComponent,\r\n    ImageCropperFieldComponent,\r\n    RatingFieldComponent,\r\n    TabsSectionComponent,\r\n    NextPreviousSectionComponent,\r\n    ValidationSummaryComponent,\r\n    ProgressIndicatorComponent,\r\n    DefaultMasterDetailFormComponent,\r\n    DynamicFormComponent\r\n  ]\r\n})\r\nexport class NetwaysLibModule { }\r\n\r\nexport function HttpLoaderFactory(http: HttpClient) {\r\n  return new TranslateHttpLoader(http);\r\n}\r\n"],"names":["Injectable","tslib_1.__extends","NgbDatepickerI18n","XLSX.utils","XLSX.writeFile","FileSaver.saveAs","HttpHeaders","HttpClient","TranslateService","EventEmitter","Component","Input","Output","Inject","MAT_DIALOG_DATA","MatDialogRef","TranslatePipe","MatDialog","tslib_1.__values","ViewChild","NgModel","ActivatedRoute","Optional","DatePipe","NgbCalendar","NgbCalendarIslamicUmalqura","FileUpload","CropperSettings","ImageCropperComponent","MapsAPILoader","NgZone","InputMask","ChangeDetectorRef","ViewEncapsulation","ViewChildren","NgModule","CommonModule","BrowserModule","FormsModule","BrowserAnimationsModule","FlexLayoutModule","InputTextModule","CalendarModule","CheckboxModule","RadioButtonModule","FileUploadModule","EditorModule","InputMaskModule","ChipsModule","DropdownModule","MultiSelectModule","MatDialogModule","MatToolbarModule","MatInputModule","MatSnackBarModule","MatButtonModule","MatButtonToggleModule","MatFormFieldModule","MatIconModule","MatSelectModule","ImageCropperModule","RatingModule","RecaptchaCommonModule","RecaptchaModule","NgbModule","TranslateModule","TranslateLoader","AgmCoreModule","TranslateHttpLoader"],"mappings":";;;;;;;;;;;;AAAA;QAeE;SAAiB;;oBAXlBA,aAAU,SAAC,EAAE,UAAU,EAAE,MAAM,EAAE;;;;;4BAJlC;;;ICAA;;;;;;;;;;;;;;IAcA;IAEA,IAAI,aAAa,GAAG,UAAS,CAAC,EAAE,CAAC;QAC7B,aAAa,GAAG,MAAM,CAAC,cAAc;aAChC,EAAE,SAAS,EAAE,EAAE,EAAE,YAAY,KAAK,IAAI,UAAU,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC;YAC5E,UAAU,CAAC,EAAE,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI,CAAC;gBAAE,IAAI,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;oBAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QAC/E,OAAO,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC/B,CAAC,CAAC;AAEF,uBAA0B,CAAC,EAAE,CAAC;QAC1B,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACpB,gBAAgB,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,EAAE;QACvC,CAAC,CAAC,SAAS,GAAG,CAAC,KAAK,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,SAAS,GAAG,CAAC,CAAC,SAAS,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC;IACzF,CAAC;AAED,uBAoC0B,OAAO,EAAE,UAAU,EAAE,CAAC,EAAE,SAAS;QACvD,OAAO,KAAK,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC,EAAE,UAAU,OAAO,EAAE,MAAM;YACrD,mBAAmB,KAAK,IAAI,IAAI;gBAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;aAAE;YAAC,OAAO,CAAC,EAAE;gBAAE,MAAM,CAAC,CAAC,CAAC,CAAC;aAAE,EAAE;YAC3F,kBAAkB,KAAK,IAAI,IAAI;gBAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;aAAE;YAAC,OAAO,CAAC,EAAE;gBAAE,MAAM,CAAC,CAAC,CAAC,CAAC;aAAE,EAAE;YAC9F,cAAc,MAAM,IAAI,MAAM,CAAC,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC,UAAU,OAAO,IAAI,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC,EAAE;YAC/I,IAAI,CAAC,CAAC,SAAS,GAAG,SAAS,CAAC,KAAK,CAAC,OAAO,EAAE,UAAU,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC;SACzE,CAAC,CAAC;IACP,CAAC;AAED,yBAA4B,OAAO,EAAE,IAAI;QACrC,IAAI,CAAC,GAAG,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,cAAa,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;gBAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QACjH,OAAO,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,OAAO,MAAM,KAAK,UAAU,KAAK,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,cAAa,OAAO,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QACzJ,cAAc,CAAC,IAAI,OAAO,UAAU,CAAC,IAAI,OAAO,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE;QAClE,cAAc,EAAE;YACZ,IAAI,CAAC;gBAAE,MAAM,IAAI,SAAS,CAAC,iCAAiC,CAAC,CAAC;YAC9D,OAAO,CAAC;gBAAE,IAAI;oBACV,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI;wBAAE,OAAO,CAAC,CAAC;oBAC7J,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC;wBAAE,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC;oBACxC,QAAQ,EAAE,CAAC,CAAC,CAAC;wBACT,KAAK,CAAC,CAAC;wBAAC,KAAK,CAAC;4BAAE,CAAC,GAAG,EAAE,CAAC;4BAAC,MAAM;wBAC9B,KAAK,CAAC;4BAAE,CAAC,CAAC,KAAK,EAAE,CAAC;4BAAC,OAAO,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;wBACxD,KAAK,CAAC;4BAAE,CAAC,CAAC,KAAK,EAAE,CAAC;4BAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;4BAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;4BAAC,SAAS;wBACjD,KAAK,CAAC;4BAAE,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;4BAAC,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;4BAAC,SAAS;wBACjD;4BACI,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE;gCAAE,CAAC,GAAG,CAAC,CAAC;gCAAC,SAAS;6BAAE;4BAC5G,IAAI,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;gCAAE,CAAC,CAAC,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;gCAAC,MAAM;6BAAE;4BACtF,IAAI,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE;gCAAE,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gCAAC,CAAC,GAAG,EAAE,CAAC;gCAAC,MAAM;6BAAE;4BACrE,IAAI,CAAC,IAAI,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE;gCAAE,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gCAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;gCAAC,MAAM;6BAAE;4BACnE,IAAI,CAAC,CAAC,CAAC,CAAC;gCAAE,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;4BACtB,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;4BAAC,SAAS;qBAC9B;oBACD,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;iBAC9B;gBAAC,OAAO,CAAC,EAAE;oBAAE,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;oBAAC,CAAC,GAAG,CAAC,CAAC;iBAAE;wBAAS;oBAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;iBAAE;YAC1D,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;gBAAE,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC;YAAC,OAAO,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;SACpF;IACL,CAAC;AAED,sBAIyB,CAAC;QACtB,IAAI,CAAC,GAAG,OAAO,MAAM,KAAK,UAAU,IAAI,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAClE,IAAI,CAAC;YAAE,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACxB,OAAO;YACH,IAAI,EAAE;gBACF,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM;oBAAE,CAAC,GAAG,KAAK,CAAC,CAAC;gBACnC,OAAO,EAAE,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC;aAC3C;SACJ,CAAC;IACN,CAAC;;;;;;;IChHD,IAAM,WAAW,GAAG;QAClB,QAAQ,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;QACpD,MAAM,EAAE,CAAC,MAAM,EAAE,KAAK,EAAE,YAAY,EAAE,YAAY,EAAE,cAAc,EAAE,cAAc,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM;YACjH,WAAW,EAAE,UAAU,CAAC;KAC3B,CAAC;;QAG+BC,+BAAiB;;;;;;;;;QAKzC,yCAAmB;;;;;sBAAC,OAAe;gBACxC,OAAO,WAAW,CAAC,QAAQ,CAAC,OAAO,GAAG,CAAC,CAAC,CAAC;;;;;;;QAOpC,uCAAiB;;;;;sBAAC,KAAa;gBACpC,OAAO,WAAW,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;;;;;;;QAOhC,sCAAgB;;;;;sBAAC,KAAa;gBACnC,OAAO,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;;;;;;;QAOhC,qCAAe;;;;;sBAAC,IAAmB;gBACxC,OAAU,IAAI,CAAC,GAAG,SAAI,IAAI,CAAC,KAAK,SAAI,IAAI,CAAC,IAAM,CAAC;;;oBA/BnDD,aAAU,SAAC,EAAE,UAAU,EAAE,MAAM,EAAE;;;0BATlC;MAUiCE,6BAAiB;;;;;;ACVlD;IAIA,IAAM,cAAc,GAAG,OAAO,CAAC;;IAC/B,IAAM,OAAO,GAAG,iBAAiB,CAAC;;IAClC,IAAM,YAAY,GAAG,MAAM,CAAC;;QAM1B;SAAiB;;;;;;;;;QAQV,qCAAa;;;;;;;;sBAAC,IAAW,EAAE,QAAgB,EAAE,GAAmB,EAAE,UAA2B;gBAAhD,oBAAA;oBAAA,UAAmB;;gBAAE,2BAAA;oBAAA,kBAA2B;;;gBAElG,IAAM,SAAS,GAAmBC,UAAU,CAAC,aAAa,CAAC,IAAI,EAAE,EAAE,UAAU,EAAE,UAAU,EAAE,CAAC,CAAC;;gBAE7F,IAAM,QAAQ,GAAkBA,UAAU,CAAC,QAAQ,EAAE,CAAC;gBAEtD,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE;oBACtB,QAAQ,CAAC,QAAQ,GAAG,EAAE,CAAC;iBACxB;gBAED,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,EAAE;oBAC5B,QAAQ,CAAC,QAAQ,CAAC,KAAK,GAAG,EAAE,CAAC;iBAC9B;gBAED,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE;oBAC/B,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;iBACjC;gBAED,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC;;gBAGrCA,UAAU,CAAC,iBAAiB,CAAC,QAAQ,EAAE,SAAS,EAAE,MAAM,CAAC,CAAC;;gBAG1DC,cAAc,CAAC,QAAQ,EAAE,QAAQ,GAAG,GAAG,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,GAAG,cAAc,CAAC,CAAC;;;;;;;;;;QAS5E,mCAAW;;;;;;;;sBAAC,IAAY,EAAE,QAAgB,EAAE,IAAgB,EAAE,OAA+B;;gBAAjD,qBAAA;oBAAA,WAAgB;;gBAAE,wBAAA;oBAAA,WAA0B,CAAC,EAAE,CAAC,CAAC;;gBAClG,IAAI,IAAI,EAAE;oBACR,WAAW,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,UAAA,MAAM;;wBAC3B,IAAM,OAAO,GAAG,MAAM,CAAC,SAAS,EAAE,CAAC;;wBAEnC,IAAM,aAAa,GAAG;4BACpB,QAAQ,EAAE,IAAI;4BACd,WAAW,EAAE,OAAO;4BACpB,OAAO,EAAE;gCACP;oCACE,KAAK,EAAE,OAAO;iCACf;6BACF;yBACF,CAAC;wBAEF,OAAO,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,OAAO,CAAC,UAAC,IAAI;4BAC5C,KAAI,CAAC,cAAc,CAAC,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,YAAY,CAAC,CAAC;yBAC5D,CAAC,CAAC;qBACJ,CAAC,CAAC;iBACJ;;;;;;;;;;QASI,sCAAc;;;;;;;;sBAAC,MAAW,EAAE,QAAgB,EAAE,QAAgB,EAAE,aAAqB;;gBAC1F,IAAM,IAAI,GAAS,IAAI,IAAI,CAAC,CAAC,MAAM,CAAC,EAAE;oBACpC,IAAI,EAAE,QAAQ;iBACf,CAAC,CAAC;gBAEHC,gBAAgB,CAAC,IAAI,EAAE,QAAQ,GAAG,GAAG,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,GAAG,aAAa,CAAC,CAAC;;;oBA5EjFL,aAAU,SAAC,EAAE,UAAU,EAAE,MAAM,EAAE;;;;;4BAVlC;;;;;;;ACAA;QAME,6BAAsB,UAAsB;YAAtB,eAAU,GAAV,UAAU,CAAY;SAAK;;;;;;QAM1C,iCAAG;;;;;sBAAC,WAAmB;;gBAC5B,IAAM,WAAW,GAAG,IAAIM,cAAW,EAAE,CAAC;gBAEtC,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAM,WAAW,EAAE,EAAE,OAAO,EAAE,WAAW,EAAE,CAAC,CAAC;;;;;;;;QAQlE,kCAAI;;;;;;sBAAC,WAAmB,EAAE,OAAY;;gBAC3C,IAAM,WAAW,GAAG,IAAIA,cAAW,EAAE,CAAC;gBAEtC,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAM,WAAW,EAAE,OAAO,EAAE,EAAE,OAAO,EAAE,WAAW,EAAE,CAAC,CAAC;;;;;;;;QAQ5E,iCAAG;;;;;;sBAAC,WAAmB,EAAE,OAAY;;gBAC1C,IAAM,WAAW,GAAG,IAAIA,cAAW,EAAE,CAAC;gBAEtC,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAM,WAAW,EAAE,OAAO,EAAE,EAAE,OAAO,EAAE,WAAW,EAAE,CAAC,CAAC;;;oBAjCnFN,aAAU,SAAC,EAAE,UAAU,EAAE,MAAM,EAAE;;;;;wBAHzBO,aAAU;;;;kCADnB;;;;;;;ACAA;QAIE;SAAiB;;;;;;QAMV,0CAAY;;;;;sBAAC,GAAW;gBAC7B,OAAO,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC;;;;;;;;QAOpC,kCAAI;;;;;;sBAAC,GAAW,EAAE,IAAS;gBAChC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;gBAE5B,YAAY,CAAC,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;;;;;;;QAO3B,kCAAI;;;;;sBAAC,GAAW;;gBACrB,IAAM,IAAI,GAAG,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;gBAEvC,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;;;;;;;;;QASnB,2CAAa;;;;;;;sBAAC,GAAW,EAAE,YAAiB;;gBACjD,IAAI,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBAE3B,IAAI,CAAC,KAAK,EAAE;oBACV,KAAK,GAAG,YAAY,CAAC;iBACtB;gBAED,OAAO,KAAK,CAAC;;;oBA7ChBP,aAAU,SAAC,EAAE,UAAU,EAAE,MAAM,EAAE;;;;;kCAFlC;;;;;;;ACAA;QAaE,yBACS,WACA;YAFT,iBASC;YARQ,cAAS,GAAT,SAAS;YACT,iBAAY,GAAZ,YAAY;;;;iCAPE,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,UAAU,EAAE,IAAI,CAAC;YAStE,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,SAAS,CAAC,UAAC,KAAsB;gBAC3D,KAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;gBAE7B,KAAI,CAAC,YAAY,GAAG,KAAK,CAAC,YAAY,CAAC;aACxC,CAAC,CAAC;SACJ;;;;;;QAKM,qCAAW;;;;;sBAAC,QAAgB;gBACjC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;gBAE7B,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC;gBAE9B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;;;;;;QAIxC,qCAAW;;;;;gBAChB,OAAO,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;;;oBAhC5DA,aAAU,SAAC,EAAE,UAAU,EAAE,MAAM,EAAE;;;;;wBAHzBQ,qBAAgB;wBAChB,mBAAmB;;;;8BAH5B;;;;;;;;ICQA,IAAM,aAAa,GAAW,WAAW,CAAC;;IAG1C,IAAM,UAAU,GAAG,KAAK,CAAC;;IAGzB,IAAM,gBAAgB,GAAG,oBAAoB,CAAC;;QAI5C,0BACU,eACA,qBACA,qBACA;YAHA,kBAAa,GAAb,aAAa;YACb,wBAAmB,GAAnB,mBAAmB;YACnB,wBAAmB,GAAnB,mBAAmB;YACnB,oBAAe,GAAf,eAAe;SACpB;;;;;;;;QAQE,oDAAyB;;;;;;;sBAAC,cAAsB,EAAE,YAAiB;gBACxE,IAAI,cAAc,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE;oBAC9C,cAAc,GAAG,cAAc,CAAC,OAAO,CAAC,aAAa,EAAE,EAAE,CAAC,CAAC;;oBAE3D,IAAI,cAAc,UAA8B;;oBAAhD,IAAoB,oBAAoB,GAAG,IAAI,CAAC;oBAEhD,IAAI,cAAc,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;;wBACpC,IAAM,cAAc,GAAG,cAAc,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;wBAEjD,cAAc,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC;wBAEnC,cAAc,CAAC,KAAK,EAAE,CAAC;wBAEvB,oBAAoB,GAAG,cAAc,CAAC;qBACvC;yBAAM;wBACL,cAAc,GAAG,cAAc,CAAC;qBACjC;;oBAED,IAAM,UAAU,GAAG,kBAAkB,CAAC,cAAc,CAAC,CAAC;oBAEtD,IAAI,UAAU,EAAE;wBACd,OAAO,UAAU,CAAC,oBAAoB,EAAE,oBAAoB,CAAC,CAAC;qBAC/D;yBAAM;wBACL,OAAO,YAAY,CAAC;qBACrB;iBACF;qBAAM;oBACL,OAAO,YAAY,CAAC;iBACrB;;;;;;;;QAQU,mCAAQ;;;;;;sBAAC,GAAG;;;;wBACnB,IAAI,GAAG,IAAI,CAAC;wBAEhB,IAAI,IAAI,CAAC,mBAAmB,CAAC,YAAY,CAAC,GAAG,CAAC,EAAE;4BAC9C,IAAI,GAAG,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;4BAE1C,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;yBACrB;6BAAM;4BACL,IAAI,GAAG,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,SAAS,EAAE,CAAC;yBACtD;wBAED,sBAAO,IAAI,EAAC;;;;;;;;;;QAQP,yCAAc;;;;;;sBAAC,OAAY,EAAE,OAAY;gBAC9C,KAAK,IAAM,IAAI,IAAI,OAAO,EAAE;oBAC1B,IAAI,OAAO,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE;wBAChC,IAAI;;4BAEF,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,WAAW,KAAK,MAAM,EAAE;gCACxC,OAAO,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;6BACnE;iCAAM;gCACL,OAAO,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;6BAC/B;yBACF;wBAAC,OAAO,CAAC,EAAE;;4BAEV,OAAO,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;yBAC/B;qBACF;iBACF;gBAED,OAAO,OAAO,CAAC;;;;;;;;;QASV,wCAAa;;;;;;;sBAAC,KAAa,EAAE,KAAU,EAAE,oBAAyB;gBACvE,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,iBAAiB,EAAE,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,CAAC;gBAE7E,IAAI,KAAK,IAAI,KAAK,CAAC,MAAM,EAAE;oBACzB,KAAK,GAAG,IAAI,CAAC,2BAA2B,CAAC,KAAK,EAAE,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;iBACrE;gBAED,KAAK,GAAG,IAAI,CAAC,2BAA2B,CAAC,KAAK,EAAE,IAAI,CAAC,wBAAwB,EAAE,CAAC,CAAC;gBAEjF,KAAK,GAAG,IAAI,CAAC,2BAA2B,CAAC,KAAK,EAAE,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC;gBAE5G,IAAI,oBAAoB,EAAE;oBACxB,KAAK,GAAG,IAAI,CAAC,2BAA2B,CAAC,KAAK,EAAE,oBAAoB,CAAC,CAAC;iBACvE;gBAED,OAAO,KAAK,CAAC;;;;;;;;QAQP,sDAA2B;;;;;;sBAAC,KAAa,EAAE,UAAe;gBAChE,KAAK,IAAM,GAAG,IAAI,UAAU,EAAE;oBAC5B,IAAI,UAAU,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE;;wBAElC,IAAM,UAAU,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC;wBAEnC,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,UAAU,CAAC,CAAC;qBACpD;iBACF;gBAED,OAAO,KAAK,CAAC;;;;;;QAMP,mDAAwB;;;;;;gBAC9B,IAAM,aAAa,GAAG,EAAE,CAAC;;gBAEzB,IAAM,KAAK,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;;gBAElD,IAAI,KAAK,CAAC;gBAEV,OAAO,KAAK,GAAG,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;oBAC3C,aAAa,CAAC,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;iBACtF;gBAED,OAAO,aAAa,CAAC;;;;;;;QAOf,6CAAkB;;;;;sBAAC,KAAa;gBACtC,OAAO,kBAAkB,CAAC,KAAK,CAAC,OAAO,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC,CAAC;;;oBAzJ7DR,aAAU,SAAC,EAAE,UAAU,EAAE,MAAM,EAAE;;;;;wBAZzB,aAAa;wBAHb,mBAAmB;wBACnB,mBAAmB;wBACnB,eAAe;;;;+BAHxB;;;;;;;;;;;;ACEA,QAAA;;;wBAFA;QAMC;;;;;;ACJD,QAAA;;2BAiBqB,KAAK;;4BAnB1B;QAsBC;;;;;;ACtBD,QAAA;;;8BAAA;QAIC;;;;;;ACJD,QAAA;;;wBAAA;QAQC;;;;;;;;;wBCLqB,KAAK;4BACD,SAAS;yBACZ,MAAM;wBAL7B;;;;;sCASuB,MAAM;uCACL,OAAO;sCACR,MAAM;qCAX7B;;;;;4BAeuB,MAAM;4BACN,MAAM;oCACE,cAAc;2BAjB7C;;;;;6BAqB2B,UAAU;6BACV,UAAU;wBAtBrC;;;;;4BA0B0C,SAAS;0BACX,OAAO;4BACL,SAAS;yBACZ,MAAM;6BACF,UAAU;wBA9BrD;;;;;0BAkCuB,MAAM;0BACN,MAAM;8BACF,UAAU;mCACL,eAAe;iCACjB,aAAa;4BAClB,QAAQ;8BACN,UAAU;4BACZ,QAAQ;iCACH,aAAa;8BAChB,UAAU;gCACR,YAAY;2BACjB,OAAO;4BACN,QAAQ;+BACL,WAAW;0BAChB,MAAM;8BACF,UAAU;kCACN,cAAc;4BACpB,QAAQ;kCACF,cAAc;yBApD7C;;;;;;;ACGA,QAAA;;;oBAHA;QAgJC;;;;;;AChJD,QAAA;;;wBAAA;QAYC;;;;;;ACZD,QAAA;;;8BAAA;QA8BC;;;;;;AC9BD,QAAA;QAKE,oBAAY,IAAY,EAAE,OAAe;YACvC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YAEjB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;SACxB;yBATH;QAUC;;;;;;ACVD,QAAA;QAWE,gBAAY,QAAgB,EAAE,SAAiB,EAAE,SAAkB,EAAE,QAAiB;YACpF,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YAEzB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;YAE3B,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;YAE3B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;SAC1B;qBAnBH;QAoBC;;;;;;AClBD,QAAA;;;6BAFA;QAIC;;;;;;ACJD,QAAA;;;oCAAA;QAMC;;;;;;ACND,QAAA;;;kCAAA;QAIC;;;;;;ACJD,QAAA;;;4BAAA;QAsBC;;;;;;ACtBD,QAAA;QAWE,iBAAY,EAAU,EAAE,IAAY,EAAE,MAAc,EAAE,QAAiB;YACrE,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;YAEb,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YAEjB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;YAErB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;SAC1B;sBAnBH;QAoBC;;;;;;ACpBD,QAAA;;;uBAAA;QAoBC;;;;;;ACpBD,QAAA;QAOE,2BAAY,SAAkB,EAAE,QAAa,EAAE,OAAY;YACzD,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;YAE3B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YAEzB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;SACxB;gCAbH;QAcC;;;;;;;;;;;ACdD;;QAIE,QAAS;QACT,UAAW;;0BADX,KAAK;0BACL,OAAO;;;kCAoDgD,IAAIS,eAAY,EAAE;8BAG3C,IAAIA,eAAY,EAAc;yBAI7C,IAAI,KAAK,EAAU;;;;;QAIlC,qCAAW;;;YAAX;gBACE,IAAI,CAAC,OAAO,EAAE,CAAC;aAChB;;;;QAEM,iCAAO;;;;gBACZ,IAAI,CAAC,KAAK,GAAG,IAAI,KAAK,EAAU,CAAC;gBAEjC,QAAQ,IAAI,CAAC,WAAW;oBACtB,KAAK,UAAU,CAAC,KAAK;wBACnB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;4BAC9C,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;4BACnB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,CAAC;4BAEhD,IAAI,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE;gCAEhD,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;6BAC/C;yBACF;wBACD,MAAM;oBACR,KAAK,UAAU,CAAC,OAAO;wBACrB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE;4BAE/B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;yBACpB;wBACD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;wBACnB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,IAAI,CAAC,CAAC;wBAClD,MAAM;iBACT;;;;;QAGH,yCAAe;;;YAAf;;gBACE,IAAI,OAAO,GAAG,CAAC,CAAC;gBAChB,QAAQ,IAAI,CAAC,WAAW;oBACtB,KAAK,UAAU,CAAC,KAAK;wBACnB,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;wBAC/B,MAAM;oBACR,KAAK,UAAU,CAAC,OAAO;wBACrB,OAAO,GAAG,EAAE,CAAC;wBACb,MAAM;iBACT;;gBAED,IAAI,OAAO,GAAG,CAAC,CAAC;gBAChB,IAAI,IAAI,CAAC,WAAW,KAAK,UAAU,CAAC,KAAK,EAAE;oBACzC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,IAAI,GAAG,GAAG,OAAO,CAAC,CAAC,GAAG,GAAG,CAAC;iBAClE;qBAAM;oBACL,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,IAAI,GAAG,GAAG,OAAO,CAAC,CAAC,GAAG,GAAG,CAAC;iBACpE;;gBAED,IAAM,KAAK,GAAG;oBACZ,mBAAmB,EAAE,SAAS,GAAG,OAAO,GAAG,MAAM;oBACjD,eAAe,EAAE,SAAS,GAAG,OAAO,GAAG,MAAM;oBAC7C,WAAW,EAAE,SAAS,GAAG,OAAO,GAAG,MAAM;iBAC1C,CAAC;gBAEF,OAAO,KAAK,CAAC;aACd;;;;;;QAEM,2CAAiB;;;;;sBAAC,IAAY,EAAE,KAAa;gBAClD,IAAI,IAAI,CAAC,WAAW,KAAK,UAAU,CAAC,KAAK,EAAE;oBACzC,IAAI,CAAC,QAAQ,GAAG,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;iBAC5C;qBAAM;oBACL,IAAI,CAAC,QAAQ,GAAG,GAAG,GAAG,EAAE,CAAC;iBAC1B;;gBAED,IAAI,OAAO,GAAG,0BAA0B,IAAI,IAAI,CAAC,QAAQ,IAAI,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;gBAEzE,IAAI,IAAI,CAAC,gBAAgB,KAAK,IAAI,EAAE;oBAElC,OAAO,IAAI,cAAc,CAAC;iBAC3B;gBAED,OAAO,OAAO,CAAC;;;;;;QAGV,yCAAe;;;;sBAAC,IAAY;gBACjC,IAAI,IAAI,CAAC,WAAW,KAAK,UAAU,CAAC,KAAK,EAAE;oBACzC,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC;;oBAG1B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;iBAC1C;qBAAM;oBACL,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC;;oBAG5B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;iBACxC;gBAED,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;;;oBA1I3CC,YAAS,SAAC;wBACT,QAAQ,EAAE,WAAW;wBACrB,MAAM,EAAE,CAAC,quEAAquE,CAAC;wBAC/uE,QAAQ,EAAE,m+BAiCX;qBACA;;;+BAEEC,QAAK;qCACLC,SAAM;kCAEND,QAAK;iCACLC,SAAM;4BAEND,QAAK;;8BA9DR;;;;;;;ACAA;QAmBE,8BACmC,IAAkB,EAC3C;YADyB,SAAI,GAAJ,IAAI,CAAc;YAC3C,cAAS,GAAT,SAAS;8BAPE,UAAU,CAAC,KAAK;gCACd,UAAU,CAAC,OAAO;+BACP,IAAI,CAAC,UAAU;YAM/C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC;YAC1B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;SACzB;;;;QAED,qCAAM;;;YAAN;gBACE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;aAC1B;;;;QAED,qCAAM;;;YAAN;gBACE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aACrC;;oBA3BFD,YAAS,SAAC;wBACT,MAAM,EAAE,CAAC,sEAAsE,CAAC;wBAChF,QAAQ,EAAE,sLAGX;qBACA;;;;;wBAS0C,YAAY,uBAAlDG,SAAM,SAACC,wBAAe;wBAnBlBC,qBAAY;;;mCADrB;;QAmCA;;;2BAnCA;QAsCC;;;;;;ACtCD;QAsDE,iCACU,QACA;YADA,WAAM,GAAN,MAAM;YACN,kBAAa,GAAb,aAAa;kCApByB,IAAIN,eAAY,EAAE;SAqB7D;;;;QAEL,0CAAQ;;;YAAR;gBACE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;;oBAElB,IAAM,IAAI,GAAQ,EAAE,CAAC;oBACrB,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;oBACd,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;oBAChB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;oBACjB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;oBAEpB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;iBACtB;aACF;QAED,sBAAI,yCAAI;;;gBAAR;gBACE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;oBAClB,OAAO,EAAE,CAAC;iBACX;;gBAED,IAAI,OAAO,GAAG,KAAG,IAAI,CAAC,QAAQ,CAAC,OAAS,CAAC;gBAEzC,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;gBAEhD,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,KAAK,EAAE,EAAE;oBAC/B,OAAO,GAAG,EAAE,CAAC;iBACd;;gBAED,IAAI,IAAI,GAAG,KAAG,IAAI,CAAC,QAAQ,CAAC,IAAM,CAAC;gBACnC,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,KAAK,EAAE,EAAE;oBAC7B,IAAI,GAAG,IAAI,CAAC;iBACb;gBAED,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE;oBAC9B,OAAU,IAAI,YAAO,OAAS,CAAC;iBAEhC;qBAAM,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,EAAE,EAAE;;oBAEpC,IAAM,EAAE,GAAG,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;oBAC9C,OAAU,IAAI,SAAI,EAAE,SAAI,OAAS,CAAC;iBAEnC;qBAAM;oBACL,OAAU,IAAI,SAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,SAAI,OAAS,CAAC;iBACrD;aACF;;;WAAA;;;;;QAED,4CAAU;;;;YAAV,UAAW,MAAM;gBAAjB,iBAyBC;;gBAxBC,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,oBAAoB,EAAE;oBACvD,IAAI,EAAE;wBACJ,IAAI,EAAE;4BACJ,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI;4BACxB,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM;4BAC5B,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,OAAO;4BAC9B,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM;yBAC7B;wBACD,KAAK,EAAE,IAAI,CAAC,KAAK;qBAClB;iBACF,CAAC,CAAC;gBAEH,SAAS,CAAC,WAAW,EAAE;qBACpB,SAAS,CAAC,UAAC,MAAkB;;oBAE5B,IAAI,MAAM,KAAK,SAAS,EAAE;wBACxB,OAAO;qBACR;yBAAM,IAAI,MAAM,KAAK,CAAC,CAAC,EAAE;wBACxB,KAAI,CAAC,QAAQ,GAAG,MAAM,CAAC;wBAEvB,KAAI,CAAC,kBAAkB,EAAE,CAAC;qBAC3B;iBACF,CAAC,CAAC;gBACL,OAAO,KAAK,CAAC;aACd;;;;QAEO,oDAAkB;;;;gBAExB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;;;oBA9H3CC,YAAS,SAAC;wBACT,QAAQ,EAAE,oBAAoB;wBAC9B,MAAM,EAAE,CAAC,gOAAgO,CAAC;wBAC1O,QAAQ,EAAE,whBAoBX;wBACC,SAAS,EAAE,CAACM,kBAAa,CAAC;qBAC3B;;;;;wBA9BQC,kBAAS;wBAGTD,kBAAa;;;;+BA8BnBL,QAAK;qCAELC,SAAM;4BAEND,QAAK;+BAELA,QAAK;+BAELA,QAAK;iCAELA,QAAK;8BAELA,QAAK;uCAELA,QAAK;8BAELA,QAAK;gCAELA,QAAK;;sCApDR;;;;;;;ACAA;QAgFE,wBAAoB,aAA4B;YAA5B,kBAAa,GAAb,aAAa,CAAe;kCAdA,IAAIF,eAAY,EAAE;4BAKzB,IAAIA,eAAY,EAAE;6BAChB,IAAIA,eAAY,EAAE;8BAIzC,UAAU,CAAC,KAAK;gCACd,UAAU,CAAC,OAAO;+BACP,IAAI,CAAC,UAAU;SAEK;;;;QAErD,iCAAQ;;;YAAR;gBACE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;oBAClB,IAAI,CAAC,QAAQ,GAAG;wBACd,IAAI,EAAE,CAAC;wBACP,MAAM,EAAE,CAAC;wBACT,OAAO,EAAE,IAAI;wBACb,MAAM,EAAE,EAAE;qBACX,CAAC;iBACH;gBAED,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;oBACrB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC;iBACnE;gBAED,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;oBACrB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC;iBAC/D;aACF;;;;QAED,mCAAU;;;YAAV;gBACE,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,KAAK,EAAE,EAAE;oBAC/B,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,KAAK,EAAE,EAAE;wBAC7B,OAAO,IAAI,CAAC;qBACb;yBAAM,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAG,EAAE,EAAE;wBAClC,OAAO,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;qBACzC;iBACF;gBAED,OAAO,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;aACnC;;;;QAED,qCAAY;;;YAAZ;gBACE,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE;oBAC9B,OAAO,IAAI,CAAC;iBACb;qBAAM,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,EAAE,EAAE;oBACpC,OAAO,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;iBAC3C;qBAAM;oBACL,OAAO,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;iBACrC;aACF;;;;;QAED,uCAAc;;;;YAAd,UAAe,IAAgB;gBAC7B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;aACzB;;;;;QAED,oCAAW;;;;YAAX,UAAY,CAAc;gBACxB,IAAI,CAAC,QAAQ,CAAC,OAAO,GAAG,CAAC,CAAC;aAC3B;;;;QAED,+BAAM;;;YAAN;gBACE,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;aACtB;;;;QAED,+BAAM;;;YAAN;gBACE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aACpC;;;;;QAED,2CAAkB;;;;YAAlB,UAAmB,KAAK;gBACtB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aACzC;;oBAzIFC,YAAS,SAAC;wBACT,QAAQ,EAAE,UAAU;wBACpB,QAAQ,EAAE,85DAsDX;wBACC,MAAM,EAAE,CAAC,w0EAAw0E,CAAC;wBACl1E,SAAS,EAAE,CAACM,kBAAa,CAAC;qBAC3B;;;;;wBA7DQA,kBAAa;;;;+BA+DnBL,QAAK;qCACLC,SAAM;kCAEND,QAAK;kCACLA,QAAK;+BAELC,SAAM;gCACNA,SAAM;4BAEND,QAAK;;6BA1ER;;;;;;;;QCiCE,wBACS;YAAA,kBAAa,GAAb,aAAa;;;;uCAZgB,KAAK;;;;sCAGN,KAAK;;;;oCAGP,KAAK;SAOnC;;;;;QAGE,8CAAqB;;;;;;;;;;;QAOrB,oCAAW;;;;;sBAAC,QAAa;gBAC9B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;gBAEvC,IAAI,CAAC,QAAQ,EAAE,CAAC;;;;;;QAIX,mCAAU;;;;;gBACf,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE;oBACnB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;oBAE7B,IAAI,IAAI,CAAC,OAAO,EAAE;wBAChB,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;qBACtB;oBAED,IAAI,CAAC,qBAAqB,EAAE,CAAC;iBAC9B;;;;;;QAII,iCAAQ;;;;;gBACb,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC;;;;;;;QAOxB,uCAAc;;;;;sBAAC,IAAc;gBAClC,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE;oBAC5C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;iBACrD;gBAED,OAAO,IAAI,CAAC;;;;;;;;;QAQP,4CAAmB;;;;;;;sBAAC,SAAiB,EAAE,cAAmB,EAAE,MAAW;gBAC5E,IAAI,MAAM,CAAC,aAAa,EAAE;;oBACxB,IAAM,OAAK,GAAG,MAAM,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;;oBAE9C,IAAM,0BAA0B,GAAG,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,OAAK,CAAC,OAAO,CAAC,CAAC;oBAErF,IAAI,0BAA0B,EAAE;;wBAC9B,IAAI,UAAU,GAAG,CAAC,cAAc,CAAC,CAAC;wBAElC,IAAI,OAAK,CAAC,UAAU,IAAI,OAAK,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;4BACnD,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,OAAK,CAAC,UAAU,CAAC,CAAC;yBAClD;wBAED,0BAA0B,CAAC,IAAI,CAAC,aAAa,CAAC,eAAe,EAAE,MAAM,EAAE,UAAU,CAAC,CAAC;qBACpF;iBACF;;;;;;QAMI,sCAAa;;;;;gBAClB,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM;qBACrB,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,CAAC,WAAW,KAAK,YAAY,CAAC,IAAI;wBAC1E,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC;wBACpD,IAAI,CAAC,KAAK,CAAC,SAAS,KAAK,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC;;;;;;QAM5E,0CAAiB;;;;;gBACtB,OAAO,CAAC,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,KAAK,CAAC,gBAAgB,IAAI,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,MAAM,GAAG,CAAC,CAAC;;;;;;QAM5F,kDAAyB;;;;;gBAC9B,OAAO,CAAC,IAAI,CAAC,mBAAmB,EAAE,IAAI,IAAI,CAAC,KAAK,CAAC,UAAU,KAAK,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,QAAQ,IAAI,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;;;;;;;;QAQ5H,iCAAQ;;;;;;sBAAC,cAAoB,EAAE,QAAkB;gBACtD,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;gBAE3B,IAAI,IAAI,CAAC,cAAc,EAAE,EAAE;oBACzB,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;wBACrB,IAAI,CAAC,qBAAqB,EAAE,CAAC;qBAC9B;yBAAM;wBACL,IAAI,CAAC,IAAI,CAAC,mBAAmB,EAAE,EAAE;4BAC/B,IAAI,IAAI,CAAC,mBAAmB,EAAE;gCAC5B,IAAI,CAAC,yBAAyB,EAAE,CAAC;6BAClC;4BAED,IAAI,IAAI,CAAC,kBAAkB,EAAE;gCAC3B,IAAI,CAAC,wBAAwB,EAAE,CAAC;6BACjC;4BAED,IAAI,IAAI,CAAC,gBAAgB,EAAE;gCACzB,IAAI,CAAC,sBAAsB,EAAE,CAAC;6BAC/B;yBACF;qBACF;oBAED,IAAI,CAAC,uBAAuB,EAAE,CAAC;iBAChC;gBAED,OAAO,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC;;;;;;;;QAO9B,2CAAkB;;;;;;sBAAC,OAAe,EAAE,IAAkD;gBAAlD,qBAAA;oBAAA,OAAe,cAAc,CAAC,oBAAoB;;gBAC3F,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,gBAAgB,EAAE;oBAChC,IAAI,CAAC,KAAK,CAAC,gBAAgB,GAAG,IAAI,KAAK,EAAc,CAAC;iBACvD;gBAED,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,UAAU,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC,CAAC;;;;;;QAI3D,8CAAqB;;;;;gBAC1B,IAAI,CAAC,KAAK,CAAC,gBAAgB,GAAG,IAAI,KAAK,EAAc,CAAC;;;;;;;;;QAM9C,uCAAc;;;;YAAxB;gBACE,OAAO,IAAI,CAAC,KAAK,CAAC,UAAU,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,gBAAgB,IAAI,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC;aAC5G;;;;;;;;;;QAMS,oCAAW;;;;;YAArB,UAAsB,QAAiB;gBACrC,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;gBAExB,IAAI,QAAQ,EAAE;oBACZ,IAAI,IAAI,CAAC,KAAK,CAAC,gBAAgB,IAAI,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,MAAM,GAAG,CAAC,EAAE;wBACzE,OAAO,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC;qBACpC;yBAAM;wBACL,IAAI,CAAC,KAAK,CAAC,gBAAgB,GAAG,IAAI,KAAK,EAAc,CAAC;wBAEtD,OAAO,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC;qBACpC;iBACF;qBAAM;oBACL,IAAI,CAAC,KAAK,CAAC,gBAAgB,GAAG,IAAI,KAAK,EAAc,CAAC;oBAEtD,OAAO,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC;iBACpC;aACF;;;;;;QAGS,gDAAuB;;;;YAAjC;gBACE,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,gBAAgB,GAAG,IAAI,KAAK,EAAc,CAAC;;oBAE5E,KAAoB,IAAA,KAAAO,SAAA,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,YAAY,CAAA,gBAAA;wBAA5D,IAAM,KAAK,WAAA;wBACd,IAAI,KAAK,CAAC,gBAAgB,EAAE;4BAC1B,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,gBAAgB,GAAG,IAAI,CAAC,aAAa;iCACnE,aAAa,CAAC,gBAAgB,CAAC,MAAM,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC;yBAClE;qBACF;;;;;;;;;;;;;;;;aACF;;;;;;;;QAKS,kDAAyB;;;;YAAnC;gBACE,IAAI,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,QAAQ,EAAE;oBAClC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;wBACpF,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,UAAU,CAAC,cAAc,CAAC,oBAAoB,EAAE,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC,CAAC;qBAC3H;iBACF;gBAED,OAAO,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC;aACpC;;;;;;;;QAKS,iDAAwB;;;;YAAlC;gBACE,IAAI,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,OAAO,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;;oBACjH,IAAM,KAAK,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;oBACxD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;wBACtC,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,UAAU,CAAC,cAAc,CAAC,oBAAoB,EAAE,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC;qBAC1H;iBACF;gBAED,OAAO,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC;aACpC;;;;;;;;QAKS,+CAAsB;;;;YAAhC;;gBACE,IAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;gBAEhG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG,IAAI,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG;qBACtE,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG,IAAI,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;oBACxE,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,UAAU,CAAC,cAAc,CAAC,oBAAoB,EAAE,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC;iBACxH;gBAED,OAAO,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC;aACpC;;;;;;;;QAKS,4CAAmB;;;;YAA7B;gBACE,OAAO,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,CAAC,QAAQ,KAAK,SAAS,CAAC,OAAO,CAAC;aACjF;;;;8CA5P+C,4BAA4B;;oBAN7ER,YAAS,SAAC;wBACT,QAAQ,EAAE,WAAW;wBACrB,QAAQ,EAAE,EAAE;qBACb;;;;;wBARQ,aAAa;;;;4BAcnBC,QAAK,SAAC,OAAO;8BAGbQ,YAAS,SAACC,aAAO;;6BAnBpB;;;;;;;;QCY6CnB,2CAAc;QACzD,iCACS,eACC,qBACA,kBACA,kBACY,KAAqB;YAL3C,YAOE,kBAAM,aAAa,CAAC,SACrB;YAPQ,mBAAa,GAAb,aAAa;YACZ,yBAAmB,GAAnB,mBAAmB;YACnB,sBAAgB,GAAhB,gBAAgB;YAChB,sBAAgB,GAAhB,gBAAgB;YACJ,WAAK,GAAL,KAAK,CAAgB;;SAG1C;;;;;QAGM,uDAAqB;;;;;;gBAC1B,IAAI,CAAC,IAAI,CAAC,mBAAmB,EAAE,EAAE;oBAC/B,IAAI,CAAC,eAAe,EAAE,CAAC;oBAEvB,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,SAAS,CAAC,UAAC,KAAsB;wBAClE,KAAI,CAAC,eAAe,EAAE,CAAC;qBACxB,CAAC,CAAC;iBACJ;;;;;;;QAIO,iDAAe;;;;YAAzB;gBACE,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,eAAe,EAAE;;oBACtD,IAAM,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAClD,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,eAAe,CAAC,EACnF,IAAI,CAAC,KAAK,EACV,IAAI,CAAC,aAAa,CAAC,oBAAoB,CACxC,CAAC;oBAEF,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;iBAC5B;aACF;;;;;;;;;QAKS,6CAAW;;;;;YAArB,UAAsB,QAAgB;gBAAtC,iBAMC;gBALC,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,UAAA,QAAQ;oBACvD,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC;iBACpC,EAAE,UAAA,SAAS;oBACV,OAAO,CAAC,KAAK,CAAC,eAAe,EAAE,SAAS,CAAC,CAAC;iBAC3C,CAAC,CAAC;aACJ;;oBAhDFS,YAAS,SAAC;wBACT,QAAQ,EAAE,qBAAqB;wBAC/B,QAAQ,EAAE,EAAE;qBACb;;;;;wBAPQ,aAAa;wBAEb,mBAAmB;wBAJnBF,qBAAgB;wBAGhB,gBAAgB;wBAFhBa,qBAAc,uBAelBC,WAAQ;;;sCAlBb;MAY6C,cAAc;;;;;;;QCgDfrB,0CAAuB;;;;;;qCAE9B,IAAI;;;;;;;QAGhC,2CAAU;;;;;gBACf,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE;oBACnB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;oBAE3B,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;oBAErB,IAAI,CAAC,qBAAqB,EAAE,CAAC;iBAC9B;;;;;;;QAOI,+CAAc;;;;;sBAAC,IAAc;gBAClC,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE;oBAC5C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;;wBACrD,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;wBAEvC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,KAAK,CAAC,CAAC;qBACrD;iBACF;gBAED,OAAO,IAAI,CAAC;;;oBArFfS,YAAS,SAAC;wBACT,QAAQ,EAAE,oBAAoB;wBAC9B,QAAQ,EAAE,27DAoDX;wBACC,MAAM,EAAE,CAAC,qGAAqG,CAAC;qBAChH;;qCA3DD;MA4D4C,uBAAuB;;;;;;;QCH1BT,uCAAc;;;;;;qCAElB,IAAI;;;;;;;;QAMhC,4CAAc;;;;;sBAAC,IAAc;gBAClC,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE;oBAC5C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;;wBACrD,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;wBAEvC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,KAAK,CAAC,CAAC;qBACrD;iBACF;gBAED,OAAO,IAAI,CAAC;;;oBAvEfS,YAAS,SAAC;wBACT,QAAQ,EAAE,iBAAiB;wBAC3B,QAAQ,EAAE,iyDAiDX;wBACC,MAAM,EAAE,CAAC,2JAA2J,CAAC;qBACtK;;kCAxDD;MAyDyC,cAAc;;;;;;;QCUXT,0CAAc;QAOxD,gCACS,eACC,kBACA,iBACA;YAJV,YAME,kBAAM,aAAa,CAAC,SACrB;YANQ,mBAAa,GAAb,aAAa;YACZ,sBAAgB,GAAhB,gBAAgB;YAChB,qBAAe,GAAf,eAAe;YACf,cAAQ,GAAR,QAAQ;;;;wCANoB,IAAI;;SASzC;;;;QAED,gDAAe;;;YAAf;gBAAA,iBAMC;gBALC,IAAI,CAAC,kBAAkB,EAAE,CAAC;gBAE1B,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,SAAS,CAAC,UAAC,QAAQ;oBACpD,KAAI,CAAC,kBAAkB,EAAE,CAAC;iBAC3B,CAAC,CAAC;aACJ;;;;;;QAMM,+CAAc;;;;;sBAAC,IAAc;gBAClC,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE;oBAC5C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC,CAAC;iBAC7G;gBAED,OAAO,IAAI,CAAC;;;;;;QAIP,sDAAqB;;;;;;;;;;;QAKpB,mDAAkB;;;;;gBACxB,IAAI,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,eAAe,CAAC,YAAY,EAAE;;oBAC7D,IAAM,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,eAAe,CAAC;oBAE1E,IAAI,eAAe,EAAE;wBACnB,IAAI,CAAC,eAAe,CAAC,MAAM,GAAG,eAAe,CAAC;qBAC/C;iBACF;;;oBA7GJS,YAAS,SAAC;wBACT,QAAQ,EAAE,oBAAoB;wBAC9B,QAAQ,EAAE,qsEAuDX;wBACC,MAAM,EAAE,CAAC,soBAAsoB,CAAC;qBACjpB;;;;;wBAhEQ,aAAa;wBAEbF,qBAAgB;wBADhB,eAAe;wBAEfe,eAAQ;;;;sCAgEdJ,YAAS,SAAC,UAAU;;qCArEvB;MAmE4C,cAAc;;;;;;;QCUTlB,+CAAc;QAM7D,qCACS,eACC;YAFV,YAIE,kBAAM,aAAa,CAAC,SACrB;YAJQ,mBAAa,GAAb,aAAa;YACZ,sBAAgB,GAAhB,gBAAgB;;;;wCAJY,IAAI;;SAOzC;;;;;QAGM,2DAAqB;;;;;gBAC1B,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE;oBACtB,IAAI,CAAC,KAAK,CAAC,YAAY,GAAG,IAAI,CAAC,gBAAgB,CAAC,yBAAyB,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;iBAC7H;gBAED,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE;oBACtB,IAAI,CAAC,KAAK,CAAC,YAAY,GAAG,IAAI,CAAC,gBAAgB,CAAC,yBAAyB,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;iBAC7H;gBAED,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE;oBAC7B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,gBAAgB,CAAC,yBAAyB,CACrE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EACzB,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CACpC,CAAC;iBACH;;;;;;;QAOI,oDAAc;;;;;sBAAC,IAAc;gBAClC,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE;oBAC5C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;oBAEnE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;oBAErE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;iBAClE;gBAED,OAAO,IAAI,CAAC;;;;;;QAIP,oDAAc;;;;;gBACnB,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;;;oBAtH1BS,YAAS,SAAC;wBACT,QAAQ,EAAE,0BAA0B;wBACpC,QAAQ,EAAE,gsEA4DX;wBACC,MAAM,EAAE,CAAC,0zCAA0zC,CAAC;wBACp0C,SAAS,EAAE;4BACT,EAAE,OAAO,EAAEc,uBAAW,EAAE,QAAQ,EAAEC,sCAA0B,EAAE;4BAC9D,EAAE,OAAO,EAAEvB,6BAAiB,EAAE,QAAQ,EAAE,WAAW,EAAE;yBACtD;qBACF;;;;;wBAvEQ,aAAa;wBACb,gBAAgB;;;;+BAwEtBiB,YAAS,SAAC,OAAO;;0CA9EpB;MA6EiD,cAAc;;;;;;;QCzBrBlB,wCAAc;;;;;;wCAEhB,IAAI;;;;;;;QAGnC,uCAAQ;;;;;gBACb,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE;oBAC1B,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC;iBAC9B;qBAAM;oBACL,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;iBACtD;;;oBA3DJS,YAAS,SAAC;wBACT,QAAQ,EAAE,kBAAkB;wBAC5B,QAAQ,EAAE,srDA4CX;wBACC,MAAM,EAAE,CAAC,qVAAqV,CAAC;qBAChW;;mCAnDD;MAoD0C,cAAc;;;;;;;QCoCVT,4CAAc;;;;;;;;QAKnD,6CAAU;;;;;gBACf,IAAI,IAAI,CAAC,iBAAiB,EAAE;oBAC1B,IAAI,CAAC,iBAAiB,CAAC,KAAK,EAAE,CAAC;iBAChC;;gBAED,IAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;gBAE5C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;oBAC/B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;iBAC3C;gBAED,IAAI,CAAC,qBAAqB,EAAE,CAAC;;;;;;;QAOxB,iDAAc;;;;;sBAAC,IAAc;gBAClC,IAAI,IAAI,CAAC,iBAAiB,CAAC,KAAK,EAAE;;wBAChC,KAAmB,IAAA,KAAAiB,SAAA,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAA,gBAAA;4BAA1C,IAAM,IAAI,WAAA;4BACb,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;yBACpC;;;;;;;;;;;;;;;iBACF;gBAED,OAAO,IAAI,CAAC;;;;;;;;;QAQP,2CAAQ;;;;;;sBAAC,cAAoB,EAAE,QAAkB;gBACtD,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;gBAE3B,IAAI,IAAI,CAAC,cAAc,EAAE,EAAE;;oBACzB,IAAI,WAAW,GAAG,CAAC,CAAC;oBACpB,IAAI,IAAI,CAAC,iBAAiB,EAAE;wBAC1B,WAAW,GAAG,cAAc,KAAK,UAAU,GAAG,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,MAAM,CAAC;qBAC7H;oBAED,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE;wBACzB,WAAW,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;qBAC7C;oBAED,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG,IAAI,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG;yBACtE,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG,IAAI,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;wBACxE,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,UAAU,CAAC,cAAc,CAAC,oBAAoB,EAAE,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC;qBACxH;oBAED,IAAI,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,kBAAkB,GAAG,CAAC,IAAI,IAAI,CAAC,iBAAiB,IAAI,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE;;wBACzG,IAAM,sBAAsB,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,OAAO,KAAK,iBAAiB,GAAA,CAAC,CAAC;wBAEtG,IAAI,sBAAsB,EAAE;4BAC1B,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,UAAU,CAAC,cAAc,CAAC,oBAAoB,EAAE,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,mBAAmB,CAAC,CAAC,CAAC;yBAClI;;wBAED,IAAM,sBAAsB,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,OAAO,KAAK,iBAAiB,GAAA,CAAC,CAAC;wBAEtG,IAAI,sBAAsB,EAAE;4BAC1B,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,UAAU,CAAC,cAAc,CAAC,oBAAoB,EAAE,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,mBAAmB,CAAC,CAAC,CAAC;yBAClI;qBACF;oBAED,IAAI,CAAC,uBAAuB,EAAE,CAAC;iBAChC;gBAED,OAAO,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC;;;;;;;QAM9B,6CAAU;;;;;sBAAC,IAAS;gBACzB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;;;oBAnKnCR,YAAS,SAAC;wBACT,QAAQ,EAAE,uBAAuB;wBACjC,QAAQ,EAAE,8jGA8EX;wBACC,MAAM,EAAE,CAAC,sxBAAsxB,CAAC;qBACjyB;;;wCAGES,YAAS,SAACO,qBAAU;;uCA1FvB;MAwF8C,cAAc;;;;;;;QCNZzB,8CAAc;;;;;;8BAcpC,IAAI,KAAK,EAAE;;;;wCAGG,IAAI;;;;;;QAE1C,6CAAQ;;;YAAR;gBACE,IAAI,CAAC,iBAAiB,EAAE,CAAC;aAC1B;;;;;;QAKM,gDAAW;;;;;sBAAC,QAAa;;gBAC9B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;gBAEvC,IAAI,CAAC,IAAI,CAAC,mBAAmB,EAAE,EAAE;oBAC/B,IAAI,CAAC,SAAS,GAAG,IAAI,KAAK,EAAE,CAAC;oBAE7B,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,aAAa,EAAE,WAAW,CAAC,CAAC;oBAExD,IAAI,CAAC,SAAS,CAAC,GAAG,GAAG,QAAQ,CAAC,KAAK,CAAC;;oBAGpC,UAAU,CAAC,cAAQ,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAI,CAAC,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;iBACjE;;;;;;QAII,+CAAU;;;;;gBACf,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE;oBACnB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;oBAE3B,IAAI,CAAC,iBAAiB,CAAC,KAAK,EAAE,CAAC;oBAE/B,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;oBAErB,IAAI,CAAC,SAAS,GAAG,IAAI,KAAK,EAAE,CAAC;oBAE7B,IAAI,CAAC,qBAAqB,EAAE,CAAC;iBAC9B;;;;;;QAII,6CAAQ;;;;;gBACb,IAAI,IAAI,CAAC,mBAAmB,EAAE;oBAC5B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,UAAU,CAAC;iBAC3E;;;;;;QAII,oDAAe;;;;;;;gBACpB,IAAM,YAAY,GAAG,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBAErD,IAAI,YAAY,EAAE;oBAChB,IAAI,CAAC,SAAS,GAAG,IAAI,KAAK,EAAE,CAAC;;oBAE7B,IAAM,UAAU,GAAG,IAAI,UAAU,EAAE,CAAC;;oBAGpC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,GAAG,aAAa,CAAC;oBAEtC,UAAU,CAAC,SAAS,GAAG,UAAC,SAAc;wBACpC,KAAI,CAAC,SAAS,CAAC,GAAG,GAAG,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC;wBAE7C,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAI,CAAC,SAAS,CAAC,CAAC;wBAEtC,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,GAAG,KAAI,CAAC,SAAS,CAAC,GAAG,CAAC;qBAC5C,CAAC;oBAEF,UAAU,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;iBACxC;;;;;;QAIK,sDAAiB;;;;;gBACvB,IAAI,CAAC,eAAe,GAAG,IAAI0B,6BAAe,EAAE,CAAC;gBAE7C,IAAI,CAAC,eAAe,CAAC,WAAW,GAAG,IAAI,CAAC;gBAExC,IAAI,CAAC,eAAe,CAAC,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,KAAK,CAAC;gBAElG,IAAI,CAAC,eAAe,CAAC,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,MAAM,CAAC;gBAErG,IAAI,CAAC,eAAe,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,WAAW,CAAC;gBAE1E,IAAI,CAAC,eAAe,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,YAAY,CAAC;gBAE5E,IAAI,CAAC,eAAe,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,QAAQ,CAAC;gBAEpE,IAAI,CAAC,eAAe,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,SAAS,CAAC;gBAEtE,IAAI,CAAC,eAAe,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,OAAO,CAAC;;;oBAtLrEjB,YAAS,SAAC;wBACT,QAAQ,EAAE,yBAAyB;wBACnC,QAAQ,EAAE,yrFAwEX;wBACC,MAAM,EAAE,CAAC,idAAid,CAAC;qBAC5d;;;8BAGES,YAAS,SAACS,mCAAqB;0CAG/BT,YAAS,SAAC,cAAc;wCAGxBA,YAAS,SAACO,qBAAU;;yCA1FvB;MAkFgD,cAAc;;;;;;;QCrEtBzB,sCAAc;;;;;oBAVrDS,YAAS,SAAC;wBACT,QAAQ,EAAE,gBAAgB;wBAC1B,QAAQ,EAAE,yNAKX;wBACC,MAAM,EAAE,CAAC,EAAE,CAAC;qBACb;;iCAZD;MAawC,cAAc;;;;;;;QCyCbT,uCAAc;;;;;;wCAEf,IAAI;;;;uCAGL,IAAI;;;;oBAxD1CS,YAAS,SAAC;wBACT,QAAQ,EAAE,iBAAiB;wBAC3B,QAAQ,EAAE,wqDA8CX;wBACC,MAAM,EAAE,CAAC,6EAA6E,CAAC;qBACxF;;kCArDD;MAsDyC,cAAc;;;;;;;QCmBXT,0CAAc;QAOxD,gCACS,eACC,eACA;YAHV,YAKE,kBAAM,aAAa,CAAC,SACrB;YALQ,mBAAa,GAAb,aAAa;YACZ,mBAAa,GAAb,aAAa;YACb,YAAM,GAAN,MAAM;;;;qCALmB,IAAI;;SAQtC;;;;;QAGM,sDAAqB;;;;;;;gBAE1B,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,eAAe,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,SAAS,EAAE;oBAChH,IAAI,aAAa,IAAI,SAAS,EAAE;wBAC9B,SAAS,CAAC,WAAW,CAAC,kBAAkB,CAAC,UAAC,QAAQ;4BAChD,KAAI,CAAC,KAAK,CAAC,eAAe,GAAG;gCAC3B,QAAQ,EAAE,QAAQ,CAAC,MAAM,CAAC,QAAQ;gCAClC,SAAS,EAAE,QAAQ,CAAC,MAAM,CAAC,SAAS;6BACrC,CAAC;yBACH,CAAC,CAAC;qBACJ;iBACF;;;;;;;QAMI,4CAAW;;;;;sBAAC,QAAa;;oBAC9B,KAAoB,IAAA,KAAAiB,SAAA,QAAQ,CAAC,KAAK,CAAA,gBAAA;wBAA7B,IAAM,KAAK,WAAA;wBACd,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,QAAQ,EAAE,KAAK,CAAC,SAAS,CAAC,CAAC;qBAC9D;;;;;;;;;;;;;;;;;;;;;QAII,2CAAU;;;;;gBACf,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE;oBACnB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;oBAE3B,IAAI,CAAC,qBAAqB,EAAE,CAAC;iBAC9B;;;;;;;QAOI,+CAAc;;;;;sBAAC,IAAc;gBAClC,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE;oBAC5C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;;wBACrD,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;wBAEvC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,GAAG,GAAG,CAAC,GAAG,YAAY,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC;wBAEtE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,GAAG,GAAG,CAAC,GAAG,aAAa,EAAE,KAAK,CAAC,SAAS,CAAC,CAAC;qBACzE;iBACF;gBAED,OAAO,IAAI,CAAC;;;;;;;QAMP,2CAAU;;;;;sBAAC,cAA0B;gBAC1C,IAAI,CAAC,IAAI,CAAC,mBAAmB,EAAE,EAAE;oBAC/B,IAAI,CAAC,sBAAsB,CAAC,cAAc,CAAC,MAAM,CAAC,GAAG,EAAE,cAAc,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;iBACnF;;;;;;QAII,oDAAmB;;;;;;gBACxB,IAAI,IAAI,CAAC,aAAa,EAAE;;oBAEtB,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC;;wBAC7B,IAAM,KAAK,GAAG,KAAI,CAAC,aAAa,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,IAAI,KAAK,KAAI,CAAC,aAAa,CAAC,aAAa,CAAC,EAAE,GAAA,CAAC,CAAC;;wBAEtH,IAAM,YAAY,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,KAAI,CAAC,aAAa,CAAC,aAAa,EAAE,EAAE,CAAC,CAAC;wBAC/F,YAAY,CAAC,WAAW,CAAC,eAAe,EAAE;4BACxC,KAAI,CAAC,MAAM,CAAC,GAAG,CAAC;;gCAEd,IAAM,KAAK,GAAmC,YAAY,CAAC,QAAQ,EAAE,CAAC;;gCAGtE,IAAI,KAAK,CAAC,QAAQ,KAAK,SAAS,IAAI,KAAK,CAAC,QAAQ,KAAK,IAAI,EAAE;oCAC3D,OAAO;iCACR;;gCAGD,IAAM,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC;;gCAE/C,IAAM,SAAS,GAAG,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC;gCAEhD,KAAK,CAAC,eAAe,GAAG;oCACtB,QAAQ,EAAE,QAAQ;oCAClB,SAAS,EAAE,SAAS;iCACrB,CAAC;gCAEF,KAAK,CAAC,IAAI,GAAG,EAAE,CAAC;;gCAEhB,IAAM,MAAM,GAAG,IAAI,MAAM,CACvB,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,EAAE,EAC7B,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,EAAE,EAC7B,KAAK,CAAC,cAAc,CAAC,gBAAgB,CAAC,SAAS,EAC/C,KAAK,CAAC,cAAc,CAAC,gBAAgB,CAAC,QAAQ,CAC/C,CAAC;gCAEF,KAAI,CAAC,sBAAsB,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;6BAClD,CAAC,CAAC;yBACJ,CAAC,CAAC;qBACJ,CAAC,CAAC;iBACJ;;;;;;;;QAOK,uDAAsB;;;;;;sBAAC,QAAgB,EAAE,SAAiB;gBAChE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE;oBAC1B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;iBAC5B;gBAED,IAAI,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG,GAAG,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG,EAAE;;oBAC7F,IAAM,MAAM,GAAG,IAAI,MAAM,CACvB,QAAQ,EACR,SAAS,EACT,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,gBAAgB,CAAC,SAAS,EACpD,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,gBAAgB,CAAC,QAAQ,CACpD,CAAC;oBAEF,MAAM,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,gBAAgB,CAAC,aAAa,CAAC;oBAEhF,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;iBACpC;;;;;;;;QAOI,qDAAoB;;;;;;sBAAC,MAAc,EAAE,cAA0B;gBACpE,MAAM,CAAC,QAAQ,GAAG,cAAc,CAAC,MAAM,CAAC,GAAG,CAAC;gBAC5C,MAAM,CAAC,SAAS,GAAG,cAAc,CAAC,MAAM,CAAC,GAAG,CAAC;;;oBAtNhDR,YAAS,SAAC;wBACT,QAAQ,EAAE,oBAAoB;wBAC9B,QAAQ,EAAE,muEA6DX;wBACC,MAAM,EAAE,CAAC,2cAAyc,CAAC;qBACpd;;;;;wBAtEQ,aAAa;wBACDmB,kBAAa;wBAHSC,SAAM;;;;oCA2E9CX,YAAS,SAAC,QAAQ;;qCA3ErB;MAyE4C,cAAc;;;;;;;QCflBlB,sCAAc;;;;;;wCAKd,IAAI;;;;uCAGL,IAAI;;;;;;;;QAKlC,uCAAU;;;;;sBAAC,IAAS;gBACzB,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,IAAI,CAAC;gBAE5B,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;gBAE1B,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;gBAEnD,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;;;;;;;QAM/C,4CAAe;;;;;sBAAC,KAAU;gBAC/B,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;;;oBAjFpCS,YAAS,SAAC;wBACT,QAAQ,EAAE,gBAAgB;wBAC1B,QAAQ,EAAE,w4DAiDX;wBACC,MAAM,EAAE,CAAC,EAAE,CAAC;qBACb;;;gCAGES,YAAS,SAACY,mBAAS;;iCA5DtB;MA0DwC,cAAc;;;;;;AC1DtD;QA4BE,0CACS,WAEA,KAAY;YAFZ,cAAS,GAAT,SAAS;YAET,UAAK,GAAL,KAAK,CAAO;SAChB;;;;;;;;;;;QAML,mDAAQ;;;;;;YAAR,UAAS,OAAyC,EAAE,eAAoB;;;;;;aAQvE;;oBAzCFrB,YAAS,SAAC;wBACT,QAAQ,EAAE,gCAAgC;wBAC1C,QAAQ,EAAE,ybAcX;wBACC,MAAM,EAAE,CAAC,EAAE,CAAC;qBACb;;;;;wBAtBQK,qBAAY;wBAEZ,KAAK,uBA2BTF,SAAM,SAACC,wBAAe;;;;2CAJxBK,YAAS,SAAC,aAAa;;+CA1B1B;;;;;;;;QC8CgDlB,8CAAc;QAI5D,oCACS,eACC;YAFV,YAIE,kBAAM,aAAa,CAAC,SACrB;YAJQ,mBAAa,GAAb,aAAa;YACZ,YAAM,GAAN,MAAM;;;;qCAJmB,IAAI;;SAOtC;;;;;;QAGD,+CAAU;;;;YAAV;;gBACE,IAAM,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,gCAAgC,EAAE;oBACvE,IAAI,EAAE,IAAI,CAAC,KAAK;iBACjB,CAAC,CAAC;gBAEH,aAAa,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,UAAA,MAAM;oBAC1C,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;iBACrB,CAAC,CAAC;aACJ;;oBA5DFS,YAAS,SAAC;wBACT,QAAQ,EAAE,yBAAyB;wBACnC,QAAQ,EAAE,w7BAmCX;wBACC,MAAM,EAAE,CAAC,EAAE,CAAC;qBACb;;;;;wBA3CQ,aAAa;wBAEbO,kBAAS;;;yCAJlB;MA8CgD,cAAc;;;;;;;QCYfhB,6CAAuB;;;;;;qCAEjC,IAAI;;;;;;;QAGhC,8CAAU;;;;;gBACf,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE;oBACnB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;oBAE3B,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;oBAErB,IAAI,CAAC,qBAAqB,EAAE,CAAC;iBAC9B;;;;;;;QAOI,kDAAc;;;;;sBAAC,IAAc;gBAClC,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE;oBAC5C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;;wBACrD,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;wBAEvC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,GAAG,GAAG,CAAC,GAAG,MAAM,EAAE,KAAK,CAAC,EAAE,CAAC,CAAC;qBAC3D;iBACF;gBAED,OAAO,IAAI,CAAC;;;oBAnFfS,YAAS,SAAC;wBACT,QAAQ,EAAE,wBAAwB;wBAClC,QAAQ,EAAE,u3DAkDX;wBACC,MAAM,EAAE,CAAC,+pBAA+pB,CAAC;qBAC1qB;;wCAzDD;MA0D+C,uBAAuB;;;;;;;QCHvBT,6CAAuB;;;;;;wCAE9B,IAAI;;;;oBAtD3CS,YAAS,SAAC;wBACT,QAAQ,EAAE,uBAAuB;wBACjC,QAAQ,EAAE,mwDA+CX;wBACC,MAAM,EAAE,CAAC,8BAA8B,CAAC;qBACzC;;wCAtDD;MAuD+C,uBAAuB;;;;;;;QCR5BT,wCAAc;;;;;;wCAEhB,IAAI;;;;;;;QAGnC,oDAAqB;;;;;gBAC1B,IAAI,IAAI,CAAC,mBAAmB,EAAE,EAAE;oBAC9B,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC;iBAC5B;gBAED,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,eAAe,EAAE;oBAC/B,IAAI,CAAC,KAAK,CAAC,eAAe,GAAG,YAAY,CAAC;iBAC3C;gBAED,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE;oBAC3B,IAAI,CAAC,KAAK,CAAC,WAAW,GAAG,YAAY,CAAC;iBACvC;gBAED,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE;oBAC5B,IAAI,CAAC,KAAK,CAAC,YAAY,GAAG,cAAc,CAAC;iBAC1C;;;oBAhEJS,YAAS,SAAC;wBACT,QAAQ,EAAE,kBAAkB;wBAC5B,QAAQ,EAAE,s8CAuCX;wBACC,MAAM,EAAE,CAAC,EAAE,CAAC;qBACb;;mCA9CD;MA+C0C,cAAc;;;;;;;QCOdT,wCAAuB;;;;;;wCAEzB,IAAI;;;;;;;;QAMnC,6CAAc;;;;;sBAAC,IAAc;gBAClC,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE;oBAC5C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;iBAChE;gBAED,OAAO,IAAI,CAAC;;;oBAhEfS,YAAS,SAAC;wBACT,QAAQ,EAAE,kBAAkB;wBAC5B,QAAQ,EAAE,yrDA8CX;wBACC,MAAM,EAAE,CAAC,sVAAsV,CAAC;qBACjW;;mCArDD;MAsD0C,uBAAuB;;;;;;;QCDzBT,sCAAc;QAIpD,4BACS,eACC;YAFV,YAIE,kBAAM,aAAa,CAAC,SACrB;YAJQ,mBAAa,GAAb,aAAa;YACZ,sBAAgB,GAAhB,gBAAgB;;;;wCAJY,IAAI;;SAOzC;;;;;QAGM,kDAAqB;;;;;gBAC1B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,gBAAgB,CAAC,yBAAyB,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;;;;;;QAI3G,uCAAU;;;;;gBACf,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE;oBACnB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,gBAAgB,CAAC,yBAAyB,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;iBACjH;;;;;;;QAOI,2CAAc;;;;;sBAAC,IAAc;gBAClC,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE;oBAC5C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;oBAEnE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;oBAEvE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;oBAEzE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;iBACxE;gBAED,OAAO,IAAI,CAAC;;;;;;;QAMP,oDAAuB;;;;;sBAAC,QAAa;gBAC1C,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC;;;oBA7FpCS,YAAS,SAAC;wBACT,QAAQ,EAAE,gBAAgB;wBAC1B,QAAQ,EAAE,wwDA2CX;wBACC,MAAM,EAAE,CAAC,+lBAA+lB,CAAC;qBAC1mB;;;;;wBAlDQ,aAAa;wBACb,gBAAgB;;;iCAHzB;MAqDwC,cAAc;;;;;;;QCVTT,2CAAc;QAOzD,iCACS,eACC;YAFV,YAIE,kBAAM,aAAa,CAAC,SACrB;YAJQ,mBAAa,GAAb,aAAa;YACZ,qBAAe,GAAf,eAAe;;SAGxB;;;;;QAGM,4CAAU;;;;;gBACf,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBAErB,IAAI,CAAC,qBAAqB,EAAE,CAAC;;;;;;;;QAQxB,0CAAQ;;;;;;sBAAC,cAAoB,EAAE,QAAkB;gBACtD,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;gBAE3B,IAAI,IAAI,CAAC,cAAc,EAAE,EAAE;oBACzB,IAAI,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,QAAQ,EAAE;wBAClC,IAAI,CAAC,QAAQ,EAAE;4BACb,IAAI,CAAC,OAAO,GAAG,cAAc,IAAI,IAAI,CAAC;yBACvC;wBAED,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;4BACjB,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,UAAU,CAAC,cAAc,CAAC,oBAAoB,EAAE,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC,CAAC;yBAC3H;qBACF;oBAED,IAAI,CAAC,uBAAuB,EAAE,CAAC;iBAChC;gBAED,OAAO,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC;;;;;;QAI9B,mDAAiB;;;;;;gBACtB,IAAM,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC;gBAEpD,IAAI,IAAI,CAAC,gBAAgB,EAAE;;oBACzB,IAAM,aAAa,GAAG,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;oBAE7F,IAAI,aAAa,EAAE;;wBACjB,IAAM,GAAG,GAAG,aAAa,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;wBAE9C,aAAa,CAAC,YAAY,CAAC,KAAK,EAAE,GAAG,CAAC,OAAO,CAAC,WAAW,EAAE,KAAK,GAAG,QAAQ,GAAG,GAAG,CAAC,CAAC,CAAC;qBACrF;iBACF;gBAED,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBAErB,IAAI,CAAC,qBAAqB,EAAE,CAAC;;;oBAnGhCS,YAAS,SAAC;wBACT,QAAQ,EAAE,qBAAqB;wBAC/B,QAAQ,EAAE,+gCAgCX;wBACC,MAAM,EAAE,CAAC,EAAE,CAAC;qBACb;;;;;wBAxCQ,aAAa;wBACb,eAAe;;;;uCA0CrBS,YAAS,SAAC,WAAW;;sCA7CxB;MA2C6C,cAAc;;;;;;AC3C3D;QAsBE,sCACS;YAAA,kBAAa,GAAb,aAAa;SACjB;;;;;;QAKE,uDAAgB;;;;;sBAAC,SAAiB;;gBACvC,IAAI,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,cAAc,CAAC,EAAE,GAAG,SAAS,CAAC;gBAElF,IAAI,YAAY,KAAK,CAAC,EAAE;oBACtB,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,CAAC,MAAM,CAAC;iBACjE;qBAAM,IAAI,YAAY,KAAK,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;oBAChF,YAAY,GAAG,CAAC,CAAC;iBAClB;gBAED,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,cAAc,GAAG,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,EAAE,KAAK,YAAY,GAAA,CAAC,CAAC;;;oBAnChIT,YAAS,SAAC;wBACT,QAAQ,EAAE,2BAA2B;wBACrC,QAAQ,EAAE,6cAaX;wBACC,MAAM,EAAE,CAAC,iuBAAytB,CAAC;qBACpuB;;;;;wBAnBQ,aAAa;;;2CADtB;;;;;;;ACAA;QAwBE,8BACS;YAAA,kBAAa,GAAb,aAAa;SACjB;;;;;;QAKE,4CAAa;;;;;sBAAC,OAAgB;gBACnC,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,cAAc,GAAG,OAAO,CAAC;;;oBA5B7DA,YAAS,SAAC;wBACT,QAAQ,EAAE,kBAAkB;wBAC5B,QAAQ,EAAE,0gBAcX;wBACC,MAAM,EAAE,CAAC,EAAE,CAAC;qBACb;;;;;wBArBQ,aAAa;;;mCADtB;;;;;;;ACAA;QA4BE,oCACS,eACC,iBACA;YAFD,kBAAa,GAAb,aAAa;YACZ,oBAAe,GAAf,eAAe;YACf,sBAAiB,GAAjB,iBAAiB;SACtB;;;;;;QAGL,qDAAgB;;;;YAAhB;gBACE,IAAI,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,CAAC,qBAAqB,KAAK,sBAAsB,CAAC,KAAK,EAAE;oBACpG,IAAI,CAAC,iBAAiB,CAAC,aAAa,EAAE,CAAC;oBAEvC,IAAI,CAAC;wBACH,IAAI,EAAE,IAAI,CAAC,wBAAwB,CAAC,aAAa,CAAC,SAAS;wBAC3D,IAAI,EAAE,SAAS,CAAC,OAAO;wBACvB,iBAAiB,EAAE,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,OAAO,CAAC,EAAE;qBAChE,CAAC,CAAC;iBACJ;aACF;;oBAvCFA,YAAS,SAAC;wBACT,QAAQ,EAAE,wBAAwB;wBAClC,QAAQ,EAAE,0lBAaX;wBACC,MAAM,EAAE,CAAC,6NAA6N,CAAC;qBACxO;;;;;wBAtBQ,aAAa;wBACb,eAAe;wBAFmBsB,oBAAiB;;;;+CA0BzDb,YAAS,SAAC,mBAAmB;;yCA1BhC;;;;;;;ACAA;;;;oBAECT,YAAS,SAAC;wBACT,QAAQ,EAAE,wBAAwB;wBAClC,QAAQ,EAAE,yPAQX;wBACC,MAAM,EAAE,CAAC,EAAE,CAAC;qBACb;;;uCAGEC,QAAK,SAAC,kBAAkB;;yCAjB3B;;;;;;;;QCgUE,8BACS,eACC,qBACA,qBACA,kBACA,kBACA,iBACA,mBACA,eACY,KAAqB;YARlC,kBAAa,GAAb,aAAa;YACZ,wBAAmB,GAAnB,mBAAmB;YACnB,wBAAmB,GAAnB,mBAAmB;YACnB,qBAAgB,GAAhB,gBAAgB;YAChB,qBAAgB,GAAhB,gBAAgB;YAChB,oBAAe,GAAf,eAAe;YACf,sBAAiB,GAAjB,iBAAiB;YACjB,kBAAa,GAAb,aAAa;YACD,UAAK,GAAL,KAAK,CAAgB;;;;+BAzFnB,IAAIF,eAAY,EAAO;;;;iCAGrB,IAAIA,eAAY,EAAO;;;;mCAGrB,IAAIA,eAAY,EAAO;;;;kCAGxB,IAAIA,eAAY,EAAO;;;;uCAGlB,IAAIA,eAAY,EAAO;;;;sCAGxB,IAAIA,eAAY,EAAO;;;;mCAyDN,IAAI,KAAK,EAAkB;;;;iCAGrC,IAAI,aAAa,EAAE;;;;yCAGjB,IAAI;SAYvC;;;;QAEL,uCAAQ;;;YAAR;gBACE,IAAI,CAAC,aAAa,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC;gBAE1D,IAAI,OAAO,IAAI,CAAC,oBAAoB,KAAK,QAAQ,EAAE;oBACjD,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;iBACnE;gBAED,IAAI,CAAC,aAAa,CAAC,oBAAoB,GAAG,IAAI,CAAC,oBAAoB,CAAC;gBAEpE,IAAI,CAAC,QAAQ,EAAE,CAAC;aACjB;;;;;;QAKM,wCAAS;;;;;sBAAC,IAAY;;oBAC3B,KAA6B,IAAA,KAAAS,SAAA,IAAI,CAAC,eAAe,CAAA,gBAAA;wBAA5C,IAAM,cAAc,WAAA;wBACvB,cAAc,CAAC,UAAU,EAAE,CAAC;qBAC7B;;;;;;;;;;;;;;;gBAED,IAAI,CAAC,aAAa,CAAC,gBAAgB,GAAG,IAAI,KAAK,EAAc,CAAC;gBAE9D,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;;;;;;;;QAMnB,uCAAQ;;;;;sBAAC,IAAY;;;;oBAE1B,KAAuC,IAAA,KAAAA,SAAA,IAAI,CAAC,wBAAwB,CAAC,OAAO,EAAE,CAAA,gBAAA;wBAAzE,IAAM,wBAAwB,WAAA;wBACjC,wBAAwB,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;qBAC/C;;;;;;;;;;;;;;;gBAED,IAAI,IAAI,CAAC,WAAW,EAAE,EAAE;oBACtB,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;;oBAElC,IAAM,QAAM,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;oBAErC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,QAAM,CAAC,CAAC;oBAElC,OAAO,CAAC,GAAG,CAAC,QAAM,CAAC,CAAC;;oBAEpB,IAAM,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAClD,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,EACjC,IAAI,CAAC,KAAK,EACV,IAAI,CAAC,aAAa,CAAC,oBAAoB,CACxC,CAAC;oBAEF,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,QAAQ,EAAE,QAAM,CAAC,CAAC,SAAS,CAAC,UAAA,QAAQ;wBAChE,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;wBAEtB,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,iBAAiB,CAAC,IAAI,EAAE,QAAQ,EAAE,QAAM,CAAC,CAAC,CAAC;wBAExE,KAAI,CAAC,qBAAqB,GAAG,KAAK,CAAC;wBAEnC,IAAI,KAAI,CAAC,aAAa,CAAC,aAAa,CAAC,iBAAiB,EAAE;4BACtD,IAAI,CAAC;gCACH,KAAK,EAAE,KAAI,CAAC,aAAa,CAAC,SAAS,CAAC,KAAI,CAAC,aAAa,CAAC,aAAa,CAAC,uBAAuB,CAAC;gCAC7F,IAAI,EAAE,KAAI,CAAC,aAAa,CAAC,SAAS,CAAC,KAAI,CAAC,aAAa,CAAC,aAAa,CAAC,yBAAyB,CAAC;gCAC9F,IAAI,EAAE,SAAS,CAAC,OAAO;gCACvB,iBAAiB,EAAE,KAAI,CAAC,eAAe,CAAC,YAAY,CAAC,OAAO,CAAC,EAAE;6BAChE,CAAC,CAAC;yBACJ;qBACF,EAAE,UAAA,SAAS;wBACV,OAAO,CAAC,KAAK,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;wBAEvC,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,iBAAiB,CAAC,KAAK,EAAE,SAAS,EAAE,QAAM,CAAC,CAAC,CAAC;wBAE1E,KAAI,CAAC,qBAAqB,GAAG,KAAK,CAAC;wBAEnC,IAAI,KAAI,CAAC,aAAa,CAAC,aAAa,CAAC,iBAAiB,EAAE;4BACtD,IAAI,CAAC;gCACH,KAAK,EAAE,KAAI,CAAC,aAAa,CAAC,SAAS,CAAC,KAAI,CAAC,aAAa,CAAC,aAAa,CAAC,qBAAqB,CAAC;gCAC3F,IAAI,EAAE,KAAI,CAAC,aAAa,CAAC,SAAS,CAAC,KAAI,CAAC,aAAa,CAAC,aAAa,CAAC,uBAAuB,CAAC;gCAC5F,IAAI,EAAE,SAAS,CAAC,KAAK;gCACrB,iBAAiB,EAAE,KAAI,CAAC,eAAe,CAAC,YAAY,CAAC,OAAO,CAAC,EAAE;6BAChE,CAAC,CAAC;yBACJ;qBACF,CAAC,CAAC;iBACJ;;;;;;;;QAMI,yCAAU;;;;;sBAAC,IAAY;;gBAC5B,IAAI,CAAC,YAAY,EAAE,CAAC;gBAEpB,IAAI,IAAI,CAAC,WAAW,EAAE,EAAE;oBACtB,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;;oBAElC,IAAM,QAAM,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;oBAErC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,QAAM,CAAC,CAAC;oBAEtC,OAAO,CAAC,GAAG,CAAC,QAAM,CAAC,CAAC;;oBAEpB,IAAM,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAClD,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,MAAM,EACnC,IAAI,CAAC,KAAK,EACV,IAAI,CAAC,aAAa,CAAC,oBAAoB,CACxC,CAAC;oBAEF,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,QAAQ,EAAE,QAAM,CAAC,CAAC,SAAS,CAAC,UAAA,QAAQ;wBAChE,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;wBAEtB,KAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,iBAAiB,CAAC,IAAI,EAAE,QAAQ,EAAE,QAAM,CAAC,CAAC,CAAC;wBAE5E,KAAI,CAAC,qBAAqB,GAAG,KAAK,CAAC;wBAEnC,IAAI,KAAI,CAAC,aAAa,CAAC,aAAa,CAAC,iBAAiB,EAAE;4BACtD,IAAI,CAAC;gCACH,KAAK,EAAE,KAAI,CAAC,aAAa,CAAC,SAAS,CAAC,KAAI,CAAC,aAAa,CAAC,aAAa,CAAC,yBAAyB,CAAC;gCAC/F,IAAI,EAAE,KAAI,CAAC,aAAa,CAAC,SAAS,CAAC,KAAI,CAAC,aAAa,CAAC,aAAa,CAAC,2BAA2B,CAAC;gCAChG,IAAI,EAAE,SAAS,CAAC,OAAO;gCACvB,iBAAiB,EAAE,KAAI,CAAC,eAAe,CAAC,YAAY,CAAC,OAAO,CAAC,EAAE;6BAChE,CAAC,CAAC;yBACJ;qBACF,EAAE,UAAA,SAAS;wBACV,OAAO,CAAC,KAAK,CAAC,cAAc,EAAE,SAAS,CAAC,CAAC;wBAEzC,KAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,iBAAiB,CAAC,KAAK,EAAE,SAAS,EAAE,QAAM,CAAC,CAAC,CAAC;wBAE9E,KAAI,CAAC,qBAAqB,GAAG,KAAK,CAAC;wBAEnC,IAAI,KAAI,CAAC,aAAa,CAAC,aAAa,CAAC,iBAAiB,EAAE;4BACtD,IAAI,CAAC;gCACH,KAAK,EAAE,KAAI,CAAC,aAAa,CAAC,SAAS,CAAC,KAAI,CAAC,aAAa,CAAC,aAAa,CAAC,uBAAuB,CAAC;gCAC7F,IAAI,EAAE,KAAI,CAAC,aAAa,CAAC,SAAS,CAAC,KAAI,CAAC,aAAa,CAAC,aAAa,CAAC,yBAAyB,CAAC;gCAC9F,IAAI,EAAE,SAAS,CAAC,KAAK;gCACrB,iBAAiB,EAAE,KAAI,CAAC,eAAe,CAAC,YAAY,CAAC,OAAO,CAAC,EAAE;6BAChE,CAAC,CAAC;yBACJ;qBACF,CAAC,CAAC;iBACJ;qBAAM;oBACL,IAAI,CAAC,0BAA0B,CAAC,gBAAgB,EAAE,CAAC;iBACpD;;;;;;QAII,2CAAY;;;;;;oBACjB,KAA6B,IAAA,KAAAA,SAAA,IAAI,CAAC,eAAe,CAAA,gBAAA;wBAA5C,IAAM,cAAc,WAAA;wBACvB,IAAI,CAAC,0BAA0B,CAAC,cAAc,CAAC,CAAC;qBACjD;;;;;;;;;;;;;;;;;;;;;QAMI,0CAAW;;;;;gBAChB,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,gBAAgB,IAAI,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,MAAM,KAAK,CAAC,CAAC;;;;;;QAM3F,6CAAc;;;;;gBACnB,IAAI,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,QAAQ,KAAK,SAAS,CAAC,QAAQ,EAAE;oBAC/D,OAAO,IAAI,CAAC,WAAW,EAAE,CAAC;iBAC3B;qBAAM;oBACL,OAAO,IAAI,CAAC,aAAa,EAAE,CAAC;iBAC7B;;;;;;QAMI,4CAAa;;;;;;gBAClB,IAAM,MAAM,GAAG,EAAE,CAAC;;oBAElB,KAA6B,IAAA,KAAAA,SAAA,IAAI,CAAC,eAAe,CAAA,gBAAA;wBAA5C,IAAM,cAAc,WAAA;wBACvB,IAAI,cAAc,CAAC,KAAK,CAAC,IAAI,EAAE;4BAC7B,MAAM,CAAC,cAAc,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,cAAc,CAAC,QAAQ,EAAE,CAAC;yBAC/D;qBACF;;;;;;;;;;;;;;;gBAED,OAAO,MAAM,CAAC;;;;;;;QAMT,0CAAW;;;;;;gBAChB,IAAI,IAAI,GAAG,IAAI,QAAQ,EAAE,CAAC;;oBAE1B,KAA6B,IAAA,KAAAA,SAAA,IAAI,CAAC,eAAe,CAAA,gBAAA;wBAA5C,IAAM,cAAc,WAAA;wBACvB,IAAI,GAAG,cAAc,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;qBAC5C;;;;;;;;;;;;;;;gBAED,OAAO,IAAI,CAAC;;;;;;;;QAOP,2CAAY;;;;;sBAAC,IAAY;gBAC9B,OAAO,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,UAAA,EAAE,IAAI,OAAA,EAAE,CAAC,KAAK,CAAC,IAAI,KAAK,IAAI,GAAA,CAAC,CAAC;;;;;;;QAO1D,6CAAc;;;;;sBAAC,MAAW;gBAC/B,OAAO,CAAC,MAAM,IAAI,MAAM,CAAC,MAAM,MAAM,IAAI,CAAC,aAAa,CAAC,cAAc;oBACpE,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,WAAW;oBAC7C,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,WAAW,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CACxE,CAAC;;;;;;;QAMG,0CAAW;;;;;sBAAC,QAAQ;;oBACzB,KAA4B,IAAA,KAAAA,SAAA,QAAQ,CAAC,MAAM,CAAA,gBAAA;wBAAtC,IAAM,aAAa,WAAA;wBACtB,IAAI,aAAa,CAAC,KAAK,EAAE;;4BACvB,IAAM,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;4BAE7D,IAAI,cAAc,EAAE;gCAClB,cAAc,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;6BAC3C;yBACF;qBACF;;;;;;;;;;;;;;;;;;;;;QAIW,uCAAQ;;;;;;;;;;oCACpB,qBAAM,IAAI,CAAC,iBAAiB,EAAE,EAAA;;gCAA9B,SAA8B,CAAC;gCAGzB,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,MAAM,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,SAAS,KAAK,UAAU,CAAC,QAAQ,GAAA,CAAC,CAAC;;oCAEpG,KAAoB,eAAAA,SAAA,UAAU,CAAA;wCAAnB,KAAK;wCACd,IAAI,CAAC,6BAA6B,CAAC,KAAK,CAAC,CAAC;qCAC3C;;;;;;;;;;;;;;;gCAED,IAAI,CAAC,iBAAiB,CAAC,aAAa,EAAE,CAAC;gCAEvC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAChD,IAAI,CAAC,oBAAoB,CAAC,OAAO,EAAE,EACnC,IAAI,CAAC,qBAAqB,CAAC,OAAO,EAAE,EACpC,IAAI,CAAC,uBAAuB,CAAC,OAAO,EAAE,EACtC,IAAI,CAAC,4BAA4B,CAAC,OAAO,EAAE,EAC3C,IAAI,CAAC,uBAAuB,CAAC,OAAO,EAAE,EACtC,IAAI,CAAC,0BAA0B,CAAC,OAAO,EAAE,EACzC,IAAI,CAAC,0BAA0B,CAAC,OAAO,EAAE,EACzC,IAAI,CAAC,oBAAoB,CAAC,OAAO,EAAE,EACnC,IAAI,CAAC,qBAAqB,CAAC,OAAO,EAAE,EACpC,IAAI,CAAC,mBAAmB,CAAC,OAAO,EAAE,EAClC,IAAI,CAAC,mBAAmB,CAAC,OAAO,EAAE,EAClC,IAAI,CAAC,uBAAuB,CAAC,OAAO,EAAE,EACtC,IAAI,CAAC,yBAAyB,CAAC,OAAO,EAAE,EACxC,IAAI,CAAC,2BAA2B,CAAC,OAAO,EAAE,EAC1C,IAAI,CAAC,wBAAwB,CAAC,OAAO,EAAE,EACvC,IAAI,CAAC,qBAAqB,CAAC,OAAO,EAAE,CACrC,CAAC;gCAEF,IAAI,CAAC,qBAAqB,EAAE,CAAC;gCAE7B,IAAI,CAAC,YAAY,EAAE,CAAC;;oCAEpB,KAA6B,KAAAA,SAAA,IAAI,CAAC,uBAAuB,CAAC,OAAO,EAAE,CAAA;wCAAxD,cAAc;wCACvB,cAAc,CAAC,mBAAmB,EAAE,CAAC;qCACtC;;;;;;;;;;;;;;;gCAED,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,SAAS,CAAC,UAAA,QAAQ;oCACnD,IAAI,KAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,QAAQ,KAAK,SAAS,CAAC,OAAO,EAAE;wCAC9D,KAAI,CAAC,YAAY,EAAE,CAAC;qCACrB;;wCAED,KAA6B,IAAA,KAAAA,SAAA,KAAI,CAAC,wBAAwB,CAAC,OAAO,EAAE,CAAA,gBAAA;4CAA/D,IAAM,cAAc,WAAA;4CACvB,cAAc,CAAC,iBAAiB,EAAE,CAAC;yCACpC;;;;;;;;;;;;;;;;iCACF,CAAC,CAAC;;;;;;;;;;QAIS,gDAAiB;;;;;;;;;;gCAC7B,KAAA,IAAI,CAAA;gCAAiB,qBAAM,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,IAAI,CAAC,sBAAsB,CAAC,EAAA;;gCAAtF,GAAK,aAAa,GAAG,SAAiE,CAAC;qCAGnF,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO;oCAA3B,wBAA2B;qCAEzB,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,iBAAiB;oCAA7C,wBAA6C;gCACtC,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,iBAAiB,CAAC,MAAM,GAAG,CAAC;;;sCAAE,CAAC,IAAI,CAAC,CAAA;;gCAErE,mBAAmB,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;gCAEpD,qBAAM,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,mBAAmB,CAAC,EAAA;;gCAA5E,gBAAgB,GAAG,SAAyD;gCAElF,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,gBAAgB,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;;;gCANnB,CAAC,EAAE,CAAA;;oCAUlE,qBAAM,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,eAAe,CAAC,EAAA;;gCAA7F,SAAS,GAAG,SAAiF;gCAEnG,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE;oCACtB,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,eAAe,EAAE,SAAS,CAAC,CAAC;iCACvF;gCAED,IAAI,CAAC,aAAa,CAAC,YAAY,GAAG,IAAI,KAAK,EAAS,CAAC;oDAG1C,SAAS;oCAClB,IAAI,OAAK,aAAa,CAAC,MAAM,CAAC,cAAc,CAAC,SAAS,CAAC,EAAE;;wCACvD,IAAM,WAAW,GAAG,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,IAAI,KAAK,SAAS,GAAA,CAAC,CAAC;wCAErE,IAAI,WAAW,EAAE;;4CACf,IAAM,WAAW,GAAG,OAAK,gBAAgB,CAAC,cAAc,CAAC,WAAW,EAAE,OAAK,aAAa,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;4CAE5G,OAAK,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;yCACnD;6CAAM;4CACL,OAAO,CAAC,IAAI,CAAC,eAAa,SAAS,2CAAwC,CAAC,CAAC;yCAC9E;qCACF;;;;gCAXH,KAAW,SAAS,IAAI,IAAI,CAAC,aAAa,CAAC,MAAM;4CAAtC,SAAS;iCAYnB;gCAED,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,sBAAsB,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;;;gCAGjF,IAAI,IAAI,CAAC,aAAa,CAAC,QAAQ,IAAI,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;oCACzE,IAAI,CAAC,aAAa,CAAC,cAAc,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;iCACpE;gCAED,IAAI,CAAC,aAAa,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;;;;;;;;;;QAIhD,oDAAqB;;;;;;oBAC3B,KAA6B,IAAA,KAAAA,SAAA,IAAI,CAAC,eAAe,CAAA,gBAAA;wBAA5C,IAAM,cAAc,WAAA;wBACvB,cAAc,CAAC,qBAAqB,EAAE,CAAC;qBACxC;;;;;;;;;;;;;;;;;;;;;;;QAOK,4DAA6B;;;;;;sBAAC,KAAY;;gBAEhD,IAAI,KAAK,CAAC,OAAO,EAAE;oBACjB,KAAK,CAAC,YAAY,GAAG,IAAI,CAAC,gBAAgB,CAAC,yBAAyB,CAAC,KAAK,CAAC,OAAO,EAAE,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;iBAC9G;gBAED,IAAI,KAAK,CAAC,OAAO,EAAE;oBACjB,KAAK,CAAC,YAAY,GAAG,IAAI,CAAC,gBAAgB,CAAC,yBAAyB,CAAC,KAAK,CAAC,OAAO,EAAE,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;iBAC9G;gBAED,IAAI,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE;oBACxB,KAAK,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,gBAAgB,CAAC,yBAAyB,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;iBAC1H;gBAED,IAAI,KAAK,CAAC,WAAW,EAAE;oBACrB,KAAK,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC,yBAAyB,CAAC,KAAK,CAAC,WAAW,EAAE,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC;iBAC1H;gBAED,IAAI,KAAK,CAAC,YAAY,IAAI,KAAK,CAAC,YAAY,EAAE;oBAC5C,KAAK,CAAC,SAAS,GAAG,KAAK,CAAC,YAAY,CAAC,WAAW,EAAE,GAAG,GAAG,GAAG,KAAK,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;iBAC7F;;;;;;QAIK,2CAAY;;;;;;gBAClB,IAAI,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,EAAE;;oBACpC,IAAM,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAClD,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,EAChC,IAAI,CAAC,KAAK,EACV,IAAI,CAAC,aAAa,CAAC,oBAAoB,CACxC,CAAC;oBAEF,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,UAAA,QAAQ;wBACvD,KAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;wBAE3B,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;wBAElC,KAAI,CAAC,qBAAqB,GAAG,KAAK,CAAC;qBACpC,EAAE,UAAA,SAAS;wBACV,OAAO,CAAC,KAAK,CAAC,gBAAgB,EAAE,SAAS,CAAC,CAAC;wBAE3C,KAAI,CAAC,qBAAqB,GAAG,KAAK,CAAC;wBAEnC,IAAI,KAAI,CAAC,aAAa,CAAC,aAAa,CAAC,iBAAiB,EAAE;4BACtD,IAAI,CAAC;gCACH,KAAK,EAAE,KAAI,CAAC,aAAa,CAAC,SAAS,CAAC,KAAI,CAAC,aAAa,CAAC,aAAa,CAAC,oBAAoB,CAAC;gCAC1F,IAAI,EAAE,KAAI,CAAC,aAAa,CAAC,SAAS,CAAC,KAAI,CAAC,aAAa,CAAC,aAAa,CAAC,sBAAsB,CAAC;gCAC3F,IAAI,EAAE,SAAS,CAAC,KAAK;gCACrB,iBAAiB,EAAE,KAAI,CAAC,eAAe,CAAC,YAAY,CAAC,OAAO,CAAC,EAAE;6BAChE,CAAC,CAAC;yBACJ;qBACF,CAAC,CAAC;iBACJ;qBAAM;oBACL,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oBAE9B,IAAI,CAAC,qBAAqB,GAAG,KAAK,CAAC;iBACpC;;;;;;;QAOK,yDAA0B;;;;;sBAAC,cAA8B;;gBAC/D,IAAI,qBAAqB,GAAG,IAAI,KAAK,EAAc,CAAC;gBAEpD,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,MAAM,EAAE;oBAChC,qBAAqB,GAAG,cAAc,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;iBAC7D;gBAED,OAAO,qBAAqB,CAAC;;;;;;;;;QAQxB,kDAAmB;;;;;;;sBAAC,SAAiB,EAAE,cAAmB,EAAE,MAAW;gBAC5E,IAAI,MAAM,CAAC,aAAa,EAAE;;oBACxB,IAAM,OAAK,GAAG,MAAM,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;;oBAE9C,IAAM,0BAA0B,GAAG,IAAI,CAAC,eAAe,CAAC,OAAK,CAAC,CAAC;oBAE/D,IAAI,0BAA0B,EAAE;wBAC9B,0BAA0B,CAAC,IAAI,CAAC,eAAe,EAAE,MAAM,CAAC,CAAC;qBAC1D;iBACF;;;oBAltBJR,YAAS,SAAC;wBACT,QAAQ,EAAE,kBAAkB;wBAC5B,QAAQ,EAAE,2oPAwLX;wBACC,MAAM,EAAE,CAAC,ymBAAymB,CAAC;wBACnnB,SAAS,EAAE,CAACM,kBAAa,EAAE,aAAa,EAAE,gBAAgB,CAAC;;wBAE3D,aAAa,EAAEiB,oBAAiB,CAAC,IAAI;qBACtC;;;;;wBAzNQ,aAAa;wBAJb,mBAAmB;wBACnB,mBAAmB;wBACnB,gBAAgB;wBAJhBzB,qBAAgB;wBAKhB,eAAe;wBARtBwB,oBAAiB;wBAGQhB,kBAAa;wBAC/BK,qBAAc,uBAmUlBC,WAAQ;;;;6CAlGVX,QAAK,SAAC,wBAAwB;sCAG9BA,QAAK,SAAC,iBAAiB;2CAGvBA,QAAK,SAAC,sBAAsB;kCAG5BC,SAAM;oCAGNA,SAAM;sCAGNA,SAAM;qCAGNA,SAAM;0CAGNA,SAAM;yCAGNA,SAAM;uCAGNO,YAAS,SAAC,WAAW;iDAGrBA,YAAS,SAAC,0BAA0B;2CAGpCe,eAAY,SAAC,mBAAmB;4CAGhCA,eAAY,SAAC,oBAAoB;8CAGjCA,eAAY,SAAC,sBAAsB;mDAGnCA,eAAY,SAAC,2BAA2B;8CAGxCA,eAAY,SAAC,sBAAsB;iDAGnCA,eAAY,SAAC,yBAAyB;iDAGtCA,eAAY,SAAC,yBAAyB;2CAGtCA,eAAY,SAAC,mBAAmB;4CAGhCA,eAAY,SAAC,oBAAoB;0CAGjCA,eAAY,SAAC,kBAAkB;0CAG/BA,eAAY,SAAC,kBAAkB;8CAG/BA,eAAY,SAAC,sBAAsB;gDAGnCA,eAAY,SAAC,wBAAwB;kDAGrCA,eAAY,SAAC,0BAA0B;+CAGvCA,eAAY,SAAC,uBAAuB;4CAGpCA,eAAY,SAAC,oBAAoB;;mCArTpC;;;;;;;ACAA;;;;oBAiECC,WAAQ,SAAC;wBACR,YAAY,EAAE;4BACZ,uBAAuB;4BACvB,oBAAoB;4BACpB,eAAe;4BACf,cAAc;4BACd,cAAc;4BACd,uBAAuB;4BACvB,mBAAmB;4BACnB,oBAAoB;4BACpB,sBAAsB;4BACtB,2BAA2B;4BAC3B,sBAAsB;4BACtB,yBAAyB;4BACzB,yBAAyB;4BACzB,mBAAmB;4BACnB,oBAAoB;4BACpB,kBAAkB;4BAClB,kBAAkB;4BAClB,sBAAsB;4BACtB,wBAAwB;4BACxB,uBAAuB;4BACvB,kBAAkB;4BAClB,0BAA0B;4BAC1B,0BAA0B;4BAC1B,oBAAoB;4BACpB,oBAAoB;4BACpB,4BAA4B;4BAC5B,0BAA0B;4BAC1B,0BAA0B;4BAC1B,gCAAgC;4BAChC,oBAAoB;yBACrB;wBACD,OAAO,EAAE;4BACPC,mBAAY;4BACZC,6BAAa;4BACbC,iBAAW;4BACXC,kCAAuB;4BACvBC,2BAAgB;4BAChBC,yBAAe;4BACfC,uBAAc;4BACdC,uBAAc;4BACdC,6BAAiB;4BACjBC,2BAAgB;4BAChBC,mBAAY;4BACZC,yBAAe;4BACfC,iBAAW;4BACXC,uBAAc;4BACdC,6BAAiB;4BACjBC,wBAAe;4BACfC,yBAAgB;4BAChBC,uBAAc;4BACdC,0BAAiB;4BACjBC,wBAAe;4BACfC,8BAAqB;4BACrBC,2BAAkB;4BAClBC,sBAAa;4BACbC,wBAAe;4BACfC,gCAAkB;4BAClBC,mBAAY;4BACZC,4CAAqB;4BACrBC,gCAAe,CAAC,OAAO,EAAE;4BACzBC,qBAAS,CAAC,OAAO,EAAE;4BACnBC,oBAAe,CAAC,OAAO,CAAC;gCACtB,MAAM,EAAE;oCACN,OAAO,EAAEC,oBAAe;oCACxB,UAAU,EAAE,iBAAiB;oCAC7B,IAAI,EAAE,CAAC3D,aAAU,CAAC;iCACnB;6BACF,CAAC;4BACF4D,kBAAa,CAAC,OAAO,CAAC;gCACpB,MAAM,EAAE,yCAAyC;gCACjD,SAAS,EAAE,CAAC,QAAQ,CAAC;gCACrB,MAAM,EAAE,IAAI;gCACZ,QAAQ,EAAE,IAAI;6BACf,CAAC;yBACH;wBACD,eAAe,EAAE;4BACf,gCAAgC;4BAChC,uBAAuB;4BACvB,oBAAoB;yBACrB;wBACD,OAAO,EAAE;4BACP,uBAAuB;4BACvB,oBAAoB;4BACpB,eAAe;4BACf,cAAc;4BACd,cAAc;4BACd,uBAAuB;4BACvB,mBAAmB;4BACnB,oBAAoB;4BACpB,sBAAsB;4BACtB,2BAA2B;4BAC3B,sBAAsB;4BACtB,yBAAyB;4BACzB,yBAAyB;4BACzB,mBAAmB;4BACnB,oBAAoB;4BACpB,kBAAkB;4BAClB,kBAAkB;4BAClB,sBAAsB;4BACtB,wBAAwB;4BACxB,uBAAuB;4BACvB,kBAAkB;4BAClB,0BAA0B;4BAC1B,0BAA0B;4BAC1B,oBAAoB;4BACpB,oBAAoB;4BACpB,4BAA4B;4BAC5B,0BAA0B;4BAC1B,0BAA0B;4BAC1B,gCAAgC;4BAChC,oBAAoB;yBACrB;qBACF;;+BAnLD;;;;;;AAsLA,+BAAkC,IAAgB;QAChD,OAAO,IAAIC,8BAAmB,CAAC,IAAI,CAAC,CAAC;KACtC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}
