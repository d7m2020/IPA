!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@ng-bootstrap/ng-bootstrap"),require("file-saver"),require("xlsx"),require("@angular/common/http"),require("@ngx-translate/core"),require("@angular/material"),require("@angular/forms"),require("@angular/router"),require("@angular/common"),require("primeng/fileupload"),require("ng2-img-cropper"),require("@agm/core"),require("primeng/inputmask"),require("sweetalert2"),require("ng-recaptcha/recaptcha/recaptcha-common.module"),require("ng-recaptcha/recaptcha/recaptcha.module"),require("@angular/platform-browser"),require("@angular/platform-browser/animations"),require("@angular/flex-layout"),require("@ngx-translate/http-loader"),require("primeng/inputtext"),require("primeng/calendar"),require("primeng/checkbox"),require("primeng/radiobutton"),require("primeng/dropdown"),require("primeng/multiselect"),require("primeng/chips"),require("primeng/editor"),require("primeng/rating"),require("@agm/core/core.module")):"function"==typeof define&&define.amd?define("netways-lib",["exports","@angular/core","@ng-bootstrap/ng-bootstrap","file-saver","xlsx","@angular/common/http","@ngx-translate/core","@angular/material","@angular/forms","@angular/router","@angular/common","primeng/fileupload","ng2-img-cropper","@agm/core","primeng/inputmask","sweetalert2","ng-recaptcha/recaptcha/recaptcha-common.module","ng-recaptcha/recaptcha/recaptcha.module","@angular/platform-browser","@angular/platform-browser/animations","@angular/flex-layout","@ngx-translate/http-loader","primeng/inputtext","primeng/calendar","primeng/checkbox","primeng/radiobutton","primeng/dropdown","primeng/multiselect","primeng/chips","primeng/editor","primeng/rating","@agm/core/core.module"],t):t(e["netways-lib"]={},e.ng.core,null,null,null,e.ng.common.http,null,e.ng.material,e.ng.forms,e.ng.router,e.ng.common,null,null,null,null,null,null,null,e.ng.platformBrowser,e.ng.platformBrowser.animations,e.ng["flex-layout"],null,null,null,null,null,null,null,null,null,null,null)}(this,function(e,d,t,r,o,i,n,a,l,s,c,p,u,f,m,g,h,v,y,b,w,x,C,S,k,F,I,D,M,T,V,E){"use strict";g=g&&g.hasOwnProperty("default")?g["default"]:g;var P=function(){function e(){}return e.decorators=[{type:d.Injectable,args:[{providedIn:"root"}]}],e.ctorParameters=function(){return[]},e.ngInjectableDef=d.defineInjectable({factory:function(){return new e},token:e,providedIn:"root"}),e}(),R=function(e,t){return(R=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)};function A(e,t){function n(){this.constructor=e}R(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}function q(t,o,l,s){return new(l||(l=Promise))(function(e,n){function i(e){try{r(s.next(e))}catch(t){n(t)}}function a(e){try{r(s["throw"](e))}catch(t){n(t)}}function r(t){t.done?e(t.value):new l(function(e){e(t.value)}).then(i,a)}r((s=s.apply(t,o||[])).next())})}function O(i,a){var r,o,l,e,s={label:0,sent:function(){if(1&l[0])throw l[1];return l[1]},trys:[],ops:[]};return e={next:t(0),"throw":t(1),"return":t(2)},"function"==typeof Symbol&&(e[Symbol.iterator]=function(){return this}),e;function t(t){return function(e){return function n(e){if(r)throw new TypeError("Generator is already executing.");for(;s;)try{if(r=1,o&&(l=2&e[0]?o["return"]:e[0]?o["throw"]||((l=o["return"])&&l.call(o),0):o.next)&&!(l=l.call(o,e[1])).done)return l;switch(o=0,l&&(e=[2&e[0],l.value]),e[0]){case 0:case 1:l=e;break;case 4:return s.label++,{value:e[1],done:!1};case 5:s.label++,o=e[1],e=[0];continue;case 7:e=s.ops.pop(),s.trys.pop();continue;default:if(!(l=0<(l=s.trys).length&&l[l.length-1])&&(6===e[0]||2===e[0])){s=0;continue}if(3===e[0]&&(!l||e[1]>l[0]&&e[1]<l[3])){s.label=e[1];break}if(6===e[0]&&s.label<l[1]){s.label=l[1],l=e;break}if(l&&s.label<l[2]){s.label=l[2],s.ops.push(e);break}l[2]&&s.ops.pop(),s.trys.pop();continue}e=a.call(i,s)}catch(t){e=[6,t],o=0}finally{r=l=0}if(5&e[0])throw e[1];return{value:e[0]?e[1]:void 0,done:!0}}([t,e])}}}function L(e){var t="function"==typeof Symbol&&e[Symbol.iterator],n=0;return t?t.call(e):{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}}}var U={weekdays:["إث","ثل","أر","خم","جم","سب","أح"],months:["محرم","صفر","ربيع الأول","ربيع الآخر","جمادى الأولى","جمادى الآخرة","رجب","شعبان","رمضان","شوال","ذو القعدة","ذو الحجة"]},H=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return A(t,e),t.prototype.getWeekdayShortName=function(e){return U.weekdays[e-1]},t.prototype.getMonthShortName=function(e){return U.months[e-1]},t.prototype.getMonthFullName=function(e){return this.getMonthShortName(e)},t.prototype.getDayAriaLabel=function(e){return e.day+"-"+e.month+"-"+e.year},t.decorators=[{type:d.Injectable,args:[{providedIn:"root"}]}],t.ngInjectableDef=d.defineInjectable({factory:function(){return new t},token:t,providedIn:"root"}),t}(t.NgbDatepickerI18n),j=function(){function e(){}return e.prototype.exportAsExcel=function(e,t,n,i){void 0===n&&(n=!0),void 0===i&&(i=!1);var a=o.utils.json_to_sheet(e,{skipHeader:i}),r=o.utils.book_new();r.Workbook||(r.Workbook={}),r.Workbook.Views||(r.Workbook.Views=[]),r.Workbook.Views[0]||(r.Workbook.Views[0]={}),r.Workbook.Views[0].RTL=n,o.utils.book_append_sheet(r,a,"data"),o.writeFile(r,t+"_"+(new Date).getTime()+".xlsx")},e.prototype.exportAsPdf=function(e,i,a,r){var o=this;void 0===a&&(a="A4"),void 0===r&&(r=[0,0]),e&&html2canvas(e).then(function(e){var t=e.toDataURL(),n={pageSize:a,pageMargins:r,content:[{image:t}]};pdfMake.createPdf(n).getBlob(function(e){o.promptFileSave(e,"application/pdf",i,".pdf")})})},e.prototype.promptFileSave=function(e,t,n,i){var a=new Blob([e],{type:t});r.saveAs(a,n+"_"+(new Date).getTime()+i)},e.decorators=[{type:d.Injectable,args:[{providedIn:"root"}]}],e.ctorParameters=function(){return[]},e.ngInjectableDef=d.defineInjectable({factory:function(){return new e},token:e,providedIn:"root"}),e}(),N=function(){function e(e){this.httpClient=e}return e.prototype.get=function(e){var t=new i.HttpHeaders;return this.httpClient.get(e,{headers:t})},e.prototype.post=function(e,t){var n=new i.HttpHeaders;return this.httpClient.post(e,t,{headers:n})},e.prototype.put=function(e,t){var n=new i.HttpHeaders;return this.httpClient.put(e,t,{headers:n})},e.decorators=[{type:d.Injectable,args:[{providedIn:"root"}]}],e.ctorParameters=function(){return[{type:i.HttpClient}]},e.ngInjectableDef=d.defineInjectable({factory:function(){return new e(d.inject(i.HttpClient))},token:e,providedIn:"root"}),e}(),B=function(){function e(){}return e.prototype.doesKeyExist=function(e){return null!=localStorage.getItem(e)},e.prototype.save=function(e,t){t=JSON.stringify(t),localStorage.setItem(e,t)},e.prototype.load=function(e){var t=localStorage.getItem(e);return JSON.parse(t)},e.prototype.loadOrDefault=function(e,t){var n=this.load(e);return n||(n=t),n},e.decorators=[{type:d.Injectable,args:[{providedIn:"root"}]}],e.ctorParameters=function(){return[]},e.ngInjectableDef=d.defineInjectable({factory:function(){return new e},token:e,providedIn:"root"}),e}(),_=function(){function e(e,t){var n=this;this.translate=e,this.localStorage=t,this.savedLanguage=this.localStorage.loadOrDefault("Language","en"),this.translate.onLangChange.subscribe(function(e){n.setLanguage(e.lang),n.translations=e.translations})}return e.prototype.setLanguage=function(e){this.translate.use(e),this.savedLanguage=e,this.localStorage.save("Language",e)},e.prototype.getLanguage=function(){return this.localStorage.loadOrDefault("Language","en")},e.decorators=[{type:d.Injectable,args:[{providedIn:"root"}]}],e.ctorParameters=function(){return[{type:n.TranslateService},{type:B}]},e.ngInjectableDef=d.defineInjectable({factory:function(){return new e(d.inject(n.TranslateService),d.inject(B))},token:e,providedIn:"root"}),e}(),z="Function:",W=/\+/g,$=/([^&=]+)=?([^&]*)/g,K=function(){function e(e,t,n,i){this.bridgeService=e,this.httpRequestsService=t,this.localStorageService=n,this.languageService=i}return e.prototype.evaluateFunctionOrDefault=function(e,t){if(0<=e.indexOf(z)){var n=void 0,i=null;if(0<=(e=e.replace(z,"")).indexOf(",")){var a=e.split(",");n=a[0],a.shift(),i=a}else n=e;var r=fieldEvalFunctions[n];return r?r(i,i):t}return t},e.prototype.loadFile=function(n){return q(this,void 0,void 0,function(){var t;return O(this,function(e){return t=null,this.localStorageService.doesKeyExist(n)?(t=this.localStorageService.load(n)).isLocal=!0:t=this.httpRequestsService.get(n).toPromise(),[2,t]})})},e.prototype.mergeRecursive=function(e,t){for(var n in t)if(t.hasOwnProperty(n))try{t[n].constructor===Object?e[n]=this.mergeRecursive(e[n],t[n]):e[n]=t[n]}catch(i){e[n]=t[n]}return e},e.prototype.replaceTokens=function(e,t,n){return e=e.replace("{languageToken}",this.languageService.savedLanguage),t&&t.params&&(e=this.replaceTokensFromParameters(e,t.params.value)),e=this.replaceTokensFromParameters(e,this.getQueryStringParameters()),e=this.replaceTokensFromParameters(e,this.bridgeService.configuration.settings.baseEndPointUrls),n&&(e=this.replaceTokensFromParameters(e,n)),e},e.prototype.replaceTokensFromParameters=function(e,t){for(var n in t)if(t.hasOwnProperty(n)){var i=t[n];e=e.replace("{"+n+"}",i)}return e},e.prototype.getQueryStringParameters=function(){for(var e,t={},n=window.location.search.substring(1);e=$.exec(n);)t[this.decodeURIComponent(e[1])]=this.decodeURIComponent(e[2]);return t},e.prototype.decodeURIComponent=function(e){return decodeURIComponent(e.replace(W," "))},e.decorators=[{type:d.Injectable,args:[{providedIn:"root"}]}],e.ctorParameters=function(){return[{type:P},{type:N},{type:B},{type:_}]},e.ngInjectableDef=d.defineInjectable({factory:function(){return new e(d.inject(P),d.inject(N),d.inject(B),d.inject(_))},token:e,providedIn:"root"}),e}(),G=function Ye(){},Q=function Je(){this.isLocal=!1},Y=function Ze(){},J=function Xe(){},Z=function(){function e(){}return e.New="New",e.Display="Display",e.Edit="Edit",e}(),X=function(){function e(){}return e.None="None",e.Alert="Alert",e.List="List",e}(),ee=function(){function e(){}return e.None="None",e.Tabs="Tabs",e.NextPrevious="NextPrevious",e}(),te=function(){function e(){}return e.FormData="FormData",e.FormBody="FormBody",e}(),ne=function(){function e(){}return e.Warning="warning",e.Error="error",e.Success="success",e.Info="info",e.Question="question",e}(),ie=function(){function e(){}return e.Info="info",e.Text="text",e.DateTime="datetime",e.DateTimeHijri="datetimehijri",e.RadioButton="radiobutton",e.Select="select",e.Password="password",e.Number="number",e.MultiSelect="multiselect",e.Checkbox="checkbox",e.FileUpload="fileupload",e.Chips="chips",e.Editor="editor",e.Recaptcha="recaptcha",e.Time="time",e.Location="location",e.ImageCropper="imagecropper",e.Rating="rating",e.MasterDetail="masterdetail",e}(),ae=function et(){},re=function tt(){},oe=function nt(){},le=function it(e,t){this.type=e,this.message=t},se=function at(e,t,n,i){this.latitude=e,this.longitude=t,this.draggable=n,this.infoHtml=i},de=function rt(){},ce=function ot(){},pe=function lt(){},ue=function st(){},fe=function dt(e,t,n,i){this.id=e,this.name=t,this.legend=n,this.isActive=i},me=function ct(){},ge=function pt(e,t,n){this.isSuccess=e,this.response=t,this.payload=n},he={HOURS:1,MINUTES:2};he[he.HOURS]="HOURS",he[he.MINUTES]="MINUTES";var ve=function(){function e(){this.userTimeChange=new d.EventEmitter,this.viewChange=new d.EventEmitter,this.steps=new Array}return e.prototype.ngOnChanges=function(){this.setupUI()},e.prototype.setupUI=function(){switch(this.steps=new Array,this.currentView){case he.HOURS:for(var e=1;e<=this.userTime.format;e++)this.steps.push(e),this.selectedTimePart=this.userTime.hour||0,this.selectedTimePart>this.userTime.format&&(this.selectedTimePart-=this.userTime.format);break;case he.MINUTES:for(e=5;e<=55;e+=5)this.steps.push(e);this.steps.push(0),this.selectedTimePart=this.userTime.minute||0}},e.prototype.getPointerStyle=function(){var e=1;switch(this.currentView){case he.HOURS:e=this.userTime.format;break;case he.MINUTES:e=60}var t=0;return{"-webkit-transform":"rotate("+(t=this.currentView===he.HOURS?Math.round(this.userTime.hour*(360/e))-180:Math.round(this.userTime.minute*(360/e))-180)+"deg)","-ms-transform":"rotate("+t+"deg)",transform:"rotate("+t+"deg)"}},e.prototype.getTimeValueClass=function(e,t){this.currentView===he.HOURS?this.STEP_DEG=360/this.userTime.format:this.STEP_DEG=30;var n="w-clock-step w-clock-deg"+this.STEP_DEG*(t+1);return this.selectedTimePart===e&&(n+=" mat-primary"),n},e.prototype.changeTimeValue=function(e){this.currentView===he.HOURS?(this.userTime.hour=e,this.viewChange.emit(he.MINUTES)):(this.userTime.minute=e,this.viewChange.emit(he.HOURS)),this.userTimeChange.emit(this.userTime)},e.decorators=[{type:d.Component,args:[{selector:"ntw-clock",styles:[".w-clock-wrapper{height:100%;padding:0 24px}.w-clock-wrapper .w-clock{width:200px;height:200px;border-radius:50%;cursor:pointer;padding:24px;background:#ededed}.w-clock-wrapper .w-clock .w-clock-container{width:100%;height:100%;position:relative;display:block}.w-clock-wrapper .w-clock .w-clock-center{height:6px;width:6px;position:absolute;left:0;right:0;top:0;bottom:0;margin:auto;border-radius:50%}.w-clock-wrapper .w-clock .w-pointer{box-shadow:none;width:1px;height:50%;position:absolute;left:0;right:0;bottom:0;margin:0 auto;padding:0;-webkit-transform-origin:top center;transform-origin:top center;transition:transform .2s;transition:transform .2s,-webkit-transform .2s;z-index:0;pointer-events:none}.w-clock-wrapper .w-clock .w-clock-step{display:block;position:absolute;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%);transition:transform .2s;transition:transform .2s,-webkit-transform .2s}.w-clock-wrapper .w-clock .w-clock-step .mat-mini-fab{box-shadow:none;background-color:transparent}.w-clock-wrapper .w-clock .w-clock-selected{position:absolute;bottom:-19px;left:-19px;min-width:0;min-height:0;pointer-events:none;box-shadow:none;cursor:none}.w-clock-deg0{top:0;left:50%}.w-clock-deg15{top:1.70370869%;left:62.94095226%}.w-clock-deg30{top:6.69872981%;left:75%}.w-clock-deg45{top:14.64466094%;left:85.35533905%}.w-clock-deg60{top:25%;left:93.30127019%}.w-clock-deg75{top:37.05904774%;left:98.29629131%}.w-clock-deg90{top:50%;left:100%}.w-clock-deg105{top:62.94095226%;left:98.29629131%}.w-clock-deg120{top:75%;left:93.30127019%}.w-clock-deg135{top:85.35533906%;left:85.35533906%}.w-clock-deg150{top:93.30127019%;left:75%}.w-clock-deg165{top:98.29629131%;left:62.94095226%}.w-clock-deg180{top:100%;left:50%}.w-clock-deg195{top:98.29629131%;left:37.05904774%}.w-clock-deg210{top:93.30127019%;left:25%}.w-clock-deg225{top:85.35533906%;left:14.64466094%}.w-clock-deg240{top:75%;left:6.69872981%}.w-clock-deg255{top:62.94095226%;left:1.703708686%}.w-clock-deg270{top:50%;left:0}.w-clock-deg285{top:37.05904774%;left:1.703708686%}.w-clock-deg300{top:25%;left:6.69872981%}.w-clock-deg315{top:14.64466094%;left:14.64466094%}.w-clock-deg330{top:6.69872981%;left:25%}.w-clock-deg345{top:1.703708686%;left:37.05904774%}.w-clock-deg360{top:0;left:50%}"],template:'<div fxLayout="row"\n     fxLayoutAlign="center center"\n     class="w-clock-wrapper">\n  <div class="w-clock">\n    <div class="w-clock-container">\n\n      \x3c!-- Clock center --\x3e\n      <button mat-mini-fab\n              [color]="color"\n              class="w-clock-center"></button>\n\n      \x3c!-- Clock hand --\x3e\n      <mat-toolbar [ngStyle]="getPointerStyle()"\n                   [color]="color"\n                   class="w-pointer">\n        <button mat-mini-fab\n                [color]="color"\n                class="w-clock-selected"></button>\n      </mat-toolbar>\n\n      \x3c!-- Hour / Minute number faces --\x3e\n      <div *ngFor="let step of steps; let i = index"\n           [class]="getTimeValueClass(step, i)">\n        <button mat-mini-fab\n                [color]="selectedTimePart === step ? color : \'\'"\n                (click)="changeTimeValue(step)">\n          {{ step }}\n        </button>\n      </div>\n\n    </div>\n  </div>\n</div>\n'}]}],e.propDecorators={userTime:[{type:d.Input}],userTimeChange:[{type:d.Output}],currentView:[{type:d.Input}],viewChange:[{type:d.Output}],color:[{type:d.Input}]},e}(),ye=function(){function e(e,t){this.data=e,this.dialogRef=t,this.VIEW_HOURS=he.HOURS,this.VIEW_MINUTES=he.MINUTES,this.currentView=this.VIEW_HOURS,this.userTime=e.time,this.color=e.color}return e.prototype.revert=function(){this.dialogRef.close(-1)},e.prototype.submit=function(){this.dialogRef.close(this.userTime)},e.decorators=[{type:d.Component,args:[{styles:[".w-timepicker-dialog{padding:0;margin:-24px;width:calc(100% + 48px)}"],template:'<div mat-dialog-content class="w-timepicker-dialog">\n  <ntw-time [color]="color" [userTime]="userTime" (reverted)="revert()" (submitted)="submit()"></ntw-time>\n</div>\n'}]}],e.ctorParameters=function(){return[{type:be,decorators:[{type:d.Inject,args:[a.MAT_DIALOG_DATA]}]},{type:a.MatDialogRef}]},e}(),be=function ut(){},we=function(){function e(e,t){this.dialog=e,this.translatePipe=t,this.userTimeChange=new d.EventEmitter}return e.prototype.ngOnInit=function(){if(!this.userTime){var e={hour:0,minute:0,format:24,meriden:"AM"};this.userTime=e}},Object.defineProperty(e.prototype,"time",{get:function(){if(!this.userTime)return"";var e=""+this.userTime.meriden;e=this.translatePipe.transform(e),24===this.userTime.format&&(e="");var t=""+this.userTime.hour;return 24===this.userTime.hour&&(t="00"),0===this.userTime.minute?t+":00 "+e:this.userTime.minute<10?t+":"+("0"+String(this.userTime.minute))+" "+e:t+":"+this.userTime.minute+" "+e},enumerable:!0,configurable:!0}),e.prototype.showPicker=function(e){var t=this;return this.dialog.open(ye,{data:{time:{hour:this.userTime.hour,minute:this.userTime.minute,meriden:this.userTime.meriden,format:this.userTime.format},color:this.color}}).afterClosed().subscribe(function(e){e!==undefined&&-1!==e&&(t.userTime=e,t.emituserTimeChange())}),!1},e.prototype.emituserTimeChange=function(){this.userTimeChange.emit(this.userTime)},e.decorators=[{type:d.Component,args:[{selector:"ntw-mat-timepicker",styles:[".time-picker-button{padding:0;margin:0;min-width:44px}:host ::ng-deep .ui-dropdown,:host ::ng-deep input.ui-inputtext.ui-widget.ui-state-default,:host ::ng-deep p-dropdown,input.form-input{width:100%!important;height:35px}"],template:'<div fxFlex\n     fxLayout="row"\n     class="w-mat-timepicker">\n\n  <button mat-button type="button"\n          (click)="showPicker($event)"\n          class="time-picker-button">\n    <i class="fa fa-clock-o"></i>\n  </button>\n\n  <input matInput\n         [id]="inputId"\n         [name]="inputName"\n         [disabled]="disabled"\n         [readonly]="readonly"\n         [class]="inputClass"\n         [title]="tooltip"\n         [placeholder]="placeholderValue"\n         [value]="time">\n</div>\n',providers:[n.TranslatePipe]}]}],e.ctorParameters=function(){return[{type:a.MatDialog},{type:n.TranslatePipe}]},e.propDecorators={userTime:[{type:d.Input}],userTimeChange:[{type:d.Output}],color:[{type:d.Input}],disabled:[{type:d.Input}],readonly:[{type:d.Input}],inputClass:[{type:d.Input}],tooltip:[{type:d.Input}],placeholderValue:[{type:d.Input}],inputId:[{type:d.Input}],inputName:[{type:d.Input}]},e}(),xe=function(){function e(e){this.translatePipe=e,this.userTimeChange=new d.EventEmitter,this.reverted=new d.EventEmitter,this.submitted=new d.EventEmitter,this.VIEW_HOURS=he.HOURS,this.VIEW_MINUTES=he.MINUTES,this.currentView=this.VIEW_HOURS}return e.prototype.ngOnInit=function(){this.userTime||(this.userTime={hour:6,minute:0,meriden:"PM",format:12}),this.revertLabel||(this.revertLabel=this.translatePipe.transform("buttons.Cancel")),this.submitLabel||(this.submitLabel=this.translatePipe.transform("buttons.Ok"))},e.prototype.formatHour=function(){if(24===this.userTime.format){if(24===this.userTime.hour)return"00";if(this.userTime.hour<10)return"0"+String(this.userTime.hour)}return String(this.userTime.hour)},e.prototype.formatMinute=function(){return 0===this.userTime.minute?"00":this.userTime.minute<10?"0"+String(this.userTime.minute):String(this.userTime.minute)},e.prototype.setCurrentView=function(e){this.currentView=e},e.prototype.setMeridien=function(e){this.userTime.meriden=e},e.prototype.revert=function(){this.reverted.emit()},e.prototype.submit=function(){this.submitted.emit(this.userTime)},e.prototype.emituserTimeChange=function(e){this.userTimeChange.emit(this.userTime)},e.decorators=[{type:d.Component,args:[{selector:"ntw-time",template:'<div fxLayout="row"\n     fxLayout.lt-md="column"\n     fxLayoutAlign="center center"\n     class="w-time"\n     [ngClass.xs]="\'vertical-time\'"\n     [ngClass.sm]="\'vertical-time\'">\n  <mat-toolbar fxLayout="column"\n               fxLayout.lt-md="row"\n               fxLayoutAlign="center center"\n               [color]="color"\n               class="w-timepicker-time-container">\n\n    <div class="w-timepicker-selected-time">\n      <span [class]="currentView === VIEW_HOURS ? \'active\': \'\'"\n            (click)="setCurrentView(VIEW_HOURS)">{{ formatHour() }}:</span>\n      <span [class]="currentView === VIEW_MINUTES ? \'active\': \'\'"\n            (click)="setCurrentView(VIEW_MINUTES)">{{ formatMinute() }}</span>\n    </div>\n    <div fxLayout="column"\n         fxLayoutAlign="center center"\n         class="w-timepicker-selected-ampm"\n         *ngIf="userTime.format === 12">\n      <span (click)="setMeridien(\'AM\')"\n            [class]="userTime.meriden === \'AM\' ? \'active\' : \'\'">{{\'AM\' | translate}}</span>\n      <span (click)="setMeridien(\'PM\')"\n            [class]="userTime.meriden === \'PM\' ? \'active\' : \'\'">{{\'PM\' | translate}}</span>\n    </div>\n\n  </mat-toolbar>\n\n  <div fxLayout="column"\n       fxLayoutAlign="space-between center"\n       class="w-time-content">\n    <ntw-clock [color]="color"\n             class="w-animation-zoom"\n             [userTime]="userTime"\n             (userTimeChange)="emituserTimeChange($event)"\n             [(currentView)]="currentView"\n             (viewChange)="setCurrentView($event)">\n    </ntw-clock>\n\n    <div fxFlexAlign="end">\n      <button mat-button\n              (click)="revert()">\n        {{revertLabel}}\n      </button>\n      <button mat-button\n              [color]="color"\n              (click)="submit()">\n        {{submitLabel}}\n      </button>\n    </div>\n  </div>\n</div>\n',styles:[":host{display:block}.w-time{max-height:100%;min-height:350px;height:350px}.w-time .w-timepicker-time-container{padding:15px;min-width:160px;width:160px}.w-time .w-timepicker-time-container.mat-toolbar-single-row{height:100%}.w-time .w-timepicker-selected-time{font-size:3.5rem;font-weight:400;display:flex}.w-time .w-timepicker-selected-ampm{font-size:1rem;line-height:1.3rem;padding-top:2rem}.w-time .w-time-content{width:100%;height:100%;padding:6px}.w-time .w-time-content w-clock{padding:12px 0;height:calc(100% - 58px)}.w-time.vertical-time{height:auto}.w-time.vertical-time .w-timepicker-time-container{min-width:auto;width:100%;height:100px}.w-time.vertical-time .w-timepicker-time-container .w-timepicker-selected-ampm{padding:0 12px}.w-timepicker-selected-ampm>span,.w-timepicker-selected-time>span{outline:0;opacity:.5}.w-timepicker-selected-ampm>span:not(.active),.w-timepicker-selected-time>span:not(.active){cursor:pointer}.w-timepicker-selected-ampm>span.active,.w-timepicker-selected-time>span.active{opacity:1}.w-animate-next{opacity:0;-webkit-transform:translate3d(50%,0,1px);transform:translate3d(50%,0,1px)}.w-animate-next-remove{transition:.5s cubic-bezier(.35,0,.25,1);opacity:0;-webkit-transform:translate3d(50%,0,1px);transform:translate3d(50%,0,1px)}.w-animate-next-remove-active{opacity:1;-webkit-transform:translate3d(0,0,1px);transform:translate3d(0,0,1px)}.w-animate-prev{opacity:0;-webkit-transform:translate3d(-50%,0,1px);transform:translate3d(-50%,0,1px)}.w-animate-prev-remove{transition:.3s cubic-bezier(.35,0,.25,1);opacity:0;-webkit-transform:translate3d(-50%,0,1px);transform:translate3d(-50%,0,1px)}.w-animate-prev-remove-active{opacity:1;-webkit-transform:translate3d(0,0,1px);transform:translate3d(0,0,1px)}@-webkit-keyframes w-animation-bounce{from{opacity:0;-webkit-transform:scale(.95);transform:scale(.95)}70%{opacity:1;-webkit-transform:scale(1.05);transform:scale(1.05)}to{-webkit-transform:scale(1);transform:scale(1)}}@keyframes w-animation-bounce{from{opacity:0;-webkit-transform:scale(.95);transform:scale(.95)}70%{opacity:1;-webkit-transform:scale(1.05);transform:scale(1.05)}to{-webkit-transform:scale(1);transform:scale(1)}}.w-animation-zoom.ng-enter{transition:.3s cubic-bezier(.35,0,.25,1);-webkit-animation-duration:.3s;animation-duration:.3s;-webkit-animation-name:w-animation-bounce;animation-name:w-animation-bounce}"],providers:[n.TranslatePipe]}]}],e.ctorParameters=function(){return[{type:n.TranslatePipe}]},e.propDecorators={userTime:[{type:d.Input}],userTimeChange:[{type:d.Output}],revertLabel:[{type:d.Input}],submitLabel:[{type:d.Input}],reverted:[{type:d.Output}],submitted:[{type:d.Output}],color:[{type:d.Input}]},e}(),Ce=function(){function n(e){this.bridgeService=e,this.validateForRequired=!1,this.validateForPattern=!1,this.validateForRange=!1}return n.prototype.handleDefaultSettings=function(){},n.prototype.updateValue=function(e){this.field.data.value=e.value,this.validate()},n.prototype.clearValue=function(){this.field.data&&(this.field.data.value=null,this.control&&this.control.reset(),this.clearValidationErrors())},n.prototype.getValue=function(){return this.field.data.value},n.prototype.appendFormData=function(e){return this.field.data&&this.field.data.value&&e.append(this.field.name,this.field.data.value),e},n.prototype.triggerDynamicEvent=function(e,t,n){if(n.eventTriggers){var i=n.eventTriggers[e],a=this.bridgeService.parentComponent[i.handler];if(a){var r=[t];i.parameters&&0<i.parameters.length&&(r=r.concat(i.parameters)),a(this.bridgeService.parentComponent,n,r)}}},n.prototype.isFieldHidden=function(){return this.field.hidden||this.bridgeService.configuration.settings.sectionMode!==ee.None&&0<this.bridgeService.configuration.sections.length&&this.field.sectionId!==this.bridgeService.configuration.currentSection.id},n.prototype.isValidationShown=function(){return!this.isPristine&&this.field.validationErrors&&0<this.field.validationErrors.length},n.prototype.isValidationAsteriskShown=function(){return!this.isFormInDisplayMode()&&this.field.validation&&(this.field.validation.required||0<this.field.validation.min)},n.prototype.validate=function(e,t){return this.preValidate(t),this.shouldValidate()&&(this.field.hidden?this.clearValidationErrors():this.isFormInDisplayMode()||(this.validateForRequired&&this.validateRequiredCondition(),this.validateForPattern&&this.validatePatternCondition(),this.validateForRange&&this.validateRangeCondition()),this.updateValidationSummary()),this.field.validationErrors},n.prototype.addValidationError=function(e,t){void 0===t&&(t=n.ValidationErrorClass),this.field.validationErrors||(this.field.validationErrors=new Array),this.field.validationErrors.push(new le(t,e))},n.prototype.clearValidationErrors=function(){this.field.validationErrors=new Array},n.prototype.shouldValidate=function(){return this.field.validation&&(!this.field.validationErrors||0===this.field.validationErrors.length)},n.prototype.preValidate=function(e){return this.isPristine=!1,e&&this.field.validationErrors&&0<this.field.validationErrors.length||(this.field.validationErrors=new Array),this.field.validationErrors},n.prototype.updateValidationSummary=function(){this.bridgeService.configuration.validationErrors=new Array;try{for(var e=L(this.bridgeService.configuration.mergedFields),t=e.next();!t.done;t=e.next()){var n=t.value;n.validationErrors&&(this.bridgeService.configuration.validationErrors=this.bridgeService.configuration.validationErrors.concat(n.validationErrors))}}catch(r){i={error:r}}finally{try{t&&!t.done&&(a=e["return"])&&a.call(e)}finally{if(i)throw i.error}}var i,a},n.prototype.validateRequiredCondition=function(){return this.field.validation.required&&(this.field.data&&this.field.data.value&&0!==this.field.data.value.length||this.field.validationErrors.push(new le(n.ValidationErrorClass,this.field.validation.requiredText))),this.field.validationErrors},n.prototype.validatePatternCondition=function(){this.field.validation.pattern&&this.field.data&&this.field.data.value&&0<this.field.data.value.length&&(new RegExp(this.field.validation.pattern).test(this.field.data.value)||this.field.validationErrors.push(new le(n.ValidationErrorClass,this.field.validation.patternText)));return this.field.validationErrors},n.prototype.validateRangeCondition=function(){var e=this.field.data&&this.field.data.value?this.field.data.value.length:0;return(this.field.validation.min&&e<this.field.validation.min||this.field.validation.max&&e>this.field.validation.max)&&this.field.validationErrors.push(new le(n.ValidationErrorClass,this.field.validation.rangeText)),this.field.validationErrors},n.prototype.isFormInDisplayMode=function(){return this.bridgeService.configuration.settings.formMode===Z.Display},n.ValidationErrorClass="cssClasses.ValidationError",n.decorators=[{type:d.Component,args:[{selector:"ntw-field",template:""}]}],n.ctorParameters=function(){return[{type:P}]},n.propDecorators={field:[{type:d.Input,args:["field"]}],control:[{type:d.ViewChild,args:[l.NgModel]}]},n}(),Se=function(o){function e(e,t,n,i,a){var r=o.call(this,e)||this;return r.bridgeService=e,r.httpRequestsService=t,r.translateService=n,r.utilitiesService=i,r.route=a,r}return A(e,o),e.prototype.handleDefaultSettings=function(){var t=this;this.isFormInDisplayMode()||(this.dataBindOptions(),this.translateService.onLangChange.subscribe(function(e){t.dataBindOptions()}))},e.prototype.dataBindOptions=function(){if(this.field.data&&this.field.data.optionsEndpoint){var e=this.utilitiesService.replaceTokens(this.bridgeService.configuration.endpoints.lookups[this.field.data.optionsEndpoint],this.route,this.bridgeService.additionalParameters);this.bindOptions(e)}},e.prototype.bindOptions=function(e){var t=this;this.httpRequestsService.get(e).subscribe(function(e){t.field.data.options=e},function(e){console.error("bindOptions: ",e)})},e.decorators=[{type:d.Component,args:[{selector:"ntw-boundable-field",template:""}]}],e.ctorParameters=function(){return[{type:P},{type:N},{type:n.TranslateService},{type:K},{type:s.ActivatedRoute,decorators:[{type:d.Optional}]}]},e}(Ce),ke=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.validateForRange=!0,e}return A(e,t),e.prototype.clearValue=function(){this.field.data&&(this.field.data.value=[],this.control.reset(),this.clearValidationErrors())},e.prototype.appendFormData=function(e){if(this.field.data&&this.field.data.value)for(var t=0;t<this.field.data.value.length;t++){var n=this.field.data.value[t];e.append(this.field.name+"["+t+"]",n)}return e},e.decorators=[{type:d.Component,args:[{selector:"ntw-checkbox-field",template:'<div [class]="field.cssClasses.container"\n     [hidden]="isFieldHidden()"\n     [attr.data-html2canvas-ignore]="field.html2CanvasIgnore">\n\n  \x3c!-- label --\x3e\n  <label [class]="field.cssClasses.label"\n         [for]="field.name">\n    {{field.label | translate}}\n    <span class="required-asterisk"\n          *ngIf="isValidationAsteriskShown()">*</span>\n  </label>\n\n  \x3c!-- input--\x3e\n  <div class="checkBoxHolder"\n       *ngIf="bridgeService?.configuration?.settings?.formMode != \'Display\'">\n    <p-checkbox *ngFor="let checkbox of field.data.options; let i = index"\n                [id]="field.name+\'_\'+i"\n                [name]="field.name"\n                [(ngModel)]="field.data.value"\n                [class]="field.cssClasses.input"\n                [ngClass]="{\'invalid\': isValidationShown()}"\n                [title]="field.tooltip | translate"\n                #input="ngModel"\n                [required]="field.validation.required"\n                [label]="checkbox.name | translate"\n                [value]="checkbox.id"\n                [disabled]="field.disabled"\n                (onChange)="triggerDynamicEvent(\'onChange\', $event, field);"\n                (ngModelChange)="validate();">\n    </p-checkbox>\n  </div>\n\n  \x3c!-- display --\x3e\n  <div [class]="field.cssClasses.display"\n       *ngIf="bridgeService?.configuration?.settings?.formMode == \'Display\'">\n    <ul *ngIf="field?.data?.value?.length > 1">\n      <li *ngFor="let title of field?.data?.value">{{title}}</li>\n    </ul>\n    <span *ngIf="field?.data?.value?.length == 1">\n      <span *ngFor="let title of field?.data?.value">{{title}}</span>\n    </span>\n  </div>\n\n  \x3c!-- validations --\x3e\n  <div *ngIf="isValidationShown()">\n    <div *ngFor="let error of field?.validationErrors">\n      <p [ngClass]="error.type | translate">\n        {{error.message | translate}}\n      </p>\n    </div>\n  </div>\n</div>\n',styles:["p-checkbox{display:block}body.ar :host ::ng-deep .ui-chkbox.ui-widget{float:right;margin-left:10px}"]}]}],e}(Se),Fe=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.validateForRange=!0,e}return A(e,t),e.prototype.appendFormData=function(e){if(this.field.data&&this.field.data.value)for(var t=0;t<this.field.data.value.length;t++){var n=this.field.data.value[t];e.append(this.field.name+"["+t+"]",n)}return e},e.decorators=[{type:d.Component,args:[{selector:"ntw-chips-field",template:'<div [class]="field.cssClasses.container"\n     [hidden]="isFieldHidden()"\n     [attr.data-html2canvas-ignore]="field.html2CanvasIgnore">\n\n  \x3c!-- label --\x3e\n  <label [class]="field.cssClasses.label"\n         [for]="field.name">\n    {{field.label | translate}}\n    <span class="required-asterisk"\n          *ngIf="isValidationAsteriskShown()">*</span>\n  </label>\n\n  \x3c!-- input--\x3e\n  <p-chips [id]="field.name"\n           [name]="field.name"\n           [placeholder]="(field.placeholder) ? (field.placeholder | translate) : \'\'"\n           [class]="field.cssClasses.input"\n           [ngClass]="{\'invalid\': isValidationShown()}"\n           [title]="field.tooltip | translate"\n           #input="ngModel"\n           [disabled]="field.disabled"\n           [(ngModel)]="field.data.value"\n           [allowDuplicate]="field.validation.allowDuplicate"\n           [addOnBlur]="field.addOnBlur"\n           [addOnTab]="field.addOnTab"\n           [required]="field.validation.required"\n           *ngIf="bridgeService?.configuration?.settings?.formMode != \'Display\'"\n           (onAdd)="triggerDynamicEvent(\'onAdd\', $event, field);"\n           (onRemove)="triggerDynamicEvent(\'onRemove\', $event, field);"\n           (ngModelChange)="validate();">\n  </p-chips>\n\n  \x3c!-- display --\x3e\n  <div [class]="field.cssClasses.display"\n       *ngIf="bridgeService?.configuration?.settings?.formMode == \'Display\'">\n    <ul>\n      <li *ngFor="let title of field.data.value">{{title}}</li>\n    </ul>\n  </div>\n\n  \x3c!-- validations --\x3e\n  <div *ngIf="isValidationShown()">\n    <div *ngFor="let error of field?.validationErrors">\n      <p [ngClass]="error.type | translate">\n        {{error.message | translate}}\n      </p>\n    </div>\n  </div>\n</div>\n',styles:[":host ::ng-deep .ui-chips-input-token,:host ::ng-deep .ui-chips-input-token input{width:100%}:host ::ng-deep .ui-chips>ul.ui-inputtext{padding:5px .25em}"]}]}],e}(Ce),Ie=function(r){function e(e,t,n,i){var a=r.call(this,e)||this;return a.bridgeService=e,a.translateService=t,a.languageService=n,a.datePipe=i,a.validateForRequired=!0,a}return A(e,r),e.prototype.ngAfterViewInit=function(){var t=this;this.setCalendarOptions(),this.translateService.onLangChange.subscribe(function(e){t.setCalendarOptions()})},e.prototype.appendFormData=function(e){return this.field.data&&this.field.data.value&&e.append(this.field.name,this.datePipe.transform(this.field.data.value,this.field.formDataDateFormat)),e},e.prototype.handleDefaultSettings=function(){},e.prototype.setCalendarOptions=function(){if(this.calendarElement&&this.languageService.translations){var e=this.languageService.translations.calendarOptions;e&&(this.calendarElement.locale=e)}},e.decorators=[{type:d.Component,args:[{selector:"ntw-datetime-field",template:'<div [class]="field.cssClasses.container"\n     [hidden]="isFieldHidden()"\n     [attr.data-html2canvas-ignore]="field.html2CanvasIgnore">\n\n  \x3c!-- label --\x3e\n  <label [class]="field.cssClasses.label"\n         [for]="field.name">\n    {{field.label | translate}}\n    <span class="required-asterisk"\n          *ngIf="isValidationAsteriskShown()">*</span>\n  </label>\n\n  \x3c!-- input--\x3e\n  <p-calendar #calendar\n              [id]="field.name"\n              [name]="field.name"\n              [class]="field.cssClasses.input"\n              [ngClass]="{\'invalid\': isValidationShown()}"\n              [placeholder]="(field.placeholder) ? (field.placeholder | translate) : \'\'"\n              [title]="field.tooltip | translate"\n              #input="ngModel"\n              [(ngModel)]="field.data.value"\n              [required]="field.validation.required"\n              [readonlyInput]="field.readonly"\n              [disabled]="field.disabled"\n              [showIcon]="field.showIcon"\n              [showTime]="field.showTime"\n              [hourFormat]="field.hourFormat"\n              [monthNavigator]="field.monthNavigator"\n              [yearNavigator]="field.yearNavigator"\n              [yearRange]="field.yearRange"\n              [dateFormat]="field.dateFormat"\n              [minDate]="field.minDateValue"\n              [maxDate]="field.maxDateValue"\n              [defaultDate]="field.defaultDateValue"\n              *ngIf="bridgeService?.configuration?.settings?.formMode != \'Display\'"\n              (onClose)="validate();triggerDynamicEvent(\'onSelect\', $event, field);"\n              (onSelect)="validate();triggerDynamicEvent(\'onSelect\', $event, field);">\n  </p-calendar>\n\n  \x3c!-- display --\x3e\n  <span [class]="field.cssClasses.display"\n        *ngIf="bridgeService?.configuration?.settings?.formMode == \'Display\'">\n    {{field.data.value | date:field.displayDateFormat}}\n  </span>\n\n  \x3c!-- validations --\x3e\n  <div *ngIf="isValidationShown()">\n    <div *ngFor="let error of field?.validationErrors">\n      <p [ngClass]="error.type | translate">\n        {{error.message | translate}}\n      </p>\n    </div>\n  </div>\n</div>\n',styles:["body.en :host ::ng-deep button.ui-datepicker-trigger{right:0}body.ar :host ::ng-deep button.ui-datepicker-trigger{left:0}:host ::ng-deep span.ui-calendar{display:block}:host ::ng-deep p-calendar input{border-radius:.25rem}body.ar :host ::ng-deep .ui-calendar-button{border-radius:.25rem 0 0 .25rem}body.ar :host ::ng-deep .ui-calendar.ui-calendar-w-btn input{border-top-right-radius:.25rem;border-bottom-right-radius:.25rem}:host ::ng-deep button.ui-datepicker-trigger{position:absolute}:host ::ng-deep .ui-calendar .ui-datepicker{width:17em;min-width:auto}:host ::ng-deep .ui-calendar .ui-calendar-button .ui-button-icon-left{font-size:1.25em}"]}]}],e.ctorParameters=function(){return[{type:P},{type:n.TranslateService},{type:_},{type:c.DatePipe}]},e.propDecorators={calendarElement:[{type:d.ViewChild,args:["calendar"]}]},e}(Ce),De=function(i){function e(e,t){var n=i.call(this,e)||this;return n.bridgeService=e,n.utilitiesService=t,n.validateForRequired=!0,n}return A(e,i),e.prototype.handleDefaultSettings=function(){this.field.minDate&&(this.field.minDateValue=this.utilitiesService.evaluateFunctionOrDefault(this.field.minDate,new Date(this.field.minDate))),this.field.maxDate&&(this.field.maxDateValue=this.utilitiesService.evaluateFunctionOrDefault(this.field.maxDate,new Date(this.field.maxDate))),this.field.data.dateValue&&(this.field.data.value=this.utilitiesService.evaluateFunctionOrDefault(this.field.data.dateValue,new Date(this.field.data.dateValue)))},e.prototype.appendFormData=function(e){return this.field.data&&this.field.data.value&&(e.append(this.field.name+".year",this.field.data.value.year),e.append(this.field.name+".month",this.field.data.value.month),e.append(this.field.name+".day",this.field.data.value.day)),e},e.prototype.toggleCalendar=function(){this.calendar.toggle()},e.decorators=[{type:d.Component,args:[{selector:"ntw-datetime-hijri-field",template:'<div [class]="field.cssClasses.container"\n     [hidden]="isFieldHidden()"\n     [attr.data-html2canvas-ignore]="field.html2CanvasIgnore">\n\n  \x3c!-- label --\x3e\n  <label [class]="field.cssClasses.label"\n         [for]="field.name">\n    {{field.label | translate}}\n    <span class="required-asterisk"\n          *ngIf="isValidationAsteriskShown()">*</span>\n  </label>\n\n  \x3c!-- input--\x3e\n  <div class="hijri-date-control">\n    <input [name]="field.name"\n           [placeholder]="(field.placeholder) ? (field.placeholder | translate) : \'\'"\n           [class]="field.cssClasses.input"\n           [ngClass]="{\'invalid\': isValidationShown()}"\n           ngbDatepicker\n           #input="ngbDatepicker"\n           #defaultInput="ngModel"\n           [readonly]="field.readonly"\n           [disabled]="field.disabled"\n           [(ngModel)]="field.data.value"\n           [minDate]="field.minDateValue"\n           [maxDate]="field.maxDateValue"\n           [showWeekNumbers]="field.showWeekNumbers"\n           [displayMonths]="field.displayMonths"\n           [outsideDays]="field.outsideDays"\n           [showWeekdays]="field.showWeekdays"\n           *ngIf="bridgeService?.configuration?.settings?.formMode != \'Display\'"\n           (click)="toggleCalendar();validate();"\n           (ngModelChange)="validate();triggerDynamicEvent(\'onSelect\', $event, field);" />\n\n    \x3c!-- icon --\x3e\n    <button class="hijri-date-icon-container"\n            [disabled]="field.disabled"\n            type="button"\n            (click)="toggleCalendar();">\n      <span class="hijri-date-icon"\n            *ngIf="field.showIcon">\n      </span>\n    </button>\n  </div>\n\n  \x3c!-- display --\x3e\n  <span [class]="field.cssClasses.display"\n        *ngIf="bridgeService?.configuration?.settings?.formMode == \'Display\'">\n    {{field?.data?.value?.day}}/{{field?.data?.value?.month}}/{{field?.data?.value?.year}}\n  </span>\n\n  \x3c!-- validations --\x3e\n  <div *ngIf="isValidationShown()">\n    <div *ngFor="let error of field?.validationErrors">\n      <p [ngClass]="error.type | translate">\n        {{error.message | translate}}\n      </p>\n    </div>\n  </div>\n</div>\n',styles:[".hijri-date{height:35px}.hijri-date-control{position:relative}.hijri-date-icon-container{position:absolute;top:0;padding:0 6px;background-color:#2399e5;color:#fff;cursor:pointer;height:100%;line-height:1.8;border:0}button.hijri-date-icon-container:disabled{opacity:.35}.hijri-date-icon:focus,.hijri-date-icon:hover{background:#1f89ce}.hijri-date-icon:after{content:'\\e927';font-family:primeicons;font-size:1.25em}body.ar :host ::ng-deep ngb-datepicker ngb-datepicker-navigation .ngb-dp-navigation-chevron{-webkit-transform:rotate(45deg);transform:rotate(45deg)}body.ar :host ::ng-deep ngb-datepicker ngb-datepicker-navigation .right .ngb-dp-navigation-chevron{-webkit-transform:rotate(-135deg);transform:rotate(-135deg)}body.ar :host ::ng-deep .custom-select{background-position:left.75rem center}body.ar :host ::ng-deep .hijri-date-icon-container{left:0}body.en :host ::ng-deep .hijri-date-icon-container{right:0}:host ::ng-deep .custom-select{background-position:left .25rem center!important;direction:rtl!important;min-width:100px}:host ::ng-deep ngb-datepicker-month-view .ngb-dp-day,:host ::ng-deep ngb-datepicker-month-view .ngb-dp-week-number,:host ::ng-deep ngb-datepicker-month-view .ngb-dp-weekday{width:2.5rem;height:2.5rem}:host ::ng-deep ngb-datepicker-month-view .ngb-dp-day div{width:100%;height:100%;line-height:2.5rem}"],providers:[{provide:t.NgbCalendar,useClass:t.NgbCalendarIslamicUmalqura},{provide:t.NgbDatepickerI18n,useClass:H}]}]}],e.ctorParameters=function(){return[{type:P},{type:K}]},e.propDecorators={calendar:[{type:d.ViewChild,args:["input"]}]},e}(Ce),Me=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.validateForRequired=!0,e}return A(e,t),e.prototype.getValue=function(){return this.field.showToolbar?this.field.data.value:this.field.data.value.replace(/<[^>]*>/g,"")},e.decorators=[{type:d.Component,args:[{selector:"ntw-editor-field",template:'<div [class]="field.cssClasses.container"\n     [hidden]="isFieldHidden()"\n     [attr.data-html2canvas-ignore]="field.html2CanvasIgnore">\n\n  \x3c!-- label --\x3e\n  <label [class]="field.cssClasses.label"\n         [for]="field.name">\n    {{field.label | translate}}\n    <span class="required-asterisk"\n          *ngIf="isValidationAsteriskShown()">*</span>\n  </label>\n\n  \x3c!-- input--\x3e\n  <div [ngClass]="{\'hide-toolbar\':!field.showToolbar}">\n    <p-editor [id]="field.name"\n              [name]="field.name"\n              #input="ngModel"\n              [placeholder]="(field.placeholder) ? (field.placeholder | translate) : \'\'"\n              [class]="field.cssClasses.input"\n              [ngClass]="{\'invalid\': isValidationShown()}"\n              [title]="field.tooltip | translate"\n              [readonly]="field.readonly"\n              [(ngModel)]="field.data.value"\n              [style]="{\'height\':field.height}"\n              *ngIf="bridgeService?.configuration?.settings?.formMode != \'Display\'"\n              (onSelectionChange)="triggerDynamicEvent(\'onSelectionChange\', $event, field);"\n              (onTextChange)="triggerDynamicEvent(\'onChange\', $event, field);"\n              (ngModelChange)="validate();">\n    </p-editor>\n  </div>\n\n  \x3c!-- display --\x3e\n  <span [innerHTML]="field.data.value"\n        *ngIf="bridgeService?.configuration?.settings?.formMode == \'Display\'"></span>\n\n  \x3c!-- validations --\x3e\n  <div *ngIf="isValidationShown()">\n    <div *ngFor="let error of field?.validationErrors">\n      <p [ngClass]="error.type | translate">\n        {{error.message | translate}}\n      </p>\n    </div>\n  </div>\n</div>\n',styles:["body.ar :host ::ng-deep .ql-editor p{direction:rtl;text-align:right}body.ar :host ::ng-deep span.ql-picker-label{text-align:left}body.ar :host ::ng-deep .ql-editor.ql-blank::before{left:unset}:host ::ng-deep .hide-toolbar .ui-editor-toolbar{display:none}:host ::ng-deep .hide-toolbar .ui-editor-content{border-top:1px solid #ccc!important}"]}]}],e}(Ce),Te=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return A(t,e),t.prototype.clearValue=function(){this.fileUploadControl&&this.fileUploadControl.clear();for(var e=this.field.data.value.length,t=0;t<e;t++)this.removeFile(this.field.data.value[t]);this.clearValidationErrors()},t.prototype.appendFormData=function(e){if(this.fileUploadControl.files)try{for(var t=L(this.fileUploadControl.files),n=t.next();!n.done;n=t.next()){var i=n.value;e.append(this.field.name,i)}}catch(o){a={error:o}}finally{try{n&&!n.done&&(r=t["return"])&&r.call(t)}finally{if(a)throw a.error}}return e;var a,r},t.prototype.validate=function(e,t){if(this.preValidate(t),this.shouldValidate()){var n=0;if(this.fileUploadControl&&(n="onRemove"===e?this.fileUploadControl.files.length-1:this.fileUploadControl.files.length),this.field.data.value&&(n+=this.field.data.value.length),(this.field.validation.min&&n<this.field.validation.min||this.field.validation.max&&n>this.field.validation.max)&&this.field.validationErrors.push(new le(Ce.ValidationErrorClass,this.field.validation.rangeText)),0<this.field.validation.maxFileSizeInBytes&&this.fileUploadControl&&this.fileUploadControl.msgs)this.fileUploadControl.msgs.find(function(e){return"invalidFileSize"===e.summary})&&this.field.validationErrors.push(new le(Ce.ValidationErrorClass,this.field.validation.invalidFileSizeText)),this.fileUploadControl.msgs.find(function(e){return"invalidFileType"===e.summary})&&this.field.validationErrors.push(new le(Ce.ValidationErrorClass,this.field.validation.invalidFileTypeText));this.updateValidationSummary()}return this.field.validationErrors},t.prototype.removeFile=function(e){this.field.data.value.pop(e)},t.decorators=[{type:d.Component,args:[{selector:"ntw-file-upload-field",template:'<div [class]="field.cssClasses.container"\n     [hidden]="isFieldHidden()"\n     [attr.data-html2canvas-ignore]="field.html2CanvasIgnore">\n\n  \x3c!-- label --\x3e\n  <label [class]="field.cssClasses.label"\n         [for]="field.name">\n    {{field.label | translate}}\n    <span class="required-asterisk"\n          *ngIf="isValidationAsteriskShown()">*</span>\n  </label>\n\n  \x3c!-- input--\x3e\n  <p-fileUpload [id]="field.name"\n                [name]="field.name"\n                [class]="field.cssClasses.input"\n                [ngClass]="{\'invalid\': isValidationShown()}"\n                [url]="field.data.url"\n                [multiple]="field.multiple"\n                [accept]="field.validation.accept"\n                #input\n                [auto]="field.auto"\n                [maxFileSize]="field.validation.maxFileSizeInBytes"\n                [mode]="field.mode"\n                [showCancelButton]="field.buttons.showCancelButton"\n                [showUploadButton]="field.buttons.showUploadButton"\n                [chooseLabel]="field.buttons.chooseLabel | translate"\n                [uploadLabel]="field.buttons.uploadLabel | translate"\n                [cancelLabel]="field.buttons.cancelLabel | translate"\n                [title]="field.tooltip | translate"\n                [disabled]="field.disabled"\n                invalidFileSizeMessageSummary="invalidFileSize"\n                invalidFileSizeMessageDetail="invalidFileSize"\n                invalidFileTypeMessageDetail="invalidFileType"\n                invalidFileTypeMessageSummary="invalidFileType"\n                customUpload=true\n                *ngIf="bridgeService?.configuration?.settings?.formMode != \'Display\'"\n                (onSelect)="validate(\'onSelect\');"\n                (onRemove)="validate(\'onRemove\');"\n                (onClear)="validate(\'onClear\');">\n  </p-fileUpload>\n\n  \x3c!-- display --\x3e\n  <div class="upload-file-viewer"\n       *ngIf="bridgeService?.configuration?.settings?.formMode != \'New\' && field?.data?.value?.length > 0">\n    <div class="upload-file-item"\n         *ngFor="let file of field.data.value">\n      <a [href]="file.url"\n         [download]="file.fileName"\n         target="_blank"\n         class="upload-file-anchor">\n        <span>\n          <i class="fa fa-file"></i>\n        </span>\n        <span class="upload-file-title">{{file.fileName}}</span>\n      </a>\n\n      <a href="javascript:;"\n         (click)="removeFile(file);validate(\'onRemoveFile\');"\n         *ngIf="bridgeService?.configuration?.settings?.formMode != \'Display\'"\n         class="trash-icon-style">\n        <span>\n          <i class="fa fa-times" aria-hidden="true"></i>\n        </span>\n      </a>\n      <div class="clearfix"></div>\n    </div>\n  </div>\n\n  \x3c!-- validations --\x3e\n  <div *ngIf="isValidationShown()">\n    <div *ngFor="let error of field?.validationErrors">\n      <p [ngClass]="error.type | translate">\n        {{error.message | translate}}\n      </p>\n    </div>\n  </div>\n</div>\n',styles:[":host ::ng-deep p-fileupload .ui-messages-error{display:none!important}:host ::ng-deep .ui-fileupload{margin-bottom:8px}.upload-file-viewer{border:1px solid #d5d5d5;padding:10px}.upload-file-viewer .upload-file-item{border:1px solid #d5d5d5;padding:10px;background:linear-gradient(to bottom,#f6f7f9 0,#ebedf0 100%);margin-bottom:10px}.upload-file-title{padding:0 15px}a.upload-file-anchor{line-height:2}.upload-file-viewer div:last-child{margin-bottom:0}a.trash-icon-style{padding:6px 11px;border-radius:6px;font-size:12px;border:1px solid #2399e5;color:#fff;background:#2399e5;transition:background-color .2s}a.trash-icon-style:hover{border:1px solid #1f89ce;background:#1f89ce}body.ar :host ::ng-deep a.trash-icon-style{float:left}body.en :host ::ng-deep a.trash-icon-style{float:right}"]}]}],t.propDecorators={fileUploadControl:[{type:d.ViewChild,args:[p.FileUpload]}]},t}(Ce),Ve=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.imageFile=new Image,e.validateForRequired=!0,e}return A(e,t),e.prototype.ngOnInit=function(){this.initializeCropper()},e.prototype.updateValue=function(e){var t=this;this.field.data.value=e.value,this.isFormInDisplayMode()||(this.imageFile=new Image,this.imageFile.setAttribute("crossOrigin","anonymous"),this.imageFile.src=e.value,setTimeout(function(){t.cropper.setImage(t.imageFile)},1))},e.prototype.clearValue=function(){this.field.data&&(this.field.data.value="",this.fileUploadControl.clear(),this.cropper.reset(),this.imageFile=new Image,this.clearValidationErrors())},e.prototype.setValue=function(){this.croppedImageElement&&(this.field.data.value=this.croppedImageElement.nativeElement.currentSrc)},e.prototype.setCropperImage=function(){var t=this,e=this.fileUploadControl.files[0];if(e){this.imageFile=new Image;var n=new FileReader;this.field.data.value="placeholder",n.onloadend=function(e){t.imageFile.src=e.target.result,t.cropper.setImage(t.imageFile),t.field.data.value=t.imageFile.src},n.readAsDataURL(e)}},e.prototype.initializeCropper=function(){this.cropperSettings=new u.CropperSettings,this.cropperSettings.noFileInput=!0,this.cropperSettings.width=this.cropperSettings.croppedWidth=this.field.cropperSettings.width,this.cropperSettings.height=this.cropperSettings.croppedHeight=this.field.cropperSettings.height,this.cropperSettings.canvasWidth=this.field.cropperSettings.canvasWidth,this.cropperSettings.canvasHeight=this.field.cropperSettings.canvasHeight,this.cropperSettings.minWidth=this.field.cropperSettings.minWidth,this.cropperSettings.minHeight=this.field.cropperSettings.minHeight,this.cropperSettings.rounded=this.field.cropperSettings.rounded},e.decorators=[{type:d.Component,args:[{selector:"ntw-image-cropper-field",template:'<div [class]="field.cssClasses.container"\n     [hidden]="isFieldHidden()"\n     [attr.data-html2canvas-ignore]="field.html2CanvasIgnore">\n\n  \x3c!-- label --\x3e\n  <label [class]="field?.cssClasses?.label"\n         [for]="field.name">\n    {{field.label | translate}}\n    <span class="required-asterisk"\n          *ngIf="isValidationAsteriskShown()">*</span>\n  </label>\n\n  \x3c!-- input --\x3e\n  \x3c!-- upload control --\x3e\n  <p-fileUpload [id]="field.name"\n                [name]="field.name"\n                [class]="field.cssClasses.input"\n                [ngClass]="{\'invalid\': isValidationShown()}"\n                accept="image/*"\n                mode="advanced"\n                [showCancelButton]=false\n                [showUploadButton]=false\n                [chooseLabel]="field.buttons.chooseLabel | translate"\n                [title]="field.tooltip | translate"\n                [disabled]="field.disabled"\n                invalidFileSizeMessageSummary="invalidFileSize"\n                invalidFileSizeMessageDetail="invalidFileSize"\n                invalidFileTypeMessageDetail="invalidFileType"\n                invalidFileTypeMessageSummary="invalidFileType"\n                customUpload=true\n                *ngIf="bridgeService?.configuration?.settings?.formMode != \'Display\'"\n                (onSelect)="setCropperImage();validate();"\n                (onRemove)="clearValue();validate();">\n  </p-fileUpload>\n\n  \x3c!-- cropper --\x3e\n  <img-cropper *ngIf="bridgeService?.configuration?.settings?.formMode != \'Display\'"\n               [hidden]="!imageFile.src"\n               [image]="imageFile"\n               [settings]="cropperSettings"\n               (onCrop)="setValue()">\n  </img-cropper>\n\n  \x3c!-- cropped image --\x3e\n  <span class="cropped-image"\n        *ngIf="bridgeService?.configuration?.settings?.formMode != \'Display\'"\n        [hidden]=" !imageFile.image">\n    <img #croppedImage\n         *ngIf="imageFile.image"\n         [src]="imageFile.image"\n         [width]="cropperSettings.width"\n         [height]="cropperSettings.height">\n  </span>\n\n  \x3c!-- display --\x3e\n  <span [class]="field.cssClasses.display"\n        *ngIf="bridgeService?.configuration?.settings?.formMode == \'Display\'">\n    <img *ngIf="field.data.value"\n         [src]="field.data.value"\n         [width]="cropperSettings.width"\n         [height]="cropperSettings.height">\n  </span>\n\n  \x3c!-- validations --\x3e\n  <div *ngIf="isValidationShown()">\n    <div *ngFor="let error of field?.validationErrors">\n      <p [ngClass]="error.type | translate">\n        {{error.message | translate}}\n      </p>\n    </div>\n  </div>\n</div>\n',styles:["input.form-input{border:1px solid #ced4da;border-radius:.25rem;padding:5px}p-fileupload{display:block}:host ::ng-deep img-cropper .ng2-imgcrop{border:1px solid #d5d5d5;padding:20px 0;background-color:#ebedf0;width:100%;margin:10px 0;display:block}.form-display img{border:1px solid #d5d5d5;background-color:#ebedf0;padding:10px}.cropped-image{width:100%;display:block;border:1px solid #d5d5d5;background-color:#ebedf0;margin:0 auto;text-align:center;padding:10px}"]}]}],e.propDecorators={cropper:[{type:d.ViewChild,args:[u.ImageCropperComponent]}],croppedImageElement:[{type:d.ViewChild,args:["croppedImage"]}],fileUploadControl:[{type:d.ViewChild,args:[p.FileUpload]}]},e}(Ce),Ee=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return A(t,e),t.decorators=[{type:d.Component,args:[{selector:"ntw-info-field",template:'<div [class]="field.cssClasses.container"\n     [hidden]="isFieldHidden()"\n     [attr.data-html2canvas-ignore]="field.html2CanvasIgnore">\n  <div [innerHTML]="field.htmlSnippet | translate"></div>\n</div>\n',styles:[""]}]}],t}(Ce),Pe=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.validateForRequired=!0,e.validateForPattern=!0,e}return A(e,t),e.decorators=[{type:d.Component,args:[{selector:"ntw-input-field",template:'<div [class]="field.cssClasses.container"\n     [hidden]="isFieldHidden()"\n     [attr.data-html2canvas-ignore]="field.html2CanvasIgnore">\n\n  \x3c!-- label --\x3e\n  <label [class]="field.cssClasses.label"\n         [for]="field.name">\n    {{field.label | translate}}\n    <span class="required-asterisk"\n          *ngIf="isValidationAsteriskShown()">*</span>\n  </label>\n\n  \x3c!-- input--\x3e\n  <input [id]="field.name"\n         [name]="field.name"\n         [(ngModel)]="field.data.value"\n         [class]="field.cssClasses.input"\n         [ngClass]="{\'invalid\': isValidationShown()}"\n         [placeholder]="(field.placeholder) ? (field.placeholder | translate) : \'\'"\n         [title]="field.tooltip | translate"\n         [autocomplete]="field.autoComplete"\n         #input="ngModel"\n         [type]="field.fieldType"\n         [required]="field.validation.required"\n         [pattern]="field.validation.pattern"\n         [maxlength]="field.validation.length"\n         [readonly]="field.readonly"\n         [disabled]="field.disabled"\n         *ngIf="bridgeService?.configuration?.settings?.formMode != \'Display\'"\n         (ngModelChange)="validate();triggerDynamicEvent(\'onChange\', $event, field);">\n\n  \x3c!-- display --\x3e\n  <span [class]="field.cssClasses.display"\n        *ngIf="bridgeService?.configuration?.settings?.formMode == \'Display\'">\n    {{field.data.value}}\n  </span>\n\n  \x3c!-- validations --\x3e\n  <div *ngIf="isValidationShown()">\n    <div *ngFor="let error of field?.validationErrors">\n      <p [ngClass]="error.type | translate">\n        {{error.message | translate}}\n      </p>\n    </div>\n  </div>\n</div>\n',styles:["input.form-input{border:1px solid #ced4da;border-radius:.25rem;padding:5px}"]}]}],e}(Ce),Re=function(a){function e(e,t,n){var i=a.call(this,e)||this;return i.bridgeService=e,i.mapsAPILoader=t,i.ngZone=n,i.validateForRange=!0,i}return A(e,a),e.prototype.handleDefaultSettings=function(){var t=this;this.field.defaultLocation&&this.field.defaultLocation.latitude&&this.field.defaultLocation.longitude||"geolocation"in navigator&&navigator.geolocation.getCurrentPosition(function(e){t.field.defaultLocation={latitude:e.coords.latitude,longitude:e.coords.longitude}})},e.prototype.updateValue=function(e){try{for(var t=L(e.value),n=t.next();!n.done;n=t.next()){var i=n.value;this.addMarkersFromLocation(i.latitude,i.longitude)}}catch(o){a={error:o}}finally{try{n&&!n.done&&(r=t["return"])&&r.call(t)}finally{if(a)throw a.error}}var a,r},e.prototype.clearValue=function(){this.field.data&&(this.field.data.value=[],this.clearValidationErrors())},e.prototype.appendFormData=function(e){if(this.field.data&&this.field.data.value)for(var t=0;t<this.field.data.value.length;t++){var n=this.field.data.value[t];e.append(this.field.name+"["+t+"].latitude",n.latitude),e.append(this.field.name+"["+t+"].longitude",n.longitude)}return e},e.prototype.addMarkers=function(e){this.isFormInDisplayMode()||this.addMarkersFromLocation(e.coords.lat,e.coords.lng)},e.prototype.activateSearchInput=function(){var r=this;this.searchElement&&this.mapsAPILoader.load().then(function(){var i=r.bridgeService.configuration.mergedFields.find(function(e){return e.name===r.searchElement.nativeElement.id}),a=new google.maps.places.Autocomplete(r.searchElement.nativeElement,{});a.addListener("place_changed",function(){r.ngZone.run(function(){var e=a.getPlace();if(e.geometry!==undefined&&null!==e.geometry){var t=e.geometry.location.lat(),n=e.geometry.location.lng();i.defaultLocation={latitude:t,longitude:n},i.zoom=12;new se(e.geometry.location.lat(),e.geometry.location.lng(),i.markerSettings.defaultNewMarker.draggable,i.markerSettings.defaultNewMarker.infoHtml);r.addMarkersFromLocation(t,n)}})})})},e.prototype.addMarkersFromLocation=function(e,t){if(this.field.data.value||(this.field.data.value=[]),0<this.field.validation.max&&this.field.data.value.length<this.field.validation.max){var n=new se(e,t,this.field.markerSettings.defaultNewMarker.draggable,this.field.markerSettings.defaultNewMarker.infoHtml);n.eventTriggers=this.field.markerSettings.defaultNewMarker.eventTriggers,this.field.data.value.push(n)}},e.prototype.updateMarkerPosition=function(e,t){e.latitude=t.coords.lat,e.longitude=t.coords.lng},e.decorators=[{type:d.Component,args:[{selector:"ntw-location-field",template:'<div [class]="field.cssClasses.container"\n     [hidden]="isFieldHidden()"\n     [attr.data-html2canvas-ignore]="field.html2CanvasIgnore">\n\n  \x3c!-- label --\x3e\n  <label [class]="field.cssClasses.label"\n         [for]="field.name">\n    {{field.label | translate}}\n    <span class="required-asterisk"\n          *ngIf="isValidationAsteriskShown()">*</span>\n  </label>\n\n  <div class="search-location-container"\n       *ngIf="bridgeService?.configuration?.settings?.formMode != \'Display\'">\n    \x3c!-- input && display --\x3e\n    <input #search\n           [id]="field.name"\n           [name]="field.name"\n           [title]="field.tooltip | translate"\n           [placeholder]="(field.placeholder) ? (field.placeholder | translate) : \'\'"\n           autocorrect="off"\n           autocapitalize="off"\n           spellcheck="false"\n           type="text"\n           [class]="field.cssClasses.input"\n           (keydown.enter)="$event.preventDefault()">\n\n    \x3c!-- icon --\x3e\n    <span class="search-location-icon">\n    </span>\n  </div>\n\n  <agm-map [latitude]="field.defaultLocation?.latitude"\n           [longitude]="field.defaultLocation?.longitude"\n           [zoom]="field.zoom"\n           [zoomControl]="field.zoomControl"\n           [ngClass]="{\'invalid\': isValidationShown()}"\n           (mapClick)="addMarkers($event);validate();">\n\n    <agm-marker *ngFor="let marker of field.data.value"\n                (markerClick)="triggerDynamicEvent(\'markerClick\', $event, marker);"\n                [latitude]="marker.latitude"\n                [longitude]="marker.longitude"\n                [markerDraggable]="marker.draggable && bridgeService?.configuration?.settings?.formMode != \'Display\'"\n                (dragEnd)="updateMarkerPosition(marker, $event)">\n\n      <agm-info-window *ngIf="marker.infoHtml">\n        <div [innerHTML]="marker.infoHtml | translate"></div>\n      </agm-info-window>\n    </agm-marker>\n  </agm-map>\n\n  \x3c!-- validations --\x3e\n  <div *ngIf="isValidationShown()">\n    <div *ngFor="let error of field?.validationErrors">\n      <p [ngClass]="error.type | translate">\n        {{error.message | translate}}\n      </p>\n    </div>\n  </div>\n</div>\n',styles:['agm-map{width:100%;height:300px}span.search-location-icon:after{content:"\\f002";font:14px/2.5 FontAwesome;position:absolute;height:100%;color:#555}.search-location-container{position:relative}body.en :host ::ng-deep span.search-location-icon:after{right:5px;-webkit-transform:rotate(90deg);transform:rotate(90deg)}body.ar :host ::ng-deep span.search-location-icon:after{left:5px}input.form-input{border:1px solid #ced4da;border-radius:.25rem;padding:5px}']}]}],e.ctorParameters=function(){return[{type:P},{type:f.MapsAPILoader},{type:d.NgZone}]},e.propDecorators={searchElement:[{type:d.ViewChild,args:["search"]}]},e}(Ce),Ae=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.validateForRequired=!0,e.validateForPattern=!0,e}return A(e,t),e.prototype.updateMask=function(e){this.inputMask._mask=e,this.inputMask.initMask(),this.inputMask.inputViewChild.nativeElement.blur(),this.inputMask.inputViewChild.nativeElement.focus()},e.prototype.updateMaskValue=function(e){this.inputMask.writeValue(e)},e.decorators=[{type:d.Component,args:[{selector:"ntw-mask-field",template:'<div [class]="field.cssClasses.container"\n     [hidden]="isFieldHidden()"\n     [attr.data-html2canvas-ignore]="field.html2CanvasIgnore">\n\n  \x3c!-- label --\x3e\n  <label [class]="field.cssClasses.label"\n         [for]="field.name">\n    {{field.label | translate}}\n    <span class="required-asterisk"\n          *ngIf="isValidationAsteriskShown()">*</span>\n  </label>\n\n  \x3c!-- input--\x3e\n  <p-inputMask [id]="field.name"\n               [name]="field.name"\n               [class]="field.cssClasses.input"\n               [ngClass]="{\'invalid\': isValidationShown()}"\n               [title]="field.tooltip | translate"\n               [placeholder]="(field.placeholder) ? (field.placeholder | translate) : \'\'"\n               #input="ngModel"\n               [readonly]="field.readonly"\n               [(ngModel)]="field.data.value"\n               [mask]="field.validation.mask"\n               [slotChar]="field.slotChar"\n               [autoClear]="field.autoClear"\n               [unmask]="field.unmask"\n               [disabled]="field.disabled"\n               [maxlength]="field.validation.length"\n               [characterPattern]="field.validation.characterPattern"\n               [pattern]="field.validation.pattern"\n               *ngIf="bridgeService?.configuration?.settings?.formMode != \'Display\'"\n               (ngModelChange)="validate();triggerDynamicEvent(\'onChange\', $event, field);">\n  </p-inputMask>\n\n  \x3c!-- display --\x3e\n  <span [class]="field.cssClasses.display"\n        *ngIf="bridgeService?.configuration?.settings?.formMode == \'Display\'">\n    {{field.data.value}}\n  </span>\n\n  \x3c!-- validations --\x3e\n  <div *ngIf="isValidationShown()">\n    <div *ngFor="let error of field?.validationErrors">\n      <p [ngClass]="error.type | translate">\n        {{error.message | translate}}\n      </p>\n    </div>\n  </div>\n</div>\n',styles:[""]}]}],e.propDecorators={inputMask:[{type:d.ViewChild,args:[m.InputMask]}]},e}(Ce),qe=function(){function e(e,t){this.dialogRef=e,this.field=t}return e.prototype.addChild=function(e,t){},e.decorators=[{type:d.Component,args:[{selector:"ntw-default-master-detail-form",template:'<mat-dialog-actions>\n    <button mat-dialog-close mat-button>\n        <i class="fa fa-times-circle"\n           aria-hidden="true">\n        </i>\n    </button>\n</mat-dialog-actions>\n\n<mat-dialog-content>\n    <ntw-dynamic-form #detailsForm\n                      [parentComponent]="this"\n                      [configurationSourceUrl]="field.details.configurationSourceUrl">\n    </ntw-dynamic-form>\n</mat-dialog-content>\n',styles:[""]}]}],e.ctorParameters=function(){return[{type:a.MatDialogRef},{type:ae,decorators:[{type:d.Inject,args:[a.MAT_DIALOG_DATA]}]}]},e.propDecorators={detailsFormComponent:[{type:d.ViewChild,args:["detailsForm"]}]},e}(),Oe=function(i){function e(e,t){var n=i.call(this,e)||this;return n.bridgeService=e,n.dialog=t,n.validateForRange=!0,n}return A(e,i),e.prototype.openDialog=function(){this.dialog.open(qe,{data:this.field}).afterClosed().subscribe(function(e){console.log(e)})},e.decorators=[{type:d.Component,args:[{selector:"ntw-master-detail-field",template:'<div [class]="field.cssClasses.container"\n     [hidden]="isFieldHidden()"\n     [attr.data-html2canvas-ignore]="field.html2CanvasIgnore">\n\n  \x3c!-- label --\x3e\n  <label [class]="field.cssClasses.label"\n         [for]="field.name">\n    {{field.label | translate}}\n    <span class="required-asterisk"\n          *ngIf="isValidationAsteriskShown()">*</span>\n  </label>\n\n  \x3c!-- input--\x3e\n  <div>\n    <a href="javascript:;"\n       (click)="openDialog();">\n      <i class="fa fa-plus"></i>\n    </a>\n  </div>\n\n  \x3c!-- display --\x3e\n  <span [class]="field.cssClasses.display"\n        *ngIf="bridgeService?.configuration?.settings?.formMode == \'Display\'">\n\n  </span>\n\n  \x3c!-- validations --\x3e\n  <div *ngIf="isValidationShown()">\n    <div *ngFor="let error of field?.validationErrors">\n      <p [ngClass]="error.type | translate">\n        {{error.message | translate}}\n      </p>\n    </div>\n  </div>\n</div>\n',styles:[""]}]}],e.ctorParameters=function(){return[{type:P},{type:a.MatDialog}]},e}(Ce),Le=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.validateForRange=!0,e}return A(e,t),e.prototype.clearValue=function(){this.field.data&&(this.field.data.value=[],this.control.reset(),this.clearValidationErrors())},e.prototype.appendFormData=function(e){if(this.field.data&&this.field.data.value)for(var t=0;t<this.field.data.value.length;t++){var n=this.field.data.value[t];e.append(this.field.name+"["+t+"].id",n.id)}return e},e.decorators=[{type:d.Component,args:[{selector:"ntw-multi-select-field",template:'<div [class]="field.cssClasses.container"\n     [hidden]="isFieldHidden()"\n     [attr.data-html2canvas-ignore]="field.html2CanvasIgnore">\n\n  \x3c!-- label --\x3e\n  <label [class]="field.cssClasses.label"\n         [for]="field.name">\n    {{field.label | translate}}\n    <span class="required-asterisk"\n          *ngIf="isValidationAsteriskShown()">*</span>\n  </label>\n\n  \x3c!-- input--\x3e\n  <p-multiSelect [options]="field.data.options"\n                 [id]="field.name"\n                 [name]="field.name"\n                 [class]="field.cssClasses.input"\n                 [ngClass]="{\'invalid\': isValidationShown()}"\n                 [title]="field.tooltip | translate"\n                 #input="ngModel"\n                 [filterPlaceHolder]="field.placeholder | translate"\n                 [(ngModel)]="field.data.value"\n                 [required]="field.validation.required"\n                 [disabled]="field.disabled"\n                 [filter]="field.enablefilter"\n                 optionLabel="name"\n                 dataKey="id"\n                 [defaultLabel]="field.placeholder | translate"\n                 *ngIf="bridgeService?.configuration?.settings?.formMode != \'Display\'"\n                 (onChange)="triggerDynamicEvent(\'onChange\', $event, field);"\n                 (ngModelChange)="validate();">\n  </p-multiSelect>\n\n  \x3c!-- display --\x3e\n  <div [class]="field.cssClasses.display"\n       *ngIf="bridgeService?.configuration?.settings?.formMode == \'Display\'">\n    <ul>\n      <li *ngFor="let item of field?.data?.value">{{item.name}}</li>\n    </ul>\n  </div>\n\n  \x3c!-- validations --\x3e\n  <div *ngIf="isValidationShown()">\n    <div *ngFor="let error of field?.validationErrors">\n      <p [ngClass]="error.type | translate">\n        {{error.message | translate}}\n      </p>\n    </div>\n  </div>\n</div>\n',styles:[":host ::ng-deep .ui-multiselect.ui-widget{width:100%}:host ::ng-deep p-multiselect .ui-multiselect-label.ui-corner-all{margin-bottom:0;height:35px}body.ar :host ::ng-deep .ui-multiselect-filter-container{float:right}body.ar :host ::ng-deep .ui-multiselect-header .ui-multiselect-close{right:unset;left:.375em}body.ar :host ::ng-deep .ui-multiselect-panel .ui-multiselect-item{text-align:right!important}body.ar :host ::ng-deep p-multiselect .ui-corner-right{left:0;right:unset;border-right:1px solid #d6d6d6;border-left:0;border-top-right-radius:0;border-bottom-right-radius:0}body.ar :host ::ng-deep p-multiselect .ui-multiselect-label.ui-corner-all{padding-right:5px}"]}]}],e}(Se),Ue=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.validateForRequired=!0,e}return A(e,t),e.decorators=[{type:d.Component,args:[{selector:"ntw-radiobutton-field",template:'<div [class]="field.cssClasses.container"\n     [hidden]="isFieldHidden()"\n     [attr.data-html2canvas-ignore]="field.html2CanvasIgnore">\n\n  \x3c!-- label --\x3e\n  <label [class]="field.cssClasses.label"\n         [for]="field.name">\n    {{field.label | translate}}\n    <span class="required-asterisk"\n          *ngIf="isValidationAsteriskShown()">*</span>\n  </label>\n\n  \x3c!-- input--\x3e\n  <div class="radioButtonHolder"\n       *ngIf="bridgeService?.configuration?.settings?.formMode != \'Display\'">\n    <p-radioButton *ngFor="let radiobutton of field.data.options; let i = index"\n                   [id]="field.name+\'_\'+i"\n                   [name]="field.name"\n                   [(ngModel)]="field.data.value"\n                   [class]="field.cssClasses.input"\n                   [ngClass]="{\'invalid\': isValidationShown()}"\n                   [title]="field.tooltip | translate"\n                   #input="ngModel"\n                   [required]="field.validation.required"\n                   [label]=" radiobutton.name | translate"\n                   [value]="radiobutton.id"\n                   [disabled]="field.disabled"\n                   (onClick)="triggerDynamicEvent(\'onClick\', $event, field);"\n                   (ngModelChange)="validate();">\n    </p-radioButton>\n  </div>\n\n  \x3c!-- display --\x3e\n  <span [class]="field.cssClasses.display"\n        *ngIf="bridgeService?.configuration?.settings?.formMode == \'Display\'">\n    {{field?.data?.value}}\n  </span>\n\n  \x3c!-- validations --\x3e\n  <div *ngIf="isValidationShown()">\n    <div *ngFor="let error of field?.validationErrors">\n      <p [ngClass]="error.type | translate">\n        {{error.message | translate}}\n      </p>\n    </div>\n  </div>\n</div>\n',styles:["p-radiobutton{display:block}"]}]}],e}(Se),He=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.validateForRequired=!0,e}return A(e,t),e.prototype.handleDefaultSettings=function(){this.isFormInDisplayMode()&&(this.field.readonly=!0),this.field.iconCancelClass||(this.field.iconCancelClass="pi pi- ban"),this.field.iconOnClass||(this.field.iconOnClass="pi pi-star"),this.field.iconOffClass||(this.field.iconOffClass="pi pi-star-o")},e.decorators=[{type:d.Component,args:[{selector:"ntw-rating-field",template:'<div [class]="field.cssClasses.container"\n     [hidden]="isFieldHidden()"\n     [attr.data-html2canvas-ignore]="field.html2CanvasIgnore">\n\n  \x3c!-- label --\x3e\n  <label [class]="field?.cssClasses?.label"\n         [for]="field.name">\n    {{field.label | translate}}\n    <span class="required-asterisk"\n          *ngIf="isValidationAsteriskShown()">*</span>\n  </label>\n\n  \x3c!-- input & display --\x3e\n  <p-rating [id]="field.name"\n            [name]="field.name"\n            [(ngModel)]="field.data.value"\n            [class]="field.cssClasses.input"\n            [ngClass]="{\'invalid\': isValidationShown()}"\n            [title]="field.tooltip | translate"\n            [readonly]="field.readonly"\n            [disabled]="field.disabled"\n            [stars]="field.starNumber"\n            [iconCancelClass]="field.iconCancelClass"\n            [iconOnClass]="field.iconOnClass"\n            [iconOffClass]="field.iconOffClass"\n            [cancel]="field.cancelIcon && !field.readonly"\n            (onRate)="triggerDynamicEvent(\'onRate\', $event, field);validate();"\n            (onCancel)="triggerDynamicEvent(\'onCancel\', $event, field);validate();">\n  </p-rating>\n\n  \x3c!-- validations --\x3e\n  <div *ngIf="isValidationShown()">\n    <div *ngFor="let error of field?.validationErrors">\n      <p [ngClass]="error.type | translate">\n        {{error.message | translate}}\n      </p>\n    </div>\n  </div>\n</div>\n',styles:[""]}]}],e}(Ce),je=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.validateForRequired=!0,e}return A(e,t),e.prototype.appendFormData=function(e){return this.field.data&&this.field.data.value&&e.append(this.field.name+".id",this.field.data.value.id),e},e.decorators=[{type:d.Component,args:[{selector:"ntw-select-field",template:'<div [class]="field.cssClasses.container"\n     [hidden]="isFieldHidden()"\n     [attr.data-html2canvas-ignore]="field.html2CanvasIgnore">\n\n  \x3c!-- label --\x3e\n  <label [class]="field.cssClasses.label"\n         [for]="field.name">\n    {{field.label | translate}}\n    <span class="required-asterisk"\n          *ngIf="isValidationAsteriskShown()">*</span>\n  </label>\n\n  \x3c!-- input--\x3e\n  <p-dropdown [options]="field.data.options"\n              [id]="field.name"\n              [name]="field.name"\n              [class]="field.cssClasses.input"\n              [ngClass]="{\'invalid\': isValidationShown()}"\n              [title]="field.tooltip | translate"\n              #input="ngModel"\n              [placeholder]="(field.placeholder) ? (field.placeholder | translate) : \'\'"\n              [(ngModel)]="field.data.value"\n              [required]="field.validation.required"\n              [disabled]="field.disabled"\n              [filter]="field.enablefilter"\n              optionLabel="name"\n              dataKey="id"\n              *ngIf="bridgeService?.configuration?.settings?.formMode != \'Display\'"\n              (onChange)="validate();triggerDynamicEvent(\'onChange\', $event, field);">\n  </p-dropdown>\n\n  \x3c!-- display --\x3e\n  <span [class]="field.cssClasses.display"\n        *ngIf="bridgeService?.configuration?.settings?.formMode == \'Display\'">\n    {{field?.data?.value?.name}}\n  </span>\n\n  \x3c!-- validations --\x3e\n  <div *ngIf="isValidationShown()">\n    <div *ngFor="let error of field?.validationErrors">\n      <p [ngClass]="error.type | translate">\n        {{error.message | translate}}\n      </p>\n    </div>\n  </div>\n</div>\n',styles:["body.ar :host ::ng-deep .ui-dropdown-panel .ui-dropdown-item{text-align:right}body.ar :host ::ng-deep p-dropdown .ui-dropdown .ui-dropdown-trigger{left:0;right:unset;border-right:1px solid #d6d6d6;border-left:0;border-top-right-radius:0;border-bottom-right-radius:0}body.ar :host ::ng-deep .ui-dropdown .ui-dropdown-label{padding-right:5px}"]}]}],e}(Se),Ne=function(i){function e(e,t){var n=i.call(this,e)||this;return n.bridgeService=e,n.utilitiesService=t,n.validateForRequired=!0,n}return A(e,i),e.prototype.handleDefaultSettings=function(){this.field.data.value=this.utilitiesService.evaluateFunctionOrDefault(this.field.setTime,this.field.setTime)},e.prototype.clearValue=function(){this.field.data&&(this.field.data.value=this.utilitiesService.evaluateFunctionOrDefault(this.field.setTime,this.field.setTime))},e.prototype.appendFormData=function(e){return this.field.data&&this.field.data.value&&(e.append(this.field.name+".hour",this.field.data.value.hour),e.append(this.field.name+".minute",this.field.data.value.minute),e.append(this.field.name+".meriden",this.field.data.value.meriden),e.append(this.field.name+".format",this.field.data.value.format)),e},e.prototype.setTimePickerFieldValue=function(e){this.field.data.value=e},e.decorators=[{type:d.Component,args:[{selector:"ntw-time-field",template:'<div [class]="field.cssClasses.container"\n     [hidden]="isFieldHidden()"\n     [attr.data-html2canvas-ignore]="field.html2CanvasIgnore">\n\n  \x3c!-- label --\x3e\n  <label [class]="field.cssClasses.label"\n         [for]="field.name">\n    {{field.label | translate}}\n    <span class="required-asterisk"\n          *ngIf="isValidationAsteriskShown()">*</span>\n  </label>\n\n  \x3c!-- input--\x3e\n  <ntw-mat-timepicker color="primary"\n                      [inputClass]="field.cssClasses.input"\n                      [ngClass]="{\'invalid\': isValidationShown()}"\n                      [inputId]="field.name"\n                      [inputName]="field.name"\n                      [disabled]="field.disabled"\n                      readonly=true\n                      [tooltip]="field.tooltip | translate"\n                      [placeholderValue]="field.tooltip | translate"\n                      [(userTime)]="field.data.value"\n                      *ngIf="bridgeService?.configuration?.settings?.formMode != \'Display\'"\n                      (userTimeChange)="setTimePickerFieldValue($event);validate();triggerDynamicEvent(\'onChange\', $event, field);">\n  </ntw-mat-timepicker>\n\n  \x3c!-- display --\x3e\n  <span [class]="field.cssClasses.display"\n        *ngIf="bridgeService?.configuration?.settings?.formMode == \'Display\'">\n    {{field?.data?.value?.hour}}:{{field?.data?.value?.minute}}\n    <span *ngIf="field?.data?.value?.format == 12">{{field?.data?.value?.meriden | translate}}</span>\n  </span>\n\n  \x3c!-- validations --\x3e\n  <div *ngIf="isValidationShown()">\n    <div *ngFor="let error of field?.validationErrors">\n      <p [ngClass]="error.type | translate">\n        {{error.message | translate}}\n      </p>\n    </div>\n  </div>\n</div>\n',styles:[":host ::ng-deep .time-picker-button.mat-button{position:absolute;border:1px solid #2399e5;color:#fff;background:#2399e5;transition:background-color .2s;height:35px}body.en :host ::ng-deep .time-picker-button.mat-button{right:15px}body.ar :host ::ng-deep .time-picker-button.mat-button{left:15px}:host ::ng-deep .w-mat-timepicker .mat-button,:host ::ng-deep .w-mat-timepicker .mat-flat-button,:host ::ng-deep .w-mat-timepicker .mat-icon-button,:host ::ng-deep .w-mat-timepicker .mat-stroked-button{line-height:32px}:host ::ng-deep input.form-input{border:1px solid #ced4da;border-radius:.25rem;padding:5px}"]}]}],e.ctorParameters=function(){return[{type:P},{type:K}]},e}(Ce),Be=function(i){function e(e,t){var n=i.call(this,e)||this;return n.bridgeService=e,n.languageService=t,n}return A(e,i),e.prototype.clearValue=function(){this.isValid=!1,this.clearValidationErrors()},e.prototype.validate=function(e,t){return this.preValidate(t),this.shouldValidate()&&(this.field.validation.required&&(t||(this.isValid=null!=e),this.isValid||this.field.validationErrors.push(new le(Ce.ValidationErrorClass,this.field.validation.requiredText))),this.updateValidationSummary()),this.field.validationErrors},e.prototype.setCaptchaLanguge=function(){var e=this.languageService.getLanguage();if(this.recaptchaElement){var t=this.recaptchaElement.elementRef.nativeElement.querySelector("iframe");if(t){var n=t.getAttribute("src");t.setAttribute("src",n.replace(/hl=(.*?)&/,"hl="+e+"&"))}}this.isValid=!1,this.clearValidationErrors()},e.decorators=[{type:d.Component,args:[{selector:"ntw-recaptcha-field",template:'<div [class]="field.cssClasses.container"\n     [hidden]="isFieldHidden()"\n     [attr.data-html2canvas-ignore]="field.html2CanvasIgnore">\n\n  \x3c!-- label --\x3e\n  <label [class]="field.cssClasses.label">\n    {{field.label | translate}}\n    <span class="required-asterisk"\n          *ngIf="isValidationAsteriskShown()">*</span>\n  </label>\n\n  \x3c!-- input--\x3e\n  <re-captcha #recaptcha\n              [id]="field.name"\n              [siteKey]="field.siteKey"\n              [class]="field.cssClasses.input"\n              [ngClass]="{\'invalid\': isValidationShown()}"\n              [theme]="field.theme"\n              [size]="field.size"\n              [title]="field.tooltip | translate"\n              (resolved)="validate($event);">\n  </re-captcha>\n\n  \x3c!-- validations --\x3e\n  <div *ngIf="isValidationShown()">\n    <div *ngFor="let error of field?.validationErrors">\n      <p [ngClass]="error.type | translate">\n        {{error.message | translate}}\n      </p>\n    </div>\n  </div>\n</div>\n',styles:[""]}]}],e.ctorParameters=function(){return[{type:P},{type:_}]},e.propDecorators={recaptchaElement:[{type:d.ViewChild,args:["recaptcha"]}]},e}(Ce),_e=function(){function e(e){this.bridgeService=e}return e.prototype.incrementSection=function(e){var t=this.bridgeService.configuration.currentSection.id+e;0===t?t=this.bridgeService.configuration.sections.length:t===this.bridgeService.configuration.sections.length+1&&(t=1),this.bridgeService.configuration.currentSection=this.bridgeService.configuration.sections.find(function(e){return e.id===t})},e.decorators=[{type:d.Component,args:[{selector:"ntw-next-previous-section",template:'<div class="next-prev-container">\n  <a class="arrow-prev"\n     href="javascript:;"\n     (click)="incrementSection(-1)"\n     title="{{\'buttons.Previous\' | translate}}">\n  </a>\n  <span class="next-prev-header">{{bridgeService.configuration?.currentSection?.legend | translate}}</span>\n  <a class="arrow-next"\n     href="javascript:;"\n     (click)="incrementSection(1)"\n     title="{{\'buttons.Next\' | translate}}">\n  </a>\n</div>\n',styles:['.next-prev-container a{text-decoration:none!important}.next-prev-container{text-align:center}.next-prev-header{font-size:2em;font-weight:700}body.en :host ::ng-deep a.arrow-prev:before{content:"\\f104";font:3em/1 FontAwesome;color:#555565}body.en :host ::ng-deep a.arrow-next:before{content:"\\f105";font:3em/1 FontAwesome;color:#555565}body.en :host ::ng-deep a.arrow-next{float:right}body.en :host ::ng-deep a.arrow-prev{float:left}body.ar :host ::ng-deep a.arrow-prev:before{content:"\\f105";font:3em/1 FontAwesome;color:#555565}body.ar :host ::ng-deep a.arrow-next:before{content:"\\f104";font:3em/1 FontAwesome;color:#555565}body.ar :host ::ng-deep a.arrow-next{float:left}body.ar :host ::ng-deep a.arrow-prev{float:right}']}]}],e.ctorParameters=function(){return[{type:P}]},e}(),ze=function(){function e(e){this.bridgeService=e}return e.prototype.switchSection=function(e){this.bridgeService.configuration.currentSection=e},e.decorators=[{type:d.Component,args:[{selector:"ntw-tabs-section",template:'<ul class="nav nav-tabs">\n  <li *ngFor="let section of bridgeService?.configuration?.sections"\n      class="nav-item">\n    <a class="nav-link"\n       href="javascript:;"\n       [ngClass]="{\'active\':section.id==bridgeService?.configuration?.currentSection?.id}"\n       (click)="switchSection(section)">\n      <span>{{section.legend | translate}}</span>\n      <span class="validation-errors-count"\n            *ngIf="section.validationErrorsCount > 0">\n      </span>\n    </a>\n  </li>\n</ul>\n',styles:[""]}]}],e.ctorParameters=function(){return[{type:P}]},e}(),We=function(){function e(e,t,n){this.bridgeService=e,this.languageService=t,this.changeDetectorRef=n}return e.prototype.showSummaryAlert=function(){this.bridgeService.configuration.settings.validationSummaryMode===X.Alert&&(this.changeDetectorRef.detectChanges(),g({html:this.validationSummaryElement.nativeElement.innerHTML,type:ne.Warning,confirmButtonText:this.languageService.translations.buttons.Ok}))},e.decorators=[{type:d.Component,args:[{selector:"ntw-validation-summary",template:'<div #validationSummary\n     class="validation-summary-container"\n     [hidden]="bridgeService?.configuration?.settings?.validationSummaryMode !=\'List\'">\n  <div class="validation-summary"\n       *ngIf="bridgeService?.configuration?.validationErrors?.length > 0">\n    <span class="validation-summary-title-section">{{\'validations.ValidationSummaryErrors\' | translate}}</span>\n    <ul>\n      <li class="validation-summary-error" *ngFor="let error of bridgeService?.configuration?.validationErrors">\n        {{error.message | translate}}\n      </li>\n    </ul>\n  </div>\n</div>\n',styles:[".validation-summary{border:1px solid #d6d6d6;padding-top:15px;color:red;margin-bottom:20px}.validation-summary-title-section{font-weight:700;padding:15px 20px;display:block}.validation-summary-container{margin-top:20px}"]}]}],e.ctorParameters=function(){return[{type:P},{type:_},{type:d.ChangeDetectorRef}]},e.propDecorators={validationSummaryElement:[{type:d.ViewChild,args:["validationSummary"]}]},e}(),$e=function(){function e(){}return e.decorators=[{type:d.Component,args:[{selector:"ntw-progress-indicator",template:'<div class="progress-indicator-container"\n     *ngIf="spinnerSourceUrl">\n  <div class="progress-indicator">\n    <img [src]="spinnerSourceUrl"\n         class="progress-indicator-image"\n         alt="progress" />\n  </div>\n</div>\n',styles:[""]}]}],e.propDecorators={spinnerSourceUrl:[{type:d.Input,args:["spinnerSourceUrl"]}]},e}(),Ke=function(){function e(e,t,n,i,a,r,o,l,s){this.bridgeService=e,this.httpRequestsService=t,this.localStorageService=n,this.utilitiesService=i,this.translateService=a,this.languageService=r,this.changeDetectorRef=o,this.translatePipe=l,this.route=s,this.formCleared=new d.EventEmitter,this.formDataBound=new d.EventEmitter,this.beforeFormSaved=new d.EventEmitter,this.afterFormSaved=new d.EventEmitter,this.beforeFormSubmitted=new d.EventEmitter,this.afterFormSubmitted=new d.EventEmitter,this.fieldComponents=new Array,this.configuration=new Q,this.showProgressIndicator=!0}return e.prototype.ngOnInit=function(){this.bridgeService.parentComponent=this.parentComponent,"string"==typeof this.additionalParameters&&(this.additionalParameters=JSON.parse(this.additionalParameters)),this.bridgeService.additionalParameters=this.additionalParameters,this.bindForm()},e.prototype.clearForm=function(e){try{for(var t=L(this.fieldComponents),n=t.next();!n.done;n=t.next()){n.value.clearValue()}}catch(r){i={error:r}}finally{try{n&&!n.done&&(a=t["return"])&&a.call(t)}finally{if(i)throw i.error}}var i,a;this.configuration.validationErrors=new Array,this.formCleared.emit()},e.prototype.saveForm=function(e){var t,n,i=this;try{for(var a=L(this.recaptchaFieldComponents.toArray()),r=a.next();!r.done;r=a.next()){r.value.validate(null,!0)}}catch(s){t={error:s}}finally{try{r&&!r.done&&(n=a["return"])&&n.call(a)}finally{if(t)throw t.error}}if(this.isFormValid()){this.showProgressIndicator=!0;var o=this.getRequestBody();this.beforeFormSaved.emit(o),console.log(o);var l=this.utilitiesService.replaceTokens(this.configuration.endpoints.save,this.route,this.bridgeService.additionalParameters);this.httpRequestsService.post(l,o).subscribe(function(e){console.log(e),i.afterFormSaved.emit(new ge(!0,e,o)),i.showProgressIndicator=!1,i.configuration.notifications.showResultMessage&&g({title:i.translatePipe.transform(i.configuration.notifications.saveSuccessMessageTitle),html:i.translatePipe.transform(i.configuration.notifications.saveSuccessMessageDetails),type:ne.Success,confirmButtonText:i.languageService.translations.buttons.Ok})},function(e){console.error("saveForm: ",e),i.afterFormSaved.emit(new ge(!1,e,o)),i.showProgressIndicator=!1,i.configuration.notifications.showResultMessage&&g({title:i.translatePipe.transform(i.configuration.notifications.saveErrorMessageTitle),html:i.translatePipe.transform(i.configuration.notifications.saveErrorMessageDetails),type:ne.Error,confirmButtonText:i.languageService.translations.buttons.Ok})})}},e.prototype.submitForm=function(e){var t=this;if(this.validateForm(),this.isFormValid()){this.showProgressIndicator=!0;var n=this.getRequestBody();this.beforeFormSubmitted.emit(n),console.log(n);var i=this.utilitiesService.replaceTokens(this.configuration.endpoints.submit,this.route,this.bridgeService.additionalParameters);this.httpRequestsService.post(i,n).subscribe(function(e){console.log(e),t.afterFormSubmitted.emit(new ge(!0,e,n)),t.showProgressIndicator=!1,t.configuration.notifications.showResultMessage&&g({title:t.translatePipe.transform(t.configuration.notifications.submitSuccessMessageTitle),html:t.translatePipe.transform(t.configuration.notifications.submitSuccessMessageDetails),type:ne.Success,confirmButtonText:t.languageService.translations.buttons.Ok})},function(e){console.error("submitForm: ",e),t.afterFormSubmitted.emit(new ge(!1,e,n)),t.showProgressIndicator=!1,t.configuration.notifications.showResultMessage&&g({title:t.translatePipe.transform(t.configuration.notifications.submitErrorMessageTitle),html:t.translatePipe.transform(t.configuration.notifications.submitErrorMessageDetails),type:ne.Error,confirmButtonText:t.languageService.translations.buttons.Ok})})}else this.validationSummaryComponent.showSummaryAlert()},e.prototype.validateForm=function(){try{for(var e=L(this.fieldComponents),t=e.next();!t.done;t=e.next()){var n=t.value;this.validateFormFieldComponent(n)}}catch(r){i={error:r}}finally{try{t&&!t.done&&(a=e["return"])&&a.call(e)}finally{if(i)throw i.error}}var i,a},e.prototype.isFormValid=function(){return!this.configuration.validationErrors||0===this.configuration.validationErrors.length},e.prototype.getRequestBody=function(){return this.configuration.settings.postMode===te.FormData?this.getFormData():this.getFormValues()},e.prototype.getFormValues=function(){var e,t,n={};try{for(var i=L(this.fieldComponents),a=i.next();!a.done;a=i.next()){var r=a.value;r.field.data&&(n[r.field.name]=r.getValue())}}catch(o){e={error:o}}finally{try{a&&!a.done&&(t=i["return"])&&t.call(i)}finally{if(e)throw e.error}}return n},e.prototype.getFormData=function(){var e,t,n=new FormData;try{for(var i=L(this.fieldComponents),a=i.next();!a.done;a=i.next()){n=a.value.appendFormData(n)}}catch(r){e={error:r}}finally{try{a&&!a.done&&(t=i["return"])&&t.call(i)}finally{if(e)throw e.error}}return n},e.prototype.getComponent=function(t){return this.fieldComponents.find(function(e){return e.field.name===t})},e.prototype.isButtonHidden=function(e){return e&&e.hidden||this.configuration.currentSection&&this.configuration.currentSection.hideButtons&&-1<this.configuration.currentSection.hideButtons.indexOf(e.name)},e.prototype.setFormData=function(e){try{for(var t=L(e.fields),n=t.next();!n.done;n=t.next()){var i=n.value;if(i.value){var a=this.getComponent(i.name);a&&a.updateValue(i)}}}catch(l){r={error:l}}finally{try{n&&!n.done&&(o=t["return"])&&o.call(t)}finally{if(r)throw r.error}}var r,o},e.prototype.bindForm=function(){return q(this,void 0,void 0,function(){var i,a,r,o,l,s,d,c,p,u,f=this;return O(this,function(e){switch(e.label){case 0:return[4,this.loadConfiguration()];case 1:e.sent(),i=this.configuration.mergedFields.filter(function(e){return e.fieldType===ie.DateTime});try{for(a=L(i),r=a.next();!r.done;r=a.next())o=r.value,this.handleDefaultDateTimeSettings(o)}catch(t){d={error:t}}finally{try{r&&!r.done&&(c=a["return"])&&c.call(a)}finally{if(d)throw d.error}}this.changeDetectorRef.detectChanges(),this.fieldComponents=this.fieldComponents.concat(this.inputFieldComponents.toArray(),this.selectFieldComponents.toArray(),this.datetimeFieldComponents.toArray(),this.datetimeHijriFieldComponents.toArray(),this.checkboxFieldComponents.toArray(),this.radiobuttonFieldComponents.toArray(),this.multiSelectFieldComponents.toArray(),this.chipsFieldComponents.toArray(),this.editorFieldComponents.toArray(),this.maskFieldComponents.toArray(),this.timeFieldComponents.toArray(),this.locationFieldComponents.toArray(),this.fileUploadFieldComponents.toArray(),this.imageCropperFieldComponents.toArray(),this.recaptchaFieldComponents.toArray(),this.ratingFieldComponents.toArray()),this.handleDefaultSettings(),this.bindFormData();try{for(l=L(this.locationFieldComponents.toArray()),s=l.next();!s.done;s=l.next())s.value.activateSearchInput()}catch(n){p={error:n}}finally{try{s&&!s.done&&(u=l["return"])&&u.call(l)}finally{if(p)throw p.error}}return this.translateService.onLangChange.subscribe(function(e){f.configuration.settings.formMode===Z.Display&&f.bindFormData();try{for(var t=L(f.recaptchaFieldComponents.toArray()),n=t.next();!n.done;n=t.next()){n.value.setCaptchaLanguge()}}catch(r){i={error:r}}finally{try{n&&!n.done&&(a=t["return"])&&a.call(t)}finally{if(i)throw i.error}}var i,a}),[2]}})})},e.prototype.loadConfiguration=function(){return q(this,void 0,void 0,function(){var t,n,i,a,r,o,l,s;return O(this,function(e){switch(e.label){case 0:return[4,(t=this).utilitiesService.loadFile(this.configurationSourceUrl)];case 1:if(t.configuration=e.sent(),this.configuration.isLocal)return[3,7];if(!this.configuration.settings.sourceFormSchemas)return[3,5];n=this.configuration.settings.sourceFormSchemas.length-1,e.label=2;case 2:return 0<=n?(i=this.configuration.settings.sourceFormSchemas[n],[4,this.utilitiesService.loadFile(i)]):[3,5];case 3:a=e.sent(),this.configuration=this.utilitiesService.mergeRecursive(a,this.configuration),e.label=4;case 4:return n--,[3,2];case 5:return[4,this.utilitiesService.loadFile(this.configuration.settings.allFieldsSource)];case 6:for(s in(r=e.sent()).isLocal||this.localStorageService.save(this.configuration.settings.allFieldsSource,r),this.configuration.mergedFields=new Array,o=function(t){if(l.configuration.fields.hasOwnProperty(t)){var e=r.fields.find(function(e){return e.name===t});if(e){var n=l.utilitiesService.mergeRecursive(e,l.configuration.fields[t]);l.configuration.mergedFields.push(n)}else console.warn("The field "+t+" doesn't exist in the all-fields-list.")}},(l=this).configuration.fields)o(s);this.localStorageService.save(this.configurationSourceUrl,this.configuration),e.label=7;case 7:return this.configuration.sections&&0<this.configuration.sections.length&&(this.configuration.currentSection=this.configuration.sections[0]),this.bridgeService.configuration=this.configuration,[2]}})})},e.prototype.handleDefaultSettings=function(){try{for(var e=L(this.fieldComponents),t=e.next();!t.done;t=e.next()){t.value.handleDefaultSettings()}}catch(a){n={error:a}}finally{try{t&&!t.done&&(i=e["return"])&&i.call(e)}finally{if(n)throw n.error}}var n,i},e.prototype.handleDefaultDateTimeSettings=function(e){e.minDate&&(e.minDateValue=this.utilitiesService.evaluateFunctionOrDefault(e.minDate,new Date(e.minDate))),e.maxDate&&(e.maxDateValue=this.utilitiesService.evaluateFunctionOrDefault(e.maxDate,new Date(e.maxDate))),e.data.dateValue&&(e.data.value=this.utilitiesService.evaluateFunctionOrDefault(e.data.dateValue,new Date(e.data.dateValue))),e.defaultDate&&(e.defaultDateValue=this.utilitiesService.evaluateFunctionOrDefault(e.defaultDate,new Date(e.defaultDate))),e.minDateValue&&e.maxDateValue&&(e.yearRange=e.minDateValue.getFullYear()+":"+e.maxDateValue.getFullYear())},e.prototype.bindFormData=function(){var t=this;if(this.configuration.endpoints.get){var e=this.utilitiesService.replaceTokens(this.configuration.endpoints.get,this.route,this.bridgeService.additionalParameters);this.httpRequestsService.get(e).subscribe(function(e){t.setFormData(e),t.formDataBound.emit(e),t.showProgressIndicator=!1},function(e){console.error("bindFormData: ",e),t.showProgressIndicator=!1,t.configuration.notifications.showResultMessage&&g({title:t.translatePipe.transform(t.configuration.notifications.getErrorMessageTitle),html:t.translatePipe.transform(t.configuration.notifications.getErrorMessageDetails),type:ne.Error,confirmButtonText:t.languageService.translations.buttons.Ok})})}else this.formDataBound.emit(null),this.showProgressIndicator=!1},e.prototype.validateFormFieldComponent=function(e){var t=new Array;return e.field.hidden||(t=e.validate(null,!0)),t},e.prototype.triggerDynamicEvent=function(e,t,n){if(n.eventTriggers){var i=n.eventTriggers[e],a=this.parentComponent[i];a&&a(this.parentComponent,n)}},e.decorators=[{type:d.Component,args:[{selector:"ntw-dynamic-form",template:'<div #container\n     class="container">\n  <form class="dynamic-form-form"\n        #f="ngForm"\n        (ngSubmit)="submitForm(f)"\n        [hidden]="showProgressIndicator"\n        autocomplete="on">\n    <div class="dynamic-form">\n      <div class="sections sections-top"\n           *ngIf="configuration?.settings?.sectionLocation == \'Top\' || configuration?.settings?.sectionLocation == \'Both\'">\n        \x3c!-- section tabs --\x3e\n        <ntw-tabs-section *ngIf="configuration?.settings?.sectionMode == \'Tabs\'"></ntw-tabs-section>\n\n        \x3c!-- next previous --\x3e\n        <ntw-next-previous-section *ngIf="configuration?.settings?.sectionMode == \'NextPrevious\'"></ntw-next-previous-section>\n      </div>\n\n      <div class="clearfix"></div>\n\n      \x3c!-- form --\x3e\n      <div class="form-container row">\n        <div [class]="field.cssClasses.wrapper"\n             *ngFor="let field of configuration?.mergedFields">\n\n          \x3c!-- info --\x3e\n          <ntw-info-field [field]="field"\n                          *ngIf="field.fieldType==\'info\'">\n          </ntw-info-field>\n\n          \x3c!-- text or number or password --\x3e\n          <ntw-input-field [field]="field"\n                           *ngIf="(field.fieldType==\'text\' || field.fieldType==\'number\' || field.fieldType==\'password\')">\n          </ntw-input-field>\n\n          \x3c!-- dropdown list --\x3e\n          <ntw-select-field [field]="field"\n                            *ngIf="field.fieldType==\'select\'">\n          </ntw-select-field>\n\n          \x3c!-- datetime picker --\x3e\n          <ntw-datetime-field [field]="field"\n                              *ngIf="field.fieldType==\'datetime\'">\n          </ntw-datetime-field>\n\n          \x3c!-- hijri datetime picker --\x3e\n          <ntw-datetime-hijri-field [field]="field"\n                                    *ngIf="field.fieldType==\'datetimehijri\'">\n          </ntw-datetime-hijri-field>\n\n          \x3c!-- time picker --\x3e\n          <ntw-time-field [field]="field"\n                          *ngIf="field.fieldType==\'time\'">\n          </ntw-time-field>\n\n          \x3c!-- checkbox list --\x3e\n          <ntw-checkbox-field [field]="field"\n                              *ngIf="field.fieldType==\'checkbox\'">\n          </ntw-checkbox-field>\n\n          \x3c!-- radiobutton list --\x3e\n          <ntw-radiobutton-field [field]="field"\n                                 *ngIf="field.fieldType==\'radiobutton\'">\n          </ntw-radiobutton-field>\n\n          \x3c!-- multiSelect list --\x3e\n          <ntw-multi-select-field [field]="field"\n                                  *ngIf="field.fieldType==\'multiselect\'">\n          </ntw-multi-select-field>\n\n          \x3c!-- chips --\x3e\n          <ntw-chips-field [field]="field"\n                           *ngIf="field.fieldType==\'chips\'">\n          </ntw-chips-field>\n\n          \x3c!-- editor --\x3e\n          <ntw-editor-field [field]="field"\n                            *ngIf="field.fieldType==\'editor\'">\n          </ntw-editor-field>\n\n          \x3c!-- mask --\x3e\n          <ntw-mask-field [field]="field"\n                          *ngIf="field.fieldType==\'mask\'">\n          </ntw-mask-field>\n\n          \x3c!-- location --\x3e\n          <ntw-location-field [field]="field"\n                              *ngIf="field.fieldType==\'location\'">\n          </ntw-location-field>\n\n          \x3c!-- file upload --\x3e\n          <ntw-file-upload-field [field]="field"\n                                 *ngIf="field.fieldType==\'fileupload\'">\n          </ntw-file-upload-field>\n\n          \x3c!-- Rating --\x3e\n          <ntw-rating-field [field]="field"\n                            *ngIf="field.fieldType==\'rating\'">\n          </ntw-rating-field>\n\n          \x3c!-- recaptcha --\x3e\n          <ntw-recaptcha-field [field]="field"\n                               *ngIf="field.fieldType==\'recaptcha\'">\n          </ntw-recaptcha-field>\n\n          \x3c!-- image cropper --\x3e\n          <ntw-image-cropper-field [field]="field"\n                                   *ngIf="field.fieldType==\'imagecropper\'">\n          </ntw-image-cropper-field>\n\n          \x3c!-- masterdetail --\x3e\n          <ntw-master-detail-field [field]="field"\n                                   *ngIf="field.fieldType==\'masterdetail\'">\n          </ntw-master-detail-field>\n        </div>\n      </div>\n\n      <div class="clearfix"></div>\n\n      \x3c!-- validation summary --\x3e\n      <ntw-validation-summary></ntw-validation-summary>\n\n      \x3c!-- buttons --\x3e\n      <div [class]="configuration?.buttons?.cssClass"\n           data-html2canvas-ignore="true">\n        <span class="main-buttons"\n              *ngIf="configuration?.settings?.formMode != \'Display\'">\n          <button type="button"\n                  [name]="configuration?.buttons?.main?.clear?.name"\n                  [title]="configuration?.buttons?.main?.clear?.tooltip | translate"\n                  [disabled]="configuration?.buttons?.main?.clear?.disabled"\n                  [hidden]="isButtonHidden(configuration?.buttons?.main?.clear)"\n                  [class]="configuration?.buttons?.main?.clear?.cssClass"\n                  (click)="clearForm(f)">\n            {{configuration?.buttons?.main?.clear?.label | translate}}\n          </button>\n          <button type="button"\n                  [name]="configuration?.buttons?.main?.save?.name"\n                  [title]="configuration?.buttons?.main?.save?.tooltip | translate"\n                  [disabled]="configuration?.buttons?.main?.save?.disabled"\n                  [hidden]="isButtonHidden(configuration?.buttons?.main?.save)"\n                  [class]="configuration?.buttons?.main?.save?.cssClass"\n                  (click)="saveForm(f)">\n            {{configuration?.buttons?.main?.save?.label | translate}}\n          </button>\n          <button type="submit"\n                  [name]="configuration?.buttons?.main?.submit?.name"\n                  [title]="configuration?.buttons?.main?.submit?.tooltip | translate"\n                  [disabled]="configuration?.buttons?.main?.submit?.disabled"\n                  [hidden]="isButtonHidden(configuration?.buttons?.main?.submit)"\n                  [class]="configuration?.buttons?.main?.submit?.cssClass">\n            {{configuration?.buttons?.main?.submit?.label | translate}}\n          </button>\n        </span>\n\n        <span class="additional-buttons">\n          <button *ngFor="let button of configuration?.buttons?.additionalButtons"\n                  type="button"\n                  [name]="button?.name"\n                  [title]="button?.tooltip | translate"\n                  [disabled]="button?.disabled"\n                  [hidden]="isButtonHidden(button)"\n                  [class]="button?.cssClass"\n                  (click)="triggerDynamicEvent(\'click\', $event, button);">\n            {{button?.label | translate}}\n          </button>\n        </span>\n      </div>\n\n      <div class="sections sections-bottom"\n           *ngIf="configuration?.settings?.sectionLocation == \'Bottom\' || configuration?.settings?.sectionLocation == \'Both\'">\n        \x3c!-- section tabs --\x3e\n        <ntw-tabs-section *ngIf="configuration?.settings?.sectionMode == \'Tabs\'"></ntw-tabs-section>\n\n        \x3c!-- next previous --\x3e\n        <ntw-next-previous-section *ngIf="configuration?.settings?.sectionMode == \'NextPrevious\'"></ntw-next-previous-section>\n      </div>\n    </div>\n  </form>\n\n  <div class="clearfix"></div>\n\n  <ntw-progress-indicator *ngIf="showProgressIndicator"\n                          [spinnerSourceUrl]="configuration?.settings?.spinnerSourceUrl"></ntw-progress-indicator>\n</div>\n',styles:[".formButtons{margin:20px 0}body.ar .main-buttons button{margin-left:10px}body.en .main-buttons button{margin-right:10px}body.ar{direction:rtl!important;text-align:right!important}body.en{direction:ltr!important;text-align:left!important}.ui-dropdown,input.form-input,input.ui-inputtext.ui-widget.ui-state-default,p-dropdown{width:100%!important;height:35px}.input-container{margin-top:24px}label.form-label{font-weight:700}span.required-asterisk{color:red}p.error,p.validation-error{display:block;color:red}.result img{width:150px;height:150px}.form-display{display:block}w-clock *{box-sizing:content-box!important}"],providers:[n.TranslatePipe,P,K],encapsulation:d.ViewEncapsulation.None}]}],e.ctorParameters=function(){return[{type:P},{type:N},{type:B},{type:K},{type:n.TranslateService},{type:_},{type:d.ChangeDetectorRef},{type:n.TranslatePipe},{type:s.ActivatedRoute,decorators:[{type:d.Optional}]}]},e.propDecorators={configurationSourceUrl:[{type:d.Input,args:["configurationSourceUrl"]}],parentComponent:[{type:d.Input,args:["parentComponent"]}],additionalParameters:[{type:d.Input,args:["additionalParameters"]}],formCleared:[{type:d.Output}],formDataBound:[{type:d.Output}],beforeFormSaved:[{type:d.Output}],afterFormSaved:[{type:d.Output}],beforeFormSubmitted:[{type:d.Output}],afterFormSubmitted:[{type:d.Output}],containerElement:[{type:d.ViewChild,args:["container"]}],validationSummaryComponent:[{type:d.ViewChild,args:[We]}],inputFieldComponents:[{type:d.ViewChildren,args:[Pe]}],selectFieldComponents:[{type:d.ViewChildren,args:[je]}],datetimeFieldComponents:[{type:d.ViewChildren,args:[Ie]}],datetimeHijriFieldComponents:[{type:d.ViewChildren,args:[De]}],checkboxFieldComponents:[{type:d.ViewChildren,args:[ke]}],radiobuttonFieldComponents:[{type:d.ViewChildren,args:[Ue]}],multiSelectFieldComponents:[{type:d.ViewChildren,args:[Le]}],chipsFieldComponents:[{type:d.ViewChildren,args:[Fe]}],editorFieldComponents:[{type:d.ViewChildren,args:[Me]}],maskFieldComponents:[{type:d.ViewChildren,args:[Ae]}],timeFieldComponents:[{type:d.ViewChildren,args:[Ne]}],locationFieldComponents:[{type:d.ViewChildren,args:[Re]}],fileUploadFieldComponents:[{type:d.ViewChildren,args:[Te]}],imageCropperFieldComponents:[{type:d.ViewChildren,args:[Ve]}],recaptchaFieldComponents:[{type:d.ViewChildren,args:[Be]}],ratingFieldComponents:[{type:d.ViewChildren,args:[He]}]},e}(),Ge=function(){function e(){}return e.decorators=[{type:d.NgModule,args:[{declarations:[we,ye,ve,xe,Ce,Se,Pe,je,Ie,De,ke,Ue,Le,Fe,Me,Ae,Ne,Re,Te,Be,Ee,Oe,Ve,He,ze,_e,We,$e,qe,Ke],imports:[c.CommonModule,y.BrowserModule,l.FormsModule,b.BrowserAnimationsModule,w.FlexLayoutModule,C.InputTextModule,S.CalendarModule,k.CheckboxModule,F.RadioButtonModule,p.FileUploadModule,T.EditorModule,m.InputMaskModule,M.ChipsModule,I.DropdownModule,D.MultiSelectModule,a.MatDialogModule,a.MatToolbarModule,a.MatInputModule,a.MatSnackBarModule,a.MatButtonModule,a.MatButtonToggleModule,a.MatFormFieldModule,a.MatIconModule,a.MatSelectModule,u.ImageCropperModule,V.RatingModule,h.RecaptchaCommonModule,v.RecaptchaModule.forRoot(),t.NgbModule.forRoot(),n.TranslateModule.forRoot({loader:{provide:n.TranslateLoader,useFactory:Qe,deps:[i.HttpClient]}}),f.AgmCoreModule.forRoot({apiKey:"AIzaSyDkk4mAY1r5Q-abux5POCscTR0LojWMwUo",libraries:["places"],region:"LB",language:"en"})],entryComponents:[qe,we,ye],exports:[we,ye,ve,xe,Ce,Se,Pe,je,Ie,De,ke,Ue,Le,Fe,Me,Ae,Ne,Re,Te,Be,Ee,Oe,Ve,He,ze,_e,We,$e,qe,Ke]}]}],e}();function Qe(e){return new x.TranslateHttpLoader(e)}e.coreDirectives=E.coreDirectives,e.AgmCoreModule=E.AgmCoreModule,e.BridgeService=P,e.IslamicI18n=H,e.ExportService=j,e.HttpRequestsService=N,e.LanguageService=_,e.LocalStorageService=B,e.UtilitiesService=K,e.AllFields=G,e.Configuration=Q,e.DefaultLocation=Y,e.Endpoints=J,e.FormModes=Z,e.ValidationSummaryModes=X,e.SectionModes=ee,e.PostModes=te,e.SwalTypes=ne,e.FieldTypes=ie,e.Field=ae,e.FieldData=re,e.FieldValidation=oe,e.InputError=le,e.Marker=se,e.MarkerSettings=de,e.MarkerSettingsDefault=ce,e.MasterDetailDetails=pe,e.Notifications=ue,e.Section=fe,e.Settings=me,e.ResponseEventArgs=ge,e.WMatTimePickerComponent=we,e.WTimeDialogComponent=ye,e.UserTimeData=be,e.CLOCK_TYPE=he,e.WClockComponent=ve,e.WTimeComponent=xe,e.FieldComponent=Ce,e.BoundableFieldComponent=Se,e.CheckboxFieldComponent=ke,e.ChipsFieldComponent=Fe,e.DatetimeFieldComponent=Ie,e.DatetimeHijriFieldComponent=De,e.EditorFieldComponent=Me,e.FileUploadFieldComponent=Te,e.ImageCropperFieldComponent=Ve,e.InfoFieldComponent=Ee,e.InputFieldComponent=Pe,e.LocationFieldComponent=Re,e.MaskFieldComponent=Ae,e.MasterDetailFieldComponent=Oe,e.MultiSelectFieldComponent=Le,e.RadiobuttonFieldComponent=Ue,e.RatingFieldComponent=He,e.SelectFieldComponent=je,e.TimeFieldComponent=Ne,e.RecaptchaFieldComponent=Be,e.DefaultMasterDetailFormComponent=qe,e.NextPreviousSectionComponent=_e,e.TabsSectionComponent=ze,e.ValidationSummaryComponent=We,e.ProgressIndicatorComponent=$e,e.DynamicFormComponent=Ke,e.NetwaysLibModule=Ge,e.HttpLoaderFactory=Qe,e.ɵg=ae,e.ɵa=P,e.ɵf=H,e.ɵb=N,e.ɵe=_,e.ɵd=B,e.ɵc=K,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=netways-lib.umd.min.js.map